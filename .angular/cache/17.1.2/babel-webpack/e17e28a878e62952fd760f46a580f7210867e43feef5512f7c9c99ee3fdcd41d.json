{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientpagePage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./patientpage.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./patientpage.page.scss?ngResource\";\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { getConsultations, medecinUid, savePatient, getPatientByUid, getDocuments } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nlet PatientpagePage = (_PatientpagePage = class PatientpagePage {\n  constructor(storage, firestore, toastController, modalController, cdr, router) {\n    this.storage = storage;\n    this.firestore = firestore;\n    this.toastController = toastController;\n    this.modalController = modalController;\n    this.cdr = cdr;\n    this.router = router;\n    this.Vfiche = true;\n    this.Vconsultation = false;\n    this.Vdocument = false;\n    this.uid = '';\n    this.nom = '';\n    this.prenom = '';\n    this.age = 0;\n    this.adresse = '';\n    this.telephone = '';\n    this.sexe = '';\n    this.groupeSanguin = '';\n    this.situationFamiliale = '';\n    this.profession = '';\n    this.email = '';\n    this.telephone2 = '';\n    this.numeroAssurance = '';\n    this.note = '';\n    this.antecedentsMedicaux = '';\n    this.antecedentsChirurgicaux = '';\n    this.antecedentsFamiliaux = '';\n    this.autresAntecedents = '';\n    this.medicaments = '';\n    this.description = '';\n    this.selectedFile = null;\n    this.selectedFileUrl = null;\n    this.documents = [];\n    this.consultationDate = ''; // Variable pour stocker la date de consultation\n    this.searchDescription = '';\n    this.rendezVousData = {};\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const doc = yield getDocuments(_this.firestore, medecinUid.uid, patientUidA);\n      console.log(doc);\n      console.log(patientUidA);\n      _this.getdocument();\n      try {\n        _this.patient = yield getPatientByUid(_this.firestore, medecinUid.uid, patientUidA);\n        if (_this.patient) {\n          _this.nom = _this.patient.nom;\n          _this.prenom = _this.patient.prenom;\n          _this.sexe = _this.patient.sexe;\n          _this.groupeSanguin = _this.patient.groupeSanguin;\n          _this.age = _this.patient.age;\n          _this.adresse = _this.patient.adresse;\n          _this.telephone = _this.patient.telephone;\n          _this.situationFamiliale = _this.patient.situationFamiliale;\n          _this.profession = _this.patient.profession;\n          _this.email = _this.patient.email;\n          _this.telephone2 = _this.patient.telephone2;\n          _this.numeroAssurance = _this.patient.numeroAssurance;\n          _this.note = _this.patient.note;\n          _this.antecedentsMedicaux = _this.patient.antecedentsMedicaux;\n          _this.antecedentsChirurgicaux = _this.patient.antecedentsChirurgicaux;\n          _this.antecedentsFamiliaux = _this.patient.antecedentsFamiliaux;\n          _this.autresAntecedents = _this.patient.autresAntecedents;\n          _this.medicaments = _this.patient.medicaments;\n          console.log('patient', _this.patient);\n          const uuid = _this.patient.useruid;\n        }\n        yield _this.loadConsultations();\n        console.log('rdv', _this.rdv);\n      } catch (error) {\n        console.error('Erreur lors de l\\'initialisation de la page :', error);\n      }\n    })();\n  }\n  back() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.router.navigate(['/patient']);\n      console.log('going to patient');\n    })();\n  }\n  loadConsultations() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultations = yield getConsultations(_this3.firestore, medecinUid.uid, patientUidA);\n        console.log('consultations', consultations);\n        if (consultations && consultations.length > 0) {\n          _this3.consultations = consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n        } else {\n          console.log('Aucune consultation trouvée pour ce patient.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des consultations du patient :', error);\n      }\n    })();\n  }\n  saveFichePatient() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        console.log('Données de la fiche patient à sauvegarder :', _this4.adresse, _this4.age, _this4.antecedentsChirurgicaux, _this4.antecedentsFamiliaux, _this4.antecedentsMedicaux, _this4.autresAntecedents, _this4.email, _this4.medicaments, _this4.groupeSanguin, _this4.nom, _this4.note, _this4.numeroAssurance, _this4.prenom, _this4.profession, _this4.sexe, _this4.situationFamiliale, _this4.telephone, _this4.telephone2, _this4.uid);\n        yield savePatient(_this4.firestore, _this4.adresse, _this4.age, _this4.antecedentsChirurgicaux, _this4.antecedentsFamiliaux, _this4.antecedentsMedicaux, _this4.autresAntecedents, _this4.email, _this4.medicaments, _this4.groupeSanguin, _this4.nom, _this4.note, _this4.numeroAssurance, _this4.prenom, _this4.profession, _this4.sexe, _this4.situationFamiliale, _this4.telephone, _this4.telephone2, patientUidA, medecinUid.uid);\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n      }\n    })();\n  }\n  fiche() {\n    this.Vconsultation = false;\n    this.Vdocument = false;\n    this.Vfiche = true;\n  }\n  consultation() {\n    this.Vconsultation = true;\n    this.Vdocument = false;\n    this.Vfiche = false;\n  }\n  document() {\n    this.Vconsultation = false;\n    this.Vdocument = true;\n    this.Vfiche = false;\n  }\n  onFileSelected(event) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const file = event.target.files[0];\n      _this5.selectedFile = file;\n      if (file instanceof File) {\n        try {\n          // Générer un ID unique pour le fichier\n          const fileId = Math.random().toString(36).substring(2);\n          const filePath = `documents/${fileId}_${file.name}`;\n          // Uploader le fichier dans Firebase Storage\n          const fileRef = _this5.storage.ref(filePath);\n          const uploadTask = _this5.storage.upload(filePath, file);\n          // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n          uploadTask.snapshotChanges().pipe(finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n            const fileUrl = yield fileRef.getDownloadURL().toPromise();\n            // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n            console.log('Lien permanent du fichier :', fileUrl);\n            // Enregistrer la description dans une variable\n            const description = _this5.description;\n            // Vérifier si la description est fournie\n            if (description) {\n              // Ajouter le document avec le lien permanent dans Firestore\n              const docRef = _this5.firestore.collection('medecin').doc(medecinUid.uid).collection('documents').doc();\n              yield docRef.set({\n                medecinUid: medecinUid.uid,\n                patientUid: patientUidA,\n                url: fileUrl,\n                description: description\n              });\n              _this5.getdocument();\n              console.log('Document ajouté avec succès.');\n            } else {\n              console.error('La description est obligatoire pour télécharger le fichier.');\n            }\n          }))).subscribe();\n        } catch (error) {\n          console.error('Erreur lors de l\\'ajout du document :', error);\n        }\n      }\n    })();\n  }\n  envoyer() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.selectedFile) {\n        console.error('Aucun fichier sélectionné.');\n        return;\n      }\n      // Vérifier si la description est vide\n      if (!_this6.description) {\n        const toast = yield _this6.toastController.create({\n          message: 'La description est obligatoire.',\n          duration: 1500,\n          // Durée du toast en millisecondes\n          position: 'top',\n          // Position du toast (peut être 'top', 'bottom', 'middle')\n          color: 'danger' // Couleur du toast\n        });\n        yield toast.present();\n        return;\n      }\n      // Générer un ID unique pour le fichier\n      const fileId = _this6.firestore.createId();\n      // Chemin de stockage dans Firebase Storage\n      const filePath = `documents/${fileId}`;\n      try {\n        var _this6$patient, _this6$patient2;\n        // Télécharger le fichier vers Firebase Storage\n        const fileRef = _this6.storage.ref(filePath);\n        const uploadTask = _this6.storage.upload(filePath, _this6.selectedFile);\n        // Attendre la fin du téléchargement\n        yield uploadTask.then();\n        // Récupérer l'URL du fichier téléchargé\n        const fileUrl = yield fileRef.getDownloadURL().toPromise();\n        // Enregistrer les métadonnées dans Firestore\n        yield _this6.firestore.collection('documents').doc(fileId).set({\n          useruid: (_this6$patient = _this6.patient) === null || _this6$patient === void 0 ? void 0 : _this6$patient.useruid,\n          url: fileUrl,\n          description: _this6.description\n          // Ajoutez d'autres champs si nécessaire\n        });\n        const documents = yield getDocuments(_this6.firestore, medecinUid.uid, patientUidA);\n        if (documents && documents.length > 0) {\n          _this6.documents = documents;\n        }\n        console.log('Fichier téléchargé et enregistré avec succès.');\n        const docu = {\n          url: fileUrl,\n          description: _this6.description,\n          med: medecinUid.uid\n        };\n        const medref = yield _this6.firestore.collection('inscrits').doc((_this6$patient2 = _this6.patient) === null || _this6$patient2 === void 0 ? void 0 : _this6$patient2.useruid).collection('document').add(docu);\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du fichier :', error);\n      }\n    })();\n  }\n  getdocument() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const documents = yield getDocuments(_this7.firestore, medecinUid.uid, patientUidA);\n      if (documents && documents.length > 0) {\n        _this7.documents = documents;\n      }\n    })();\n  }\n  closeModal() {\n    this.modalController.dismiss();\n  }\n  editConsultation(consultationdate) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      consultationdate1 = consultationdate.date;\n      _this8.router.navigate(['/consultation-modif']);\n    })();\n  }\n  searchConsultations() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (!_this9.consultationDate) {\n          console.log('Veuillez sélectionner une date de consultation.');\n          return;\n        }\n        // Filtrer les consultations pour la date spécifiée\n        _this9.consultations = _this9.consultations.filter(consultation => consultation.date === _this9.consultationDate);\n        if (_this9.consultations.length === 0) {\n          console.log('Aucune consultation trouvée pour la date spécifiée.');\n        } else {\n          console.log('Consultations trouvées pour la date', _this9.consultationDate, ':', _this9.consultations);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la recherche des consultations pour la date :', error);\n      }\n    })();\n  }\n  searchDocumentsByDescription(description) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (!description) {\n          console.log('Veuillez entrer une description.');\n          return;\n        }\n        // Filtrer les documents pour la description spécifiée\n        const filteredDocuments = _this10.documents.filter(document => document.description === description);\n        if (filteredDocuments.length > 0) {\n          console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n          _this10.documents = filteredDocuments;\n        } else {\n          console.log('Aucun document trouvé avec la description', description);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la recherche des documents pour la description :', error);\n      }\n    })();\n  }\n}, _PatientpagePage.ctorParameters = () => [{\n  type: AngularFireStorage\n}, {\n  type: AngularFirestore\n}, {\n  type: ToastController\n}, {\n  type: ModalController\n}, {\n  type: ChangeDetectorRef\n}, {\n  type: Router\n}], _PatientpagePage);\nPatientpagePage = __decorate([Component({\n  selector: 'app-patientpage',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], PatientpagePage);\nexport { PatientpagePage };\nexport let consultationdate1;","map":{"version":3,"names":["Component","ChangeDetectorRef","AngularFirestore","ModalController","ToastController","getConsultations","medecinUid","savePatient","getPatientByUid","getDocuments","patientUidA","Router","finalize","AngularFireStorage","PatientpagePage","_PatientpagePage","constructor","storage","firestore","toastController","modalController","cdr","router","Vfiche","Vconsultation","Vdocument","uid","nom","prenom","age","adresse","telephone","sexe","groupeSanguin","situationFamiliale","profession","email","telephone2","numeroAssurance","note","antecedentsMedicaux","antecedentsChirurgicaux","antecedentsFamiliaux","autresAntecedents","medicaments","description","selectedFile","selectedFileUrl","documents","consultationDate","searchDescription","rendezVousData","ngOnInit","_this","_asyncToGenerator","doc","console","log","getdocument","patient","uuid","useruid","loadConsultations","rdv","error","back","_this2","navigate","_this3","consultations","length","sort","a","b","Date","date","getTime","saveFichePatient","_this4","fiche","consultation","document","onFileSelected","event","_this5","file","target","files","File","fileId","Math","random","toString","substring","filePath","name","fileRef","ref","uploadTask","upload","snapshotChanges","pipe","fileUrl","getDownloadURL","toPromise","docRef","collection","set","patientUid","url","subscribe","envoyer","_this6","toast","create","message","duration","position","color","present","createId","_this6$patient","_this6$patient2","then","docu","med","medref","add","_this7","closeModal","dismiss","editConsultation","consultationdate","_this8","consultationdate1","searchConsultations","_this9","filter","searchDocumentsByDescription","_this10","filteredDocuments","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patientpage\\patientpage.page.ts"],"sourcesContent":["import { Component,ChangeDetectorRef, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController, ToastController } from '@ionic/angular';\nimport { getConsultations, getFichePatient, getRdvByPatientUid, medecinUid, savePatient,getPatientByUid, getDocuments, getDocumentsByMedecin } from 'src/firebaseConfig';\nimport {  patientUidA } from '../patient/patient.page';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\n\n\n\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string; // Ajout de la propriété medecinNom comme optionnelle\n  medecinPrenom?: string; \n  medecinuid:string;// Ajout de la propriété medecinPrenom comme optionnelle\n  key:string ;\n  excuse?:string;\n  statut?:string;\n}\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\ninterface PatientData{\n  uid:string;\n  nom: string;\n  prenom: string;\n  age: number;\n  sexe: string;\n  groupeSanguin: string;\n  situationFamiliale: string;\n  profession: string;\n  email: string;\n  telephone: string;\n  telephone2: string;\n  numeroAssurance: string;\n  adresse: string;\n  note: string;\n  antecedentsMedicaux: string;\n  antecedentsChirurgicaux: string;\n  antecedentsFamiliaux: string;\n  autresAntecedents: string;\n  medicaments: string;\n  useruid:string;\n}\ninterface Documentdata{\n  url :string;\n  description:string;\n}\n@Component({\n  selector: 'app-patientpage',\n  templateUrl: './patientpage.page.html',\n  styleUrls: ['./patientpage.page.scss'],\n})\n\n\nexport class PatientpagePage implements OnInit {\n  rendezVousData!: RendezVousData;\n  Vfiche: boolean = true;\n  Vconsultation: boolean = false;\n  Vdocument: boolean = false;\n \n    uid:string='';\n    nom:string='';\n    prenom:string='';\n    age:number=0;\n    adresse:string='';\n    telephone:string='';\n    sexe:string='';\n    groupeSanguin:string='';\n    situationFamiliale:string='';\n    profession:string='';\n    email:string='';\n    telephone2:string='';\n    numeroAssurance:string='';\n    note:string='';\n    antecedentsMedicaux:string='';\n    antecedentsChirurgicaux:string='';\n    antecedentsFamiliaux:string='';\n    autresAntecedents:string='';\n    medicaments:string='';\n    description:string='';\n\n\n  rdv: RendezVousData[] | null | undefined;\n  patient: PatientData | null | undefined;\n  consultations!: consultationData[];\n  selectedFile: File | null = null;\n  selectedFileUrl: string | null = null;\n  documents:Documentdata[]=[];\n  consultationDate: string = ''; // Variable pour stocker la date de consultation\n  searchDescription:string='';\n\n\n  constructor(private storage : AngularFireStorage ,private firestore: AngularFirestore,private toastController :ToastController, private modalController: ModalController, private cdr: ChangeDetectorRef, private router: Router) {\n    this.rendezVousData = {} as RendezVousData;\n  }\n\n  async ngOnInit() {\n    const doc=await getDocuments(this.firestore,medecinUid.uid,patientUidA)\n    console.log(doc)\n    console.log(patientUidA)\n    this.getdocument()\n  \n    try {\n      this.patient = await getPatientByUid(this.firestore, medecinUid.uid, patientUidA);\n      if(this.patient){\n      this.nom=this.patient.nom;\n      this.prenom=this.patient.prenom;\n      this.sexe=this.patient.sexe;\n      this.groupeSanguin=this.patient.groupeSanguin;\n      this.age=this.patient.age;\n      this.adresse=this.patient.adresse;\n      this.telephone=this.patient.telephone;\n      this.situationFamiliale=this.patient.situationFamiliale;\n      this.profession=this.patient.profession;\n      this.email=this.patient.email;\n      this.telephone2=this.patient.telephone2;\n      this.numeroAssurance=this.patient.numeroAssurance;\n      this.note=this.patient.note;\n      this.antecedentsMedicaux=this.patient.antecedentsMedicaux;\n      this.antecedentsChirurgicaux=this.patient.antecedentsChirurgicaux;\n      this.antecedentsFamiliaux=this.patient.antecedentsFamiliaux;\n      this.autresAntecedents=this.patient.autresAntecedents;\n      this.medicaments=this.patient.medicaments;\n\n      \n      console.log('patient', this.patient);\n      \n     const uuid=this.patient.useruid;\n    }\n      await this.loadConsultations();\n      console.log('rdv', this.rdv);\n    } catch (error) {\n      console.error('Erreur lors de l\\'initialisation de la page :', error);\n    }\n  }\n  async back(){\n    \n    this.router.navigate(['/patient']);\n    console.log('going to patient')\n  }\n  async loadConsultations() {\n    try {\n      const consultations = await getConsultations(this.firestore, medecinUid.uid, patientUidA);\n      console.log('consultations', consultations);\n  \n      if (consultations && consultations.length > 0) {\n        this.consultations = consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }\n  \n\n  async saveFichePatient() {\n    try {\n        console.log('Données de la fiche patient à sauvegarder :', this.adresse,this.age,this.antecedentsChirurgicaux,this.antecedentsFamiliaux,this.antecedentsMedicaux,this.autresAntecedents,this.email,this.medicaments,this.groupeSanguin,this.nom,this.note,this.numeroAssurance,this.prenom,this.profession,this.sexe,this.situationFamiliale,this.telephone,this.telephone2,this.uid);\n        await savePatient(this.firestore, this.adresse,this.age,this.antecedentsChirurgicaux,this.antecedentsFamiliaux,this.antecedentsMedicaux,this.autresAntecedents,this.email,this.medicaments,this.groupeSanguin,this.nom,this.note,this.numeroAssurance,this.prenom,this.profession,this.sexe,this.situationFamiliale,this.telephone,this.telephone2,patientUidA, medecinUid.uid);\n      \n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n    }\n  }\n\n  fiche() {\n    this.Vconsultation = false;\n    this.Vdocument = false;\n    this.Vfiche = true;\n  }\n\n  consultation() {\n    this.Vconsultation = true;\n    this.Vdocument = false;\n    this.Vfiche = false;\n  }\n\n  document() {\n    this.Vconsultation = false;\n    this.Vdocument = true;\n    this.Vfiche = false;\n  }\n\n \n \n\n  async onFileSelected(event: any) {\n    const file: File | null = event.target.files[0];\n    this.selectedFile = file;\n  \n    if (file instanceof File) {\n      try {\n        // Générer un ID unique pour le fichier\n        const fileId = Math.random().toString(36).substring(2);\n        const filePath = `documents/${fileId}_${file.name}`;\n  \n        // Uploader le fichier dans Firebase Storage\n        const fileRef = this.storage.ref(filePath);\n        const uploadTask = this.storage.upload(filePath, file);\n  \n        // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n        uploadTask.snapshotChanges().pipe(\n          finalize(async () => {\n            const fileUrl = await fileRef.getDownloadURL().toPromise();\n  \n            // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n            console.log('Lien permanent du fichier :', fileUrl);\n  \n            // Enregistrer la description dans une variable\n            const description = this.description;\n  \n            // Vérifier si la description est fournie\n            if (description) {\n              // Ajouter le document avec le lien permanent dans Firestore\n              const docRef = this.firestore.collection('medecin').doc(medecinUid.uid).collection('documents').doc();\n              await docRef.set({\n                medecinUid: medecinUid.uid,\n                patientUid: patientUidA,\n                url: fileUrl,\n                description: description\n              });\n              this.getdocument();\n              console.log('Document ajouté avec succès.');\n            } else {\n              console.error('La description est obligatoire pour télécharger le fichier.');\n            }\n          })\n        ).subscribe();\n  \n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du document :', error);\n      }\n    }\n  }\n  \n  async envoyer() {\n    if (!this.selectedFile) {\n      console.error('Aucun fichier sélectionné.');\n      return;\n    }\n  \n    // Vérifier si la description est vide\n    if (!this.description) {\n      \n      const toast = await this.toastController.create({\n        message: 'La description est obligatoire.',\n        duration: 1500, // Durée du toast en millisecondes\n        position: 'top', // Position du toast (peut être 'top', 'bottom', 'middle')\n        color: 'danger', // Couleur du toast\n      });\n      await toast.present();\n      return;\n    }\n  \n    // Générer un ID unique pour le fichier\n    const fileId = this.firestore.createId();\n  \n    // Chemin de stockage dans Firebase Storage\n    const filePath = `documents/${fileId}`;\n  \n    try {\n      // Télécharger le fichier vers Firebase Storage\n      const fileRef = this.storage.ref(filePath);\n      const uploadTask = this.storage.upload(filePath, this.selectedFile);\n  \n      // Attendre la fin du téléchargement\n      await uploadTask.then();\n  \n      // Récupérer l'URL du fichier téléchargé\n      const fileUrl = await fileRef.getDownloadURL().toPromise();\n  \n      // Enregistrer les métadonnées dans Firestore\n      await this.firestore.collection('documents').doc(fileId).set({\n        useruid:this.patient?.useruid,\n        url: fileUrl,\n        description: this.description,\n        // Ajoutez d'autres champs si nécessaire\n      });\n      const documents = await getDocuments(this.firestore, medecinUid.uid, patientUidA);\n      if (documents && documents.length > 0) {\n        this.documents = documents;}\n      console.log('Fichier téléchargé et enregistré avec succès.');\n\n        const docu = {\n          url: fileUrl,\n          description: this.description,\n          med:medecinUid.uid,\n        }\n        const medref =await this.firestore.collection('inscrits').doc(this.patient?.useruid).collection('document').add(docu);\n      \n\n\n\n\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du fichier :', error);\n    }\n    }\n  \n\n  async getdocument(){\n    const documents=await  getDocuments(this.firestore,medecinUid.uid,patientUidA);\n    if (documents && documents.length > 0) {\n      this.documents=documents;\n\n  }\n  }\n  \n  closeModal() {\n    this.modalController.dismiss();\n  }\n  async editConsultation(consultationdate: consultationData) {\n    consultationdate1=consultationdate.date;\n    this.router.navigate(['/consultation-modif']);\n  }\n\n\n\n\n\n  async searchConsultations() {\n    try {\n      if (!this.consultationDate) {\n        console.log('Veuillez sélectionner une date de consultation.');\n        return;\n      }\n  \n      // Filtrer les consultations pour la date spécifiée\n      this.consultations = this.consultations.filter(consultation => consultation.date === this.consultationDate);\n  \n      if (this.consultations.length === 0) {\n        console.log('Aucune consultation trouvée pour la date spécifiée.');\n      } else {\n        console.log('Consultations trouvées pour la date', this.consultationDate, ':', this.consultations);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la recherche des consultations pour la date :', error);\n    }\n  }\n  async searchDocumentsByDescription(description: string) {\n    try {\n      if (!description) {\n        console.log('Veuillez entrer une description.');\n        return;\n      }\n  \n      // Filtrer les documents pour la description spécifiée\n      const filteredDocuments = this.documents.filter(document => document.description === description);\n  \n      if (filteredDocuments.length > 0) {\n        console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n        this.documents = filteredDocuments;\n      } else {\n        console.log('Aucun document trouvé avec la description', description);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la recherche des documents pour la description :', error);\n    }\n  }\n}\nexport let consultationdate1:string;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}