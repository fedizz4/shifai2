{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// formulaire.component.ts\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ajouterSecretaire, medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/forms\";\nexport let FormulaireComponent = /*#__PURE__*/(() => {\n  var _FormulaireComponent;\n  class FormulaireComponent {\n    constructor(modalController, firestore, fb) {\n      this.modalController = modalController;\n      this.firestore = firestore;\n      this.fb = fb;\n      this.formulaireSoumis = new EventEmitter();\n      this.fermerFormulaire = new EventEmitter();\n      this.myForm = this.fb.group({\n        prenom: ['', Validators.required],\n        nom: ['', Validators.required],\n        numero: ['', Validators.required],\n        gmail: ['', [Validators.required, Validators.email]],\n        password: ['', Validators.required]\n        // Ajoutez d'autres champs ici\n      });\n    }\n    onSubmit() {\n      const medecinid = medecinUid.uid;\n      if (this.myForm.valid) {\n        this.formulaireSoumis.emit(this.myForm.value);\n        this.fermerFormulaire.emit();\n      }\n    }\n    ouvrirFormulaireModal() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this.modalController.create({\n          component: FormulaireComponent\n        });\n        yield modal.present();\n        modal.onDidDismiss().then(result => {\n          // Vérifiez si le formulaire a été soumis\n          if (result.role === 'formulaireSoumis') {\n            const secretarieData = _this.myForm.value; // Utilisez directement les valeurs du formulaire\n            _this.enregistrerSecretaire();\n          }\n        });\n      })();\n    }\n    enregistrerSecretaire() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        var _this2$myForm$get, _this2$myForm$get2, _this2$myForm$get3, _this2$myForm$get4, _this2$myForm$get5;\n        const nom = (_this2$myForm$get = _this2.myForm.get('nom')) === null || _this2$myForm$get === void 0 ? void 0 : _this2$myForm$get.value;\n        const prenom = (_this2$myForm$get2 = _this2.myForm.get('prenom')) === null || _this2$myForm$get2 === void 0 ? void 0 : _this2$myForm$get2.value;\n        const mail = (_this2$myForm$get3 = _this2.myForm.get('gmail')) === null || _this2$myForm$get3 === void 0 ? void 0 : _this2$myForm$get3.value;\n        const numero = (_this2$myForm$get4 = _this2.myForm.get('numero')) === null || _this2$myForm$get4 === void 0 ? void 0 : _this2$myForm$get4.value;\n        const password = (_this2$myForm$get5 = _this2.myForm.get('password')) === null || _this2$myForm$get5 === void 0 ? void 0 : _this2$myForm$get5.value;\n        const medecinUid = 'b2xIfQRkJABI4OL9JehI';\n        try {\n          yield ajouterSecretaire(_this2.firestore, nom, prenom, mail, numero, password, medecinUid);\n          // Effectuez d'autres actions après l'enregistrement réussi\n          console.log('Secrétaire enregistrée avec succès.');\n          _this2.modalController.dismiss(); // Fermer le modal après l'enregistrement réussi\n        } catch (error) {\n          console.error('Erreur lors de l\\'enregistrement du secrétaire :', error);\n          // Gérez les erreurs ici\n        }\n      })();\n    }\n  }\n  _FormulaireComponent = FormulaireComponent;\n  _FormulaireComponent.ɵfac = function FormulaireComponent_Factory(t) {\n    return new (t || _FormulaireComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  _FormulaireComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _FormulaireComponent,\n    selectors: [[\"app-formulaire\"]],\n    outputs: {\n      formulaireSoumis: \"formulaireSoumis\",\n      fermerFormulaire: \"fermerFormulaire\"\n    },\n    decls: 21,\n    vars: 2,\n    consts: [[3, \"translucent\"], [\"slot\", \"end\"], [3, \"click\"], [\"name\", \"close\"], [3, \"formGroup\"], [\"formControlName\", \"prenom\", \"label\", \"Pr\\u00E9nom\"], [\"formControlName\", \"nom\", \"label\", \"Nom\"], [\"formControlName\", \"numero\", \"label\", \"Num\\u00E9ro\"], [\"formControlName\", \"gmail\", \"label\", \"Gmail\"], [\"formControlName\", \"password\", \"type\", \"password\", \"label\", \"Password\"], [\"expand\", \"full\", \"type\", \"submit\", 3, \"click\"]],\n    template: function FormulaireComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Formulaire\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 1)(5, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function FormulaireComponent_Template_ion_button_click_5_listener() {\n          return ctx.fermerFormulaire.emit();\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"form\", 4)(9, \"ion-item\");\n        i0.ɵɵelement(10, \"ion-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ion-item\");\n        i0.ɵɵelement(12, \"ion-input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-item\");\n        i0.ɵɵelement(14, \"ion-input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-item\");\n        i0.ɵɵelement(16, \"ion-input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-item\");\n        i0.ɵɵelement(18, \"ion-input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function FormulaireComponent_Template_ion_button_click_19_listener() {\n          return ctx.enregistrerSecretaire();\n        });\n        i0.ɵɵtext(20, \"Soumettre\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonTitle, i1.IonToolbar, i1.TextValueAccessor]\n  });\n  return FormulaireComponent;\n})();\nexport let FormulaireModule = /*#__PURE__*/(() => {\n  var _FormulaireModule;\n  class FormulaireModule {}\n  _FormulaireModule = FormulaireModule;\n  _FormulaireModule.ɵfac = function FormulaireModule_Factory(t) {\n    return new (t || _FormulaireModule)();\n  };\n  _FormulaireModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: _FormulaireModule\n  });\n  _FormulaireModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AngularFirestore],\n    imports: [CommonModule, FormsModule, ReactiveFormsModule, IonicModule]\n  });\n  return FormulaireModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}