{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _LoginPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { loginUser } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nlet LoginPage = (_LoginPage = class LoginPage {\n  constructor(navCtrl, toastController, firestore, router) {\n    this.navCtrl = navCtrl;\n    this.toastController = toastController;\n    this.firestore = firestore;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n  /*async loginWithGenericAccount() {\n    try {\n      const genericCredential = await signInWithEmailAndPassword(auth, 'fedizz4@gmail.com', 'azerty');\n      const genericUser = genericCredential.user;\n         if (genericUser) {\n        // L'utilisateur générique est connecté, exporter son UID si nécessaire\n        const userUid = genericUser.uid;\n        console.log('Utilisateur générique connecté :', genericUser);\n      } else {\n        console.log('Erreur lors de la connexion avec le compte générique');\n        // Gérer l'erreur de connexion générique\n      }\n    } catch (error) {\n      console.log('Erreur lors de la connexion :', error);\n      // Gérer l'erreur de connexion générique\n    }\n  }\n  */\n  loginUser() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield loginUser(_this.firestore, _this.email, _this.password);\n        if (result) {\n          const {\n            uid\n          } = result;\n          console.log('Connexion réussie ! Navigation vers la page d\\'accueil de l\\'utilisateur...');\n          console.log('UID de l\\'utilisateur :', uid);\n          // Affectez la valeur de l'UID à la variable exportée inscritUid\n          inscritUid = uid;\n          _this.router.navigate(['/tabs/tab1']);\n        } else {\n          console.log('Connexion échouée. Gérer les actions en cas d\\'échec.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la connexion de l\\'utilisateur :', error);\n      }\n    })();\n  }\n  presentToast(message) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message: message,\n        duration: 3000,\n        position: 'bottom'\n      });\n      toast.present();\n    })();\n  }\n  back() {\n    this.navCtrl.navigateForward('/home-avant-compte');\n  }\n  ngOnInit() {}\n}, _LoginPage.ctorParameters = () => [{\n  type: NavController\n}, {\n  type: ToastController\n}, {\n  type: AngularFirestore\n}, {\n  type: Router\n}], _LoginPage);\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginPage);\nexport { LoginPage };\nexport let inscritUid;","map":{"version":3,"names":["Component","NavController","ToastController","loginUser","AngularFirestore","Router","LoginPage","_LoginPage","constructor","navCtrl","toastController","firestore","router","email","password","_this","_asyncToGenerator","result","uid","console","log","inscritUid","navigate","error","presentToast","message","_this2","toast","create","duration","position","present","back","navigateForward","ngOnInit","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\login\\login.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { getDoc, doc, collection, getDocs } from 'firebase/firestore';\nimport { auth, firestore, loginUser } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n\n  email: string = '';\n  password: string = '';\n\n  constructor(private navCtrl: NavController, private toastController: ToastController,private firestore: AngularFirestore, private router: Router ) { }\n  /*async loginWithGenericAccount() {\n    try {\n      const genericCredential = await signInWithEmailAndPassword(auth, 'fedizz4@gmail.com', 'azerty');\n      const genericUser = genericCredential.user;\n\n      if (genericUser) {\n        // L'utilisateur générique est connecté, exporter son UID si nécessaire\n        const userUid = genericUser.uid;\n        console.log('Utilisateur générique connecté :', genericUser);\n      } else {\n        console.log('Erreur lors de la connexion avec le compte générique');\n        // Gérer l'erreur de connexion générique\n      }\n    } catch (error) {\n      console.log('Erreur lors de la connexion :', error);\n      // Gérer l'erreur de connexion générique\n    }\n  }\n*/\n  async loginUser() {\n    try {\n      const result = await loginUser(this.firestore ,this.email, this.password);\n      if (result) {\n        const { uid } = result;\n        console.log('Connexion réussie ! Navigation vers la page d\\'accueil de l\\'utilisateur...');\n        console.log('UID de l\\'utilisateur :', uid);\n\n        // Affectez la valeur de l'UID à la variable exportée inscritUid\n        inscritUid = uid;\n\n        this.router.navigate(['/tabs/tab1']);\n      } else {\n        console.log('Connexion échouée. Gérer les actions en cas d\\'échec.');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la connexion de l\\'utilisateur :', error);\n    }\n  }\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.present();\n  }\n\n  back() {\n    this.navCtrl.navigateForward('/home-avant-compte');\n  }\n\n  ngOnInit() {\n  }\n}\nexport let inscritUid: string;\n\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,aAAa,EAAEC,eAAe,QAAQ,gBAAgB;AAG/D,SAA0BC,SAAS,QAAQ,oBAAoB;AAC/D,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,MAAM,QAAQ,iBAAiB;AAUjC,IAAMC,SAAS,IAAAC,UAAA,GAAf,MAAMD,SAAS;EAKpBE,YAAoBC,OAAsB,EAAUC,eAAgC,EAASC,SAA2B,EAAUC,MAAc;IAA5H,KAAAH,OAAO,GAAPA,OAAO;IAAyB,KAAAC,eAAe,GAAfA,eAAe;IAA0B,KAAAC,SAAS,GAATA,SAAS;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAHxI,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAEgI;EACrJ;;;;;;;;;;;;;;;;;;EAmBMX,SAASA,CAAA;IAAA,IAAAY,KAAA;IAAA,OAAAC,iBAAA;MACb,IAAI;QACF,MAAMC,MAAM,SAASd,SAAS,CAACY,KAAI,CAACJ,SAAS,EAAEI,KAAI,CAACF,KAAK,EAAEE,KAAI,CAACD,QAAQ,CAAC;QACzE,IAAIG,MAAM,EAAE;UACV,MAAM;YAAEC;UAAG,CAAE,GAAGD,MAAM;UACtBE,OAAO,CAACC,GAAG,CAAC,6EAA6E,CAAC;UAC1FD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,GAAG,CAAC;UAE3C;UACAG,UAAU,GAAGH,GAAG;UAEhBH,KAAI,CAACH,MAAM,CAACU,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;QACtC,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;QACtE;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;IAAC;EACH;EACMC,YAAYA,CAACC,OAAe;IAAA,IAAAC,MAAA;IAAA,OAAAV,iBAAA;MAChC,MAAMW,KAAK,SAASD,MAAI,CAAChB,eAAe,CAACkB,MAAM,CAAC;QAC9CH,OAAO,EAAEA,OAAO;QAChBI,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE;OACX,CAAC;MACFH,KAAK,CAACI,OAAO,EAAE;IAAC;EAClB;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACvB,OAAO,CAACwB,eAAe,CAAC,oBAAoB,CAAC;EACpD;EAEAC,QAAQA,CAAA,GACR;;;;;;;;;;AA1DW5B,SAAS,GAAA6B,UAAA,EANrBnC,SAAS,CAAC;EACToC,QAAQ,EAAE,WAAW;EACrBC,QAAA,EAAAC,oBAAgC;;CAEjC,CAAC,C,EAEWhC,SAAS,CA2DrB;;AACD,OAAO,IAAIe,UAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}