{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ConsultationsModalComponent;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./consultations-modal.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./consultations-modal.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component, Input, NgModule } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule, ModalController } from '@ionic/angular';\nlet ConsultationsModalComponent = (_ConsultationsModalComponent = class ConsultationsModalComponent {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.newConsultation = {\n      date: new Date(),\n      details: ''\n    };\n    this.consultations = [];\n  }\n  ngOnInit() {\n    // Chargez les consultations existantes du patient ici\n    this.loadConsultations();\n  }\n  loadConsultations() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultationsSnapshot = yield _this.firestore.collection('medecin').doc(_this.patientData.medecinuid).collection('patients').doc(_this.patientData.nom).collection('consultations').get().toPromise();\n        if (consultationsSnapshot) {\n          _this.consultations = consultationsSnapshot.docs.map(doc => doc.data());\n        } else {\n          console.log('Aucune consultation trouvée pour ce patient.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des consultations du patient :', error);\n      }\n    })();\n  }\n  addConsultation() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Ajoutez la nouvelle consultation à Firestore\n        yield _this2.firestore.collection('medecin').doc(_this2.patientData.medecinuid).collection('patients').doc(_this2.patientData.nom).collection('consultations').add(_this2.newConsultation);\n        // Ajoutez également la nouvelle consultation à la liste locale des consultations\n        _this2.consultations.push({\n          ..._this2.newConsultation\n        });\n        // Réinitialisez les champs de la nouvelle consultation\n        _this2.newConsultation = {\n          date: new Date(),\n          details: ''\n        };\n        console.log('Nouvelle consultation ajoutée avec succès.');\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout de la nouvelle consultation :', error);\n      }\n    })();\n  }\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n}, _ConsultationsModalComponent.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}], _ConsultationsModalComponent.propDecorators = {\n  patientData: [{\n    type: Input\n  }]\n}, _ConsultationsModalComponent);\nConsultationsModalComponent = __decorate([Component({\n  selector: 'app-consultations-modal',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ConsultationsModalComponent);\nexport { ConsultationsModalComponent };\nlet ConsultationsModalModule = class ConsultationsModalModule {};\nConsultationsModalModule = __decorate([NgModule({\n  declarations: [ConsultationsModalComponent],\n  imports: [CommonModule, FormsModule, IonicModule],\n  providers: [AngularFirestore]\n})], ConsultationsModalModule);\nexport { ConsultationsModalModule };","map":{"version":3,"names":["CommonModule","Component","Input","NgModule","AngularFirestore","FormsModule","IonicModule","ModalController","ConsultationsModalComponent","_ConsultationsModalComponent","constructor","firestore","modalController","newConsultation","date","Date","details","consultations","ngOnInit","loadConsultations","_this","_asyncToGenerator","consultationsSnapshot","collection","doc","patientData","medecinuid","nom","get","toPromise","docs","map","data","console","log","error","addConsultation","_this2","add","push","closeModal","dismiss","__decorate","selector","template","__NG_CLI_RESOURCE__0","ConsultationsModalModule","declarations","imports","providers"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\consultations-modal\\consultations-modal.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, NgModule, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule, ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-consultations-modal',\n  templateUrl: './consultations-modal.component.html',\n  styleUrls: ['./consultations-modal.component.scss'],\n})\nexport class ConsultationsModalComponent implements OnInit {\n  @Input() patientData: any; // Input pour recevoir les données du patient\n\n  newConsultation: { date: Date, details: string } = { date: new Date(), details: '' };\n  consultations: { date: Date, details: string }[] = [];\n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) {}\n\n  ngOnInit() {\n    // Chargez les consultations existantes du patient ici\n    this.loadConsultations();\n  }\n\n  async loadConsultations() {\n    try {\n      const consultationsSnapshot = await this.firestore\n        .collection('medecin')\n        .doc(this.patientData.medecinuid)\n        .collection('patients')\n        .doc(this.patientData.nom)\n        .collection('consultations')\n        .get()\n        .toPromise();\n  \n      if (consultationsSnapshot) {\n        this.consultations = consultationsSnapshot.docs.map((doc) => doc.data() as { date: Date, details: string });\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }\n  \n  async addConsultation() {\n    try {\n      // Ajoutez la nouvelle consultation à Firestore\n      await this.firestore\n        .collection('medecin')\n        .doc(this.patientData.medecinuid)\n        .collection('patients')\n        .doc(this.patientData.nom)\n        .collection('consultations')\n        .add(this.newConsultation);\n\n      // Ajoutez également la nouvelle consultation à la liste locale des consultations\n      this.consultations.push({ ...this.newConsultation });\n\n      // Réinitialisez les champs de la nouvelle consultation\n      this.newConsultation = { date: new Date(), details: '' };\n\n      console.log('Nouvelle consultation ajoutée avec succès.');\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la nouvelle consultation :', error);\n    }\n  }\n\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n  \n}\n@NgModule({\n  declarations: [ConsultationsModalComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [AngularFirestore],\n})\nexport class ConsultationsModalModule {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}