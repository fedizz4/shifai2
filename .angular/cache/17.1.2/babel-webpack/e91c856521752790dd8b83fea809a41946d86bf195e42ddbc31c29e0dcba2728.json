{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { consultationdate1 } from '../patientpage/patientpage.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nexport let ConsultationModifPage = /*#__PURE__*/(() => {\n  var _ConsultationModifPage;\n  class ConsultationModifPage {\n    constructor(route, firestore, router, toastController) {\n      this.route = route;\n      this.firestore = firestore;\n      this.router = router;\n      this.toastController = toastController;\n      this.consultation = consultationdate1;\n    }\n    ngOnInit() {\n      console.log(consultationdate1);\n    }\n    updateConsultation(consultation0) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          // Récupérer la référence du document de consultation en fonction de la date\n          const querySnapshot = yield _this.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultation0.date).get();\n          // Vérifier s'il y a des résultats\n          if (!querySnapshot.empty) {\n            // Mettre à jour les détails de la première consultation correspondant à la date\n            const consultationDoc = querySnapshot.docs[0]; // Prendre le premier document trouvé\n            const consultationData = {\n              date: consultation0.date,\n              details: consultation0.details,\n              poids: consultation0.poids,\n              tailles: consultation0.tailles,\n              temperature: consultation0.temperature,\n              frequenceCardiaque: consultation0.frequenceCardiaque,\n              glycemie: consultation0.glycemie,\n              pressionArterielle: consultation0.pressionArterielle,\n              observation: consultation0.observation,\n              diagnosticMedical: consultation0.diagnosticMedical\n            };\n          } else {\n            console.error('Aucune consultation trouvée pour cette date.');\n            // Afficher un message d'erreur\n            const toast = yield _this.toastController.create({\n              message: 'Aucune consultation trouvée pour cette date.',\n              duration: 1500,\n              position: 'top',\n              color: 'danger'\n            });\n            yield toast.present();\n          }\n        } catch (error) {\n          console.error('Erreur lors de la modification de la consultation :', error);\n          // Afficher un message d'erreur\n          const toast = yield _this.toastController.create({\n            message: 'Erreur lors de la modification de la consultation.',\n            duration: 1500,\n            position: 'top',\n            color: 'danger'\n          });\n          yield toast.present();\n        }\n      })();\n    }\n    loadConsultation() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const consultationSnapshot = yield _this2.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultationdate1.date).get();\n          if (consultationSnapshot) {} else {\n            console.log('La consultation n\\'existe pas.');\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement de la consultation :', error);\n        }\n      })();\n    }\n  }\n  _ConsultationModifPage = ConsultationModifPage;\n  _ConsultationModifPage.ɵfac = function ConsultationModifPage_Factory(t) {\n    return new (t || _ConsultationModifPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.ToastController));\n  };\n  _ConsultationModifPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _ConsultationModifPage,\n    selectors: [[\"app-consultationmodif\"]],\n    decls: 55,\n    vars: 10,\n    consts: [[\"routerLink\", \"/patientpage\", \"slot\", \"start\", \"fill\", \"clear\"], [\"position\", \"floating\"], [\"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"rows\", \"6\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"expand\", \"block\", 3, \"click\"]],\n    template: function ConsultationModifPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-button\", 0);\n        i0.ɵɵtext(2, \"Retour\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ion-toolbar\")(4, \"ion-title\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-card\")(8, \"ion-card\")(9, \"ion-item\")(10, \"ion-label\", 1);\n        i0.ɵɵtext(11, \"Motifs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_12_listener($event) {\n          return ctx.consultation.details = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"ion-card\")(14, \"ion-card-header\")(15, \"ion-card-title\")(16, \"b\");\n        i0.ɵɵtext(17, \"Constante vitale\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"ion-card-content\")(19, \"ion-item\")(20, \"ion-label\", 1);\n        i0.ɵɵtext(21, \"Poids\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_22_listener($event) {\n          return ctx.consultation.poids = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"ion-item\")(24, \"ion-label\", 1);\n        i0.ɵɵtext(25, \"Tailles\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_26_listener($event) {\n          return ctx.consultation.tailles = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"ion-item\")(28, \"ion-label\", 1);\n        i0.ɵɵtext(29, \"Temp\\u00E9rature\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_30_listener($event) {\n          return ctx.consultation.temperature = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"ion-item\")(32, \"ion-label\", 1);\n        i0.ɵɵtext(33, \"Fr\\u00E9quence cardiaque\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_34_listener($event) {\n          return ctx.consultation.frequenceCardiaque = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"ion-item\")(36, \"ion-label\", 1);\n        i0.ɵɵtext(37, \"Glyc\\u00E9mie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_38_listener($event) {\n          return ctx.consultation.glycemie = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"ion-item\")(40, \"ion-label\", 1);\n        i0.ɵɵtext(41, \"Pr\\u00E9ssion art\\u00E9rielle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"ion-textarea\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_42_listener($event) {\n          return ctx.consultation.pressionArterielle = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(43, \"ion-card\")(44, \"ion-item\")(45, \"ion-label\", 1);\n        i0.ɵɵtext(46, \"Obs\\u00E9rvation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"ion-textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_47_listener($event) {\n          return ctx.consultation.observation = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(48, \"ion-card\")(49, \"ion-item\")(50, \"ion-label\", 1);\n        i0.ɵɵtext(51, \"Diagnostic m\\u00E9dical\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"ion-textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function ConsultationModifPage_Template_ion_textarea_ngModelChange_52_listener($event) {\n          return ctx.consultation.diagnosticMedical = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(53, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function ConsultationModifPage_Template_ion_button_click_53_listener() {\n          return ctx.updateConsultation(ctx.consultation);\n        });\n        i0.ɵɵtext(54, \" Enregistrer les modifications \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"consultation: \", ctx.consultation.date, \"\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.details);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.poids);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.tailles);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.temperature);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.frequenceCardiaque);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.glycemie);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.pressionArterielle);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.observation);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.consultation.diagnosticMedical);\n      }\n    },\n    dependencies: [i4.NgControlStatus, i4.RequiredValidator, i4.NgModel, i3.IonButton, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardTitle, i3.IonContent, i3.IonHeader, i3.IonItem, i3.IonLabel, i3.IonTextarea, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.RouterLinkDelegate, i1.RouterLink]\n  });\n  return ConsultationModifPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}