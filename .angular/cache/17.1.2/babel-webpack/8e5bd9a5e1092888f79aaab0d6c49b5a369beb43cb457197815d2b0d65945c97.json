{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nlet SallePage = class SallePage {\n  constructor(firestore, toastController) {\n    this.firestore = firestore;\n    this.toastController = toastController;\n    this.uid = medecinUid.uid;\n    this.rdvs = [];\n    this.present = true;\n    this.p = true;\n  }\n  ngOnInit() {\n    this.loadEvents();\n  }\n  loadEvents() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n      if (rdvs && rdvs.length > 0) {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0); // Set the time to 00:00:00 to compare only the date\n        _this.rdvs = rdvs.filter(rdv => new Date(rdv.date).setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)).map(rdv => {\n          rdv.present = false;\n          return rdv;\n        }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n        console.log(rdvs);\n      } else {\n        _this.p = false;\n        console.log(\"vous n'avez pas de rendezvous aujourd'hui\");\n        const toast = yield _this.toastController.create({\n          message: 'vous n/avez pas de rendez-vous veuillez retournez avec le bouton retour',\n          duration: 1500,\n          // Durée du toast en millisecondes\n          position: 'top',\n          // Position du toast (peut être 'top', 'bottom', 'middle')\n          color: 'danger' // Couleur du toast\n        });\n      }\n    })();\n  }\n};\nSallePage = __decorate([Component({\n  selector: 'app-salle',\n  templateUrl: './salle.page.html',\n  styleUrls: ['./salle.page.scss']\n})], SallePage);\nexport { SallePage };","map":{"version":3,"names":["Component","getRdvByMedUid","medecinUid","SallePage","constructor","firestore","toastController","uid","rdvs","present","p","ngOnInit","loadEvents","_this","_asyncToGenerator","length","today","Date","setHours","filter","rdv","date","map","sort","a","b","getTime","console","log","toast","create","message","duration","position","color","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\salle\\salle.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {  getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { meduid } from '../login-medecin/login-medecin.page';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastController } from '@ionic/angular';\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string;\n  medecinPrenom?: string;\n  medecinuid: string;\n  key: string;\n  excuse?:string ;\n  statut?:string;\n  present?:boolean;\n}\n\n\n@Component({\n  selector: 'app-salle',\n  templateUrl: './salle.page.html',\n  styleUrls: ['./salle.page.scss'],\n})\nexport class SallePage implements OnInit {\nuid=medecinUid.uid\nrdvs:RendezVousData[]=[];\npresent:boolean=true;\np:boolean=true;\nconstructor(private firestore: AngularFirestore,private toastController :ToastController) { }\n\n  ngOnInit() {\n    this.loadEvents();\n  }\n  async loadEvents() {\n    const rdvs = await getRdvByMedUid(this.firestore, this.uid);\n    if (rdvs && rdvs.length > 0) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Set the time to 00:00:00 to compare only the date\n      this.rdvs = rdvs\n        .filter(rdv => new Date(rdv.date).setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0))\n        .map(rdv => {\n          rdv.present = false;\n          return rdv;\n        })\n        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      console.log(rdvs);\n\n    }\n    else{\n      this.p=false ;\n      console.log(\"vous n'avez pas de rendezvous aujourd'hui\");\n      \n      const toast = await this.toastController.create({\n        message: 'vous n/avez pas de rendez-vous veuillez retournez avec le bouton retour',\n        duration: 1500, // Durée du toast en millisecondes\n        position: 'top', // Position du toast (peut être 'top', 'bottom', 'middle')\n        color: 'danger', // Couleur du toast\n      });\n\n    }\n  }\n    }"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAUC,cAAc,EAAEC,UAAU,QAAQ,oBAAoB;AAyBzD,IAAMC,SAAS,GAAf,MAAMA,SAAS;EAKtBC,YAAoBC,SAA2B,EAASC,eAAgC;IAApE,KAAAD,SAAS,GAATA,SAAS;IAA2B,KAAAC,eAAe,GAAfA,eAAe;IAJvE,KAAAC,GAAG,GAACL,UAAU,CAACK,GAAG;IAClB,KAAAC,IAAI,GAAkB,EAAE;IACxB,KAAAC,OAAO,GAAS,IAAI;IACpB,KAAAC,CAAC,GAAS,IAAI;EAC8E;EAE1FC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EACMA,UAAUA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACd,MAAMN,IAAI,SAASP,cAAc,CAACY,KAAI,CAACR,SAAS,EAAEQ,KAAI,CAACN,GAAG,CAAC;MAC3D,IAAIC,IAAI,IAAIA,IAAI,CAACO,MAAM,GAAG,CAAC,EAAE;QAC3B,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;QACxBD,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5BL,KAAI,CAACL,IAAI,GAAGA,IAAI,CACbW,MAAM,CAACC,GAAG,IAAI,IAAIH,IAAI,CAACG,GAAG,CAACC,IAAI,CAAC,CAACH,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,KAAKF,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CACrFI,GAAG,CAACF,GAAG,IAAG;UACTA,GAAG,CAACX,OAAO,GAAG,KAAK;UACnB,OAAOW,GAAG;QACZ,CAAC,CAAC,CACDG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIR,IAAI,CAACQ,CAAC,CAACJ,IAAI,CAAC,CAACK,OAAO,EAAE,GAAG,IAAIT,IAAI,CAACO,CAAC,CAACH,IAAI,CAAC,CAACK,OAAO,EAAE,CAAC;QAC1EC,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC;MAEnB,CAAC,MACG;QACFK,KAAI,CAACH,CAAC,GAAC,KAAK;QACZiB,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;QAExD,MAAMC,KAAK,SAAShB,KAAI,CAACP,eAAe,CAACwB,MAAM,CAAC;UAC9CC,OAAO,EAAE,yEAAyE;UAClFC,QAAQ,EAAE,IAAI;UAAE;UAChBC,QAAQ,EAAE,KAAK;UAAE;UACjBC,KAAK,EAAE,QAAQ,CAAE;SAClB,CAAC;MAEJ;IAAC;EACH;CACG;AAtCQ/B,SAAS,GAAAgC,UAAA,EALrBnC,SAAS,CAAC;EACToC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,mBAAmB;EAChCC,SAAS,EAAE,CAAC,mBAAmB;CAChC,CAAC,C,EACWnC,SAAS,CAsCjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}