{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { IonicModule } from '@ionic/angular';\nimport { RendezvousmodalComponent } from '../rendezvousmodal/rendezvousmodal.component';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport { selectedDate } from '../work-hours-modal/work-hours-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/common\";\nfunction HeureComponent_ion_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 4);\n    i0.ɵɵlistener(\"click\", function HeureComponent_ion_button_10_Template_ion_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const index_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleSelection(index_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hour_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isHourTaken(index_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(hour_r1);\n  }\n}\nexport let HeureComponent = /*#__PURE__*/(() => {\n  var _HeureComponent;\n  class HeureComponent {\n    constructor(modalController, firestore) {\n      this.modalController = modalController;\n      this.firestore = firestore;\n      this.selectedHour = '';\n      this.workHours = ['8H00 - 8H30', '8H30 - 9H00', '9H00 - 9H30', '9H30 - 10H00', '10H00 - 10H30', '10H30 - 11H00', '11H00 - 11H30', '11H30 - 12H00', '14H00 - 14H30', '14H30 - 15H00', '15H00 - 15H30', '15H30 - 16H00', '16H00 - 16H30'];\n      this.hourAvailability = Array(this.workHours.length).fill(true); // Tableau pour indiquer l'accessibilité de chaque heure\n    }\n    ngOnInit() {\n      console.log('Selected date:', selectedDate);\n      this.getTakenHoursByDate(medecinUid, selectedDate); // Charger les heures prises au démarrage\n    }\n    getTakenHoursByDate(uid, date) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const query = _this.firestore.collection('medecin').doc(uid).collection('rdv', ref => ref.where('date', '==', date));\n        const snapshot = yield query.get().toPromise();\n        if (snapshot) {\n          _this.hourAvailability = Array.from({\n            length: _this.workHours.length\n          }, () => true); // Reset hour availability to all available\n          snapshot.docs.forEach(doc => {\n            const rdvData = doc.data();\n            if (rdvData && rdvData['heure']) {\n              const index = _this.workHours.indexOf(rdvData['heure']);\n              if (index !== -1) {\n                _this.hourAvailability[index] = false; // Marquer l'heure comme indisponible si elle est prise\n              }\n            }\n          });\n          console.log('Hour availability:', _this.hourAvailability);\n        } else {\n          console.error('No snapshot available.');\n        }\n      })();\n    }\n    isHourTaken(index) {\n      return !this.hourAvailability[index];\n    }\n    toggleSelection(index) {\n      selectedHour = this.workHours[index];\n      console.log('Selected date:', selectedDate);\n      console.log('Selected hour:', selectedHour);\n      console.log('Med:', medecinUid);\n    }\n    openrdvModal() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this2.modalController.create({\n          component: RendezvousmodalComponent,\n          cssClass: 'work-hours-modal'\n        });\n        _this2.close();\n        return yield modal.present();\n      })();\n    }\n    close() {\n      this.modalController.dismiss();\n    }\n  }\n  _HeureComponent = HeureComponent;\n  _HeureComponent.ɵfac = function HeureComponent_Factory(t) {\n    return new (t || _HeureComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.AngularFirestore));\n  };\n  _HeureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _HeureComponent,\n    selectors: [[\"app-heure\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[\"slot\", \"end\"], [3, \"click\"], [\"slot\", \"start\"], [3, \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"]],\n    template: function HeureComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Personne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 0)(5, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function HeureComponent_Template_ion_button_click_5_listener() {\n          return ctx.openrdvModal();\n        });\n        i0.ɵɵtext(6, \"Suivant\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"ion-buttons\", 2)(8, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function HeureComponent_Template_ion_button_click_8_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(9, \"Fermer\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(10, HeureComponent_ion_button_10_Template, 2, 2, \"ion-button\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.workHours);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.IonButton, i1.IonButtons, i1.IonHeader, i1.IonTitle, i1.IonToolbar]\n  });\n  return HeureComponent;\n})();\nexport let HeureModule = /*#__PURE__*/(() => {\n  var _HeureModule;\n  class HeureModule {}\n  _HeureModule = HeureModule;\n  _HeureModule.ɵfac = function HeureModule_Factory(t) {\n    return new (t || _HeureModule)();\n  };\n  _HeureModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: _HeureModule\n  });\n  _HeureModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [AngularFirestore],\n    imports: [CommonModule, FormsModule, IonicModule]\n  });\n  return HeureModule;\n})();\nexport let selectedHour;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}