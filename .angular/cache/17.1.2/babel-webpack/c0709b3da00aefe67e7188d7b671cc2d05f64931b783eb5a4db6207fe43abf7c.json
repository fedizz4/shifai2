{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { getConsultations, medecinUid, savePatient } from 'src/firebaseConfig';\nimport { patientA } from '../patient/patient.page';\nimport { meduid } from '../login-medecin/login-medecin.page';\nlet PatientpagePage = class PatientpagePage {\n  constructor(firestore, modalController, cdr) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.cdr = cdr;\n    this.segment = 0; // Valeur par défaut pour le segment \"Fiche Patient\"\n    this.segmenta = 1;\n    this.segmentb = 2;\n    this.segmentF = 'Info';\n    this.fichePatient = {\n      nom: '',\n      prenom: '',\n      age: null,\n      adresse: '',\n      telephone: ''\n      // Ajoutez d'autres champs selon vos besoins\n    };\n    this.patient = patientA;\n    this.rendezVousData = {};\n  }\n  ngOnInit() {\n    console.log('patient', patientA);\n    this.loadConsultations();\n    console.log('rdv', this.rdv);\n  }\n  changerSegment(option) {\n    this.segment = option;\n  }\n  changerSegmentA(option) {\n    this.segment = option;\n  }\n  changerSegmentB(option) {\n    this.segment = option;\n  }\n  loadConsultations() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Utilisez la fonction getConsultation pour obtenir les consultations\n        const consultations = yield getConsultations(_this.firestore, medecinUid.uid, patientA.uid);\n        console.log(consultations);\n        if (consultations && consultations.length > 0) {\n          // Assurez-vous que les consultations sont définies et non vides\n          _this.consultations = consultations;\n        } else {\n          console.log('Aucune consultation trouvée pour ce patient.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des consultations du patient :', error);\n      }\n    })();\n  }\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n  saveFichePatient() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.fichePatient.nom = _this2.patient.nom;\n        _this2.fichePatient.prenom = _this2.patient.prenom;\n        console.log('prenom ', _this2.fichePatient.prenom, 'nom ', _this2.fichePatient.nom);\n        console.log('Données de la fiche patient à sauvegarder :', _this2.fichePatient);\n        // Appel de la fonction savePatient pour sauvegarder le patient chez le médecin\n        yield savePatient(_this2.firestore, _this2.fichePatient, meduid);\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n      }\n    })();\n  }\n};\nPatientpagePage = __decorate([Component({\n  selector: 'app-patientpage',\n  templateUrl: './patientpage.page.html',\n  styleUrls: ['./patientpage.page.scss']\n})], PatientpagePage);\nexport { PatientpagePage };","map":{"version":3,"names":["Component","getConsultations","medecinUid","savePatient","patientA","meduid","PatientpagePage","constructor","firestore","modalController","cdr","segment","segmenta","segmentb","segmentF","fichePatient","nom","prenom","age","adresse","telephone","patient","rendezVousData","ngOnInit","console","log","loadConsultations","rdv","changerSegment","option","changerSegmentA","changerSegmentB","_this","_asyncToGenerator","consultations","uid","length","error","closeModal","dismiss","saveFichePatient","_this2","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patientpage\\patientpage.page.ts"],"sourcesContent":["import { Component,ChangeDetectorRef, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { getConsultations, getRdvByPatientUid, medecinUid, savePatient } from 'src/firebaseConfig';\nimport { patientA, patientUidA } from '../patient/patient.page';\nimport { meduid } from '../login-medecin/login-medecin.page';\n\ninterface PatientData {\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephones?: string;\n  uid:string ;\n}\n\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string; // Ajout de la propriété medecinNom comme optionnelle\n  medecinPrenom?: string; \n  medecinuid:string;// Ajout de la propriété medecinPrenom comme optionnelle\n  key:string ;\n  excuse?:string;\n  statut?:string;\n}\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n@Component({\n  selector: 'app-patientpage',\n  templateUrl: './patientpage.page.html',\n  styleUrls: ['./patientpage.page.scss'],\n})\n\n\nexport class PatientpagePage implements OnInit {\n   rendezVousData!: RendezVousData; \n   \n   segment: number = 0; // Valeur par défaut pour le segment \"Fiche Patient\"\n  segmenta:number =1;\n  segmentb:number =2;\n\n   segmentF: string = 'Info'; \n \n  \n  fichePatient = {\n    nom: '',\n    prenom: '',\n    age: null,\n    adresse: '',\n    telephone: ''\n    // Ajoutez d'autres champs selon vos besoins\n  };\n  rdv: RendezVousData[] | null | undefined;\n  patient:PatientData =patientA ;\n  consultations!: consultationData[];\n\n\n  constructor(private firestore: AngularFirestore,private modalController: ModalController,private cdr: ChangeDetectorRef) {\n    this.rendezVousData = {} as RendezVousData;\n\n  }\n  \n   ngOnInit() {\n\n   \n    console.log('patient',patientA)\n    this.loadConsultations();\n    \n    console.log('rdv',this.rdv)\n\n  }\n  changerSegment(option: number): void {\n    this.segment = option;\n  }\n  changerSegmentA(option: number): void {\n    this.segment = option;\n  }\n  changerSegmentB(option: number): void {\n    this.segment = option;\n  }\n  \n  async loadConsultations() {\n    try {\n      // Utilisez la fonction getConsultation pour obtenir les consultations\n      const consultations = await getConsultations(this.firestore,medecinUid.uid, patientA.uid);\n      console.log(consultations)\n  \n      if (consultations && consultations.length > 0) {\n        // Assurez-vous que les consultations sont définies et non vides\n        this.consultations = consultations;\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n\n  async saveFichePatient() {\n    try {\n     this.fichePatient.nom=this.patient.nom ;\n     this.fichePatient.prenom=this.patient.prenom;\n     console.log('prenom ',this.fichePatient.prenom,'nom ',this.fichePatient.nom)\n     \n      console.log('Données de la fiche patient à sauvegarder :', this.fichePatient);\n\n      // Appel de la fonction savePatient pour sauvegarder le patient chez le médecin\n      await savePatient(this.firestore, this.fichePatient, meduid);\n\n     \n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n    }\n  }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}