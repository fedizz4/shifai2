{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getRdvByMedUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { meduid } from '../login-medecin/login-medecin.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nfunction AffichePatientPage_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-button\", 1);\n    i0.ɵɵlistener(\"click\", function AffichePatientPage_ion_item_6_Template_ion_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const rdv_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openFichePatientModal(rdv_r1));\n    });\n    i0.ɵɵtext(4, \"Fiche Patient\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rdv_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\"\", rdv_r1.date, \" - \", rdv_r1.heure, \" - \", rdv_r1.nom, \" \", rdv_r1.prenom, \"\");\n  }\n}\nexport let AffichePatientPage = /*#__PURE__*/(() => {\n  var _AffichePatientPage;\n  class AffichePatientPage {\n    constructor(firestore, modalController) {\n      this.firestore = firestore;\n      this.modalController = modalController;\n      this.rdvs = [];\n      this.loadRdv();\n    }\n    ngOnInit() {}\n    loadRdv() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const rdvs = yield getRdvByMedUid(_this.firestore, meduid); // Utilisez medecinUid.uid pour obtenir l'UID du médecin\n          if (rdvs && rdvs.length > 0) {\n            _this.rdvs = rdvs;\n          } else {\n            console.log('Aucun rendez-vous trouvé pour ce médecin.');\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des rendez-vous:', error);\n        }\n      })();\n    }\n    openFichePatientModal(rendezVous) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this2.modalController.create({\n          component: FichePatientModalComponent,\n          componentProps: {\n            rendezVousData: rendezVous\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          if (data && data.data) {\n            // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n            console.log('Données de la fiche patient à enregistrer :', data.data);\n          }\n        });\n        return yield modal.present();\n      })();\n    }\n  }\n  _AffichePatientPage = AffichePatientPage;\n  _AffichePatientPage.ɵfac = function AffichePatientPage_Factory(t) {\n    return new (t || _AffichePatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController));\n  };\n  _AffichePatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _AffichePatientPage,\n    selectors: [[\"app-affiche-patient\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"]],\n    template: function AffichePatientPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Liste des rendez-vous\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\");\n        i0.ɵɵtemplate(6, AffichePatientPage_ion_item_6_Template, 5, 4, \"ion-item\", 0);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rdvs);\n      }\n    },\n    dependencies: [i3.NgForOf, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonTitle, i2.IonToolbar]\n  });\n  return AffichePatientPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}