{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _SallePage;\nimport { getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nfunction SallePage_ion_row_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\", 0)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-col\", 0)(5, \"ion-item\")(6, \"ion-label\");\n    i0.ɵɵtext(7, \"Pr\\u00E9sent\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-checkbox\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function SallePage_ion_row_13_Template_ion_checkbox_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.present = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const rdv_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"barre\", ctx_r0.present);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\"\", rdv_r1.nom, \" \", rdv_r1.prenom, \" \", rdv_r1.heure, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.present);\n  }\n}\nexport class SallePage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.uid = medecinUid.uid;\n    this.rdvs = [];\n    this.present = true;\n  }\n  ngOnInit() {\n    this.loadEvents();\n  }\n  loadEvents() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n      if (rdvs && rdvs.length > 0) {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0); // Set the time to 00:00:00 to compare only the date\n        _this.rdvs = rdvs.filter(rdv => new Date(rdv.date).setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)).map(rdv => {\n          rdv.present = false;\n          return rdv;\n        }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      }\n    })();\n  }\n}\n_SallePage = SallePage;\n_SallePage.ɵfac = function SallePage_Factory(t) {\n  return new (t || _SallePage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_SallePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _SallePage,\n  selectors: [[\"app-salle\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[\"size\", \"6\"], [3, \"barre\", 4, \"ngFor\", \"ngForOf\"], [\"slot\", \"start\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function SallePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Salle d'attente\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-grid\")(6, \"ion-row\")(7, \"ion-col\", 0)(8, \"h2\");\n      i0.ɵɵtext(9, \"Rendrez-vous du jour\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-col\", 0)(11, \"p\");\n      i0.ɵɵtext(12, \"Heure\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, SallePage_ion_row_13_Template, 9, 6, \"ion-row\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rdvs);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.NgControlStatus, i3.NgModel, i4.IonCheckbox, i4.IonCol, i4.IonContent, i4.IonGrid, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonRow, i4.IonTitle, i4.IonToolbar, i4.BooleanValueAccessor],\n  styles: [\".barre[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2FsbGUvc2FsbGUucGFnZS5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vTWFjQm9vayUyMEFpci9EZXNrdG9wL3NoaWZhaTFWVi9zcmMvYXBwL3NhbGxlL3NhbGxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0FDQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFycmUge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XHJcbiAgfSIsIi5iYXJyZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["getRdvByMedUid","medecinUid","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SallePage_ion_row_13_Template_ion_checkbox_ngModelChange_8_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","present","ɵɵclassProp","ctx_r0","ɵɵadvance","ɵɵtextInterpolate3","rdv_r1","nom","prenom","heure","ɵɵproperty","SallePage","constructor","firestore","uid","rdvs","ngOnInit","loadEvents","_this","_asyncToGenerator","length","today","Date","setHours","filter","rdv","date","map","sort","a","b","getTime","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","SallePage_Template","rf","ctx","ɵɵtemplate","SallePage_ion_row_13_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\salle\\salle.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\salle\\salle.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {  getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { meduid } from '../login-medecin/login-medecin.page';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string;\n  medecinPrenom?: string;\n  medecinuid: string;\n  key: string;\n  excuse?:string ;\n  statut?:string;\n  present?:boolean;\n}\n\n\n@Component({\n  selector: 'app-salle',\n  templateUrl: './salle.page.html',\n  styleUrls: ['./salle.page.scss'],\n})\nexport class SallePage implements OnInit {\nuid=medecinUid.uid\nrdvs:RendezVousData[]=[];\npresent:boolean=true;\nconstructor(private firestore: AngularFirestore) { }\n\n  ngOnInit() {\n    this.loadEvents();\n  }\n  async loadEvents() {\n    const rdvs = await getRdvByMedUid(this.firestore, this.uid);\n    if (rdvs && rdvs.length > 0) {\n      const today = new Date();\n      today.setHours(0, 0, 0, 0); // Set the time to 00:00:00 to compare only the date\n      this.rdvs = rdvs\n        .filter(rdv => new Date(rdv.date).setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0))\n        .map(rdv => {\n          rdv.present = false;\n          return rdv;\n        })\n        .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    }\n  }\n    }","<ion-header>\n  <ion-toolbar>\n    <ion-title>Salle d'attente</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"6\">\n        <h2>Rendrez-vous du jour</h2>\n      </ion-col>\n      <ion-col size=\"6\">\n        <p>Heure</p>\n      </ion-col>\n    </ion-row>\n    <ion-row *ngFor=\"let rdv of rdvs\" [class.barre]=\"present\">\n      <ion-col size=\"6\">\n        <h3>{{ rdv.nom }} {{ rdv.prenom }} {{ rdv.heure }}</h3>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-item>\n          <ion-label>Présent</ion-label>\n          <ion-checkbox slot=\"start\" [(ngModel)]=\"present\"></ion-checkbox>\n        </ion-item>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-content>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}