{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { consultationdate1 } from '../patientpage/patientpage.page';\nlet ConsultationmodifPage = class ConsultationmodifPage {\n  constructor(route, firestore, router, toastController) {\n    this.route = route;\n    this.firestore = firestore;\n    this.router = router;\n    this.toastController = toastController;\n    this.consultation = consultationdate1;\n  }\n  ngOnInit() {}\n  updateConsultation(consultation) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Récupérer la référence du document de consultation en fonction de la date\n        const querySnapshot = yield _this.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultation.date).get();\n        // Vérifier s'il y a des résultats\n        if (!querySnapshot.empty) {\n          // Mettre à jour les détails de la première consultation correspondant à la date\n          const consultationDoc = querySnapshot.docs[0]; // Prendre le premier document trouvé\n          yield consultationDoc.ref.update({\n            date: consultation.date,\n            details: consultation.details\n          });\n          // Rediriger vers la page de consultation\n          _this.router.navigate(['/patientpage']);\n        } else {\n          console.error('Aucune consultation trouvée pour cette date.');\n          // Afficher un message d'erreur\n          const toast = yield _this.toastController.create({\n            message: 'Aucune consultation trouvée pour cette date.',\n            duration: 1500,\n            position: 'top',\n            color: 'danger'\n          });\n          yield toast.present();\n        }\n      } catch (error) {\n        console.error('Erreur lors de la modification de la consultation :', error);\n        // Afficher un message d'erreur\n        const toast = yield _this.toastController.create({\n          message: 'Erreur lors de la modification de la consultation.',\n          duration: 1500,\n          position: 'top',\n          color: 'danger'\n        });\n        yield toast.present();\n      }\n    })();\n  }\n  loadConsultation() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultationSnapshot = yield _this2.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultationdate1.date).get();\n        if (consultationSnapshot) {} else {\n          console.log('La consultation n\\'existe pas.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement de la consultation :', error);\n      }\n    })();\n  }\n};\nConsultationmodifPage = __decorate([Component({\n  selector: 'app-consultationmodif',\n  templateUrl: './consultationmodif.page.html',\n  styleUrls: ['./consultationmodif.page.scss']\n})], ConsultationmodifPage);\nexport { ConsultationmodifPage };","map":{"version":3,"names":["Component","medecinUid","patientUidA","consultationdate1","ConsultationmodifPage","constructor","route","firestore","router","toastController","consultation","ngOnInit","updateConsultation","_this","_asyncToGenerator","querySnapshot","collection","doc","uid","ref","where","date","get","empty","consultationDoc","docs","update","details","navigate","console","error","toast","create","message","duration","position","color","present","loadConsultation","_this2","consultationSnapshot","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-modif\\consultation-modif.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastController } from '@ionic/angular';\nimport { getConsultationByDateAndUidPat, medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { consultationdate1 } from '../patientpage/patientpage.page';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n\n@Component({\n  selector: 'app-consultationmodif',\n  templateUrl: './consultationmodif.page.html',\n  styleUrls: ['./consultationmodif.page.scss'],\n})\nexport class ConsultationmodifPage implements OnInit {\nconsultation=consultationdate1;\n\n  constructor(\n    private route: ActivatedRoute,\n    private firestore: AngularFirestore,\n    private router: Router,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n   \n  }\n\n  async updateConsultation(consultation: consultationData) {\n    try {\n      // Récupérer la référence du document de consultation en fonction de la date\n      const querySnapshot = await this.firestore.collection('medecin').doc(medecinUid.uid)\n        .collection('patients').doc(patientUidA).collection('consultations')\n        .ref.where('date', '==', consultation.date).get();\n      \n      // Vérifier s'il y a des résultats\n      if (!querySnapshot.empty) {\n        // Mettre à jour les détails de la première consultation correspondant à la date\n        const consultationDoc = querySnapshot.docs[0]; // Prendre le premier document trouvé\n        await consultationDoc.ref.update({\n          date: consultation.date,\n          details: consultation.details,\n        });\n\n        // Rediriger vers la page de consultation\n        this.router.navigate(['/patientpage']);\n      } else {\n        console.error('Aucune consultation trouvée pour cette date.');\n\n        // Afficher un message d'erreur\n        const toast = await this.toastController.create({\n          message: 'Aucune consultation trouvée pour cette date.',\n          duration: 1500,\n          position: 'top',\n          color: 'danger',\n        });\n        await toast.present();\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de la consultation :', error);\n\n      // Afficher un message d'erreur\n      const toast = await this.toastController.create({\n        message: 'Erreur lors de la modification de la consultation.',\n        duration: 1500,\n        position: 'top',\n        color: 'danger',\n      });\n      await toast.present();\n    }\n}\n\n\n  async loadConsultation() {\n    try {\n      const consultationSnapshot = await this.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA)\n      .collection('consultations')\n      .ref.where('date', '==', consultationdate1.date).get();\n      if (consultationSnapshot) {\n \n      } else {\n        console.log('La consultation n\\'existe pas.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement de la consultation :', error);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}