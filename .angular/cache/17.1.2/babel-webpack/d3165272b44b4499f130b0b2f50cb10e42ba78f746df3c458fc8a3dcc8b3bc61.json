{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { consultationdate1 } from '../patientpage/patientpage.page';\nlet ConsultationModifPage = class ConsultationModifPage {\n  constructor(route, firestore, router, toastController) {\n    this.route = route;\n    this.firestore = firestore;\n    this.router = router;\n    this.toastController = toastController;\n    this.consultation = consultationdate1;\n  }\n  ngOnInit() {\n    console.log(consultationdate1);\n  }\n  updateConsultation(consultation0) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Récupérer la référence du document de consultation en fonction de la date\n        const querySnapshot = yield _this.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultation0.date).get();\n        // Vérifier s'il y a des résultats\n        if (!querySnapshot.empty) {\n          // Mettre à jour les détails de la première consultation correspondant à la date\n          const consultationDoc = querySnapshot.docs[0]; // Prendre le premier document trouvé\n          const consultationData = {\n            date: consultation0.date,\n            details: consultation0.details,\n            poids: consultation0.poids,\n            taille: consultation0.taille,\n            temperature: consultation0.temperature,\n            frequenceCardiaque: consultation0.frequenceCardiaque,\n            glycemie: consultation0.glycemie,\n            pressionArtérielle: consultation0.pressionArtérielle,\n            observation: consultation0.observation,\n            diagnosticMedical: consultation0.diagnosticMedical\n          };\n          // Rediriger vers la page de consultation\n          _this.router.navigate(['/patientpage']);\n        } else {\n          console.error('Aucune consultation trouvée pour cette date.');\n          // Afficher un message d'erreur\n          const toast = yield _this.toastController.create({\n            message: 'Aucune consultation trouvée pour cette date.',\n            duration: 1500,\n            position: 'top',\n            color: 'danger'\n          });\n          yield toast.present();\n        }\n      } catch (error) {\n        console.error('Erreur lors de la modification de la consultation :', error);\n        // Afficher un message d'erreur\n        const toast = yield _this.toastController.create({\n          message: 'Erreur lors de la modification de la consultation.',\n          duration: 1500,\n          position: 'top',\n          color: 'danger'\n        });\n        yield toast.present();\n      }\n    })();\n  }\n  loadConsultation() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultationSnapshot = yield _this2.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA).collection('consultations').ref.where('date', '==', consultationdate1.date).get();\n        if (consultationSnapshot) {} else {\n          console.log('La consultation n\\'existe pas.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement de la consultation :', error);\n      }\n    })();\n  }\n};\nConsultationModifPage = __decorate([Component({\n  selector: 'app-consultationmodif',\n  templateUrl: './consultation-modif.page.html',\n  styleUrls: ['./consultation-modif.page.scss']\n})], ConsultationModifPage);\nexport { ConsultationModifPage };","map":{"version":3,"names":["Component","medecinUid","patientUidA","consultationdate1","ConsultationModifPage","constructor","route","firestore","router","toastController","consultation","ngOnInit","console","log","updateConsultation","consultation0","_this","_asyncToGenerator","querySnapshot","collection","doc","uid","ref","where","date","get","empty","consultationDoc","docs","consultationData","details","poids","taille","temperature","frequenceCardiaque","glycemie","pressionArtérielle","observation","diagnosticMedical","navigate","error","toast","create","message","duration","position","color","present","loadConsultation","_this2","consultationSnapshot","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-modif\\consultation-modif.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastController } from '@ionic/angular';\nimport { getConsultationByDateAndUidPat, medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\nimport { consultationdate1 } from '../patientpage/patientpage.page';\n\ninterface consultationData {\n  date:string;\n  details: string;\n  poids?: string;\n  taille?: string;\n  temperature?: string;\n  frequenceCardiaque?: string;\n  glycemie?: string;\n  pressionArtérielle?: string;\n  observation?: string;\n  diagnosticMedical?: string;\n}\n\n@Component({\n  selector: 'app-consultationmodif',\n  templateUrl: './consultation-modif.page.html',\n  styleUrls: ['./consultation-modif.page.scss'],\n})\nexport class ConsultationModifPage implements OnInit {\nconsultation=consultationdate1;\n\n  constructor(\n    private route: ActivatedRoute,\n    private firestore: AngularFirestore,\n    private router: Router,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    console.log(consultationdate1)\n   \n  }\n\n  async updateConsultation(consultation0: consultationData) {\n    try {\n      // Récupérer la référence du document de consultation en fonction de la date\n      const querySnapshot = await this.firestore.collection('medecin').doc(medecinUid.uid)\n        .collection('patients').doc(patientUidA).collection('consultations')\n        .ref.where('date', '==', consultation0.date).get();\n      \n      // Vérifier s'il y a des résultats\n      if (!querySnapshot.empty) {\n        // Mettre à jour les détails de la première consultation correspondant à la date\n        const consultationDoc = querySnapshot.docs[0]; // Prendre le premier document trouvé\n        const consultationData: consultationData = {\n          date: consultation0.date,\n          details: consultation0.details,\n          poids: consultation0.poids,\n          taille: consultation0.taille,\n          temperature: consultation0.temperature,\n          frequenceCardiaque: consultation0.frequenceCardiaque,\n          glycemie: consultation0.glycemie,\n          pressionArtérielle: consultation0.pressionArtérielle,\n          observation: consultation0.observation,\n          diagnosticMedical: consultation0.diagnosticMedical,\n        };\n\n        // Rediriger vers la page de consultation\n        this.router.navigate(['/patientpage']);\n      } else {\n        console.error('Aucune consultation trouvée pour cette date.');\n\n        // Afficher un message d'erreur\n        const toast = await this.toastController.create({\n          message: 'Aucune consultation trouvée pour cette date.',\n          duration: 1500,\n          position: 'top',\n          color: 'danger',\n        });\n        await toast.present();\n      }\n    } catch (error) {\n      console.error('Erreur lors de la modification de la consultation :', error);\n\n      // Afficher un message d'erreur\n      const toast = await this.toastController.create({\n        message: 'Erreur lors de la modification de la consultation.',\n        duration: 1500,\n        position: 'top',\n        color: 'danger',\n      });\n      await toast.present();\n    }\n}\n\n\n  async loadConsultation() {\n    try {\n      const consultationSnapshot = await this.firestore.collection('medecin').doc(medecinUid.uid).collection('patients').doc(patientUidA)\n      .collection('consultations')\n      .ref.where('date', '==', consultationdate1.date).get();\n      if (consultationSnapshot) {\n \n      } else {\n        console.log('La consultation n\\'existe pas.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement de la consultation :', error);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}