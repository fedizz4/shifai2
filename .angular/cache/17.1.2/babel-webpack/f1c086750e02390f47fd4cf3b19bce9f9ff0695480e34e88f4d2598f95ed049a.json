{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/ionic-TP/shifai1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AfficheMedecinPage;\nimport { getMedecinByUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nfunction AfficheMedecinPage_ion_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-header\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.medecin.nom, \" \", ctx_r0.medecin.prenom, \" \");\n  }\n}\nexport class AfficheMedecinPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.medecinid = \"\";\n  }\n  ngOnInit() {\n    this.medecinid = medecinUid;\n    if (this.medecinid) {\n      console.log('Médecin UID récupéré non :', this.medecinid);\n      this.fetchMedecin(this.medecinid);\n      console.log(this.medecin.nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n  fetchMedecin(medecinUidValue) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.medecin = yield getMedecinByUid(_this.firestore, medecinUidValue);\n        console.log('Médecin récupéré :', _this.medecin);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du médecin :', error);\n      }\n    })();\n  }\n}\n_AfficheMedecinPage = AfficheMedecinPage;\n_AfficheMedecinPage.ɵfac = function AfficheMedecinPage_Factory(t) {\n  return new (t || _AfficheMedecinPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_AfficheMedecinPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _AfficheMedecinPage,\n  selectors: [[\"app-affiche-medecin\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[3, \"translucent\"], [\"slot\", \"start\", \"routerLink\", \"/recherche-medecin\"], [3, \"fullscreen\"], [4, \"ngIf\"]],\n  template: function AfficheMedecinPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\")(3, \"ion-button\", 1);\n      i0.ɵɵtext(4, \"Retour\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtext(6, \"affiche-Medecin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"ion-content\", 2);\n      i0.ɵɵtemplate(8, AfficheMedecinPage_ion_card_8_Template, 3, 2, \"ion-card\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.medecin);\n    }\n  },\n  dependencies: [i2.NgIf, i3.IonButton, i3.IonButtons, i3.IonCard, i3.IonCardHeader, i3.IonContent, i3.IonHeader, i3.IonTitle, i3.IonToolbar, i3.RouterLinkDelegate, i4.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getMedecinByUid","medecinUid","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","medecin","nom","prenom","AfficheMedecinPage","constructor","firestore","medecinid","ngOnInit","console","log","fetchMedecin","error","medecinUidValue","_this","_asyncToGenerator","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","AfficheMedecinPage_Template","rf","ctx","ɵɵtemplate","AfficheMedecinPage_ion_card_8_Template","ɵɵproperty"],"sources":["C:\\Users\\MacBook Air\\ionic-TP\\shifai1\\src\\app\\affiche-medecin\\affiche-medecin.page.ts","C:\\Users\\MacBook Air\\ionic-TP\\shifai1\\src\\app\\affiche-medecin\\affiche-medecin.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { getMedecinByUid } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Subscription } from 'rxjs';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\n\n@Component({\n  selector: 'app-affiche-medecin',\n  templateUrl: './affiche-medecin.page.html',\n  styleUrls: ['./affiche-medecin.page.scss'],\n})\nexport class AfficheMedecinPage implements OnInit {\n\n  medecin: any;\n  private medecinSubscription: Subscription | undefined ; \n  medecinid =\"\" ;\n\n  constructor( private firestore: AngularFirestore) {\n  }\n\n  ngOnInit() {\n \n    this.medecinid = medecinUid;\n    if (this.medecinid) {\n      console.log('Médecin UID récupéré non :', this.medecinid);\n      this.fetchMedecin(this.medecinid);\n      console.log(this.medecin.nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n\n  async fetchMedecin(medecinUidValue: string) {\n    try {\n      this.medecin = await getMedecinByUid(this.firestore, medecinUidValue);\n      console.log('Médecin récupéré :', this.medecin);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du médecin :', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons>\n      <ion-button slot=\"start\" routerLink=\"/recherche-medecin\">Retour</ion-button>\n    </ion-buttons>\n    <ion-title>affiche-Medecin</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-card *ngIf=\"medecin\">\n    <ion-card-header>\n      {{ medecin.nom }} {{ medecin.prenom }}\n    </ion-card-header>\n    <!-- ... autres éléments du ion-card ... -->\n  </ion-card>\n\n</ion-content>\n"],"mappings":";;AACA,SAASA,eAAe,QAAQ,oBAAoB;AAGpD,SAASC,UAAU,QAAQ,kDAAkD;;;;;;;;ICM3EC,EAAA,CAAAC,cAAA,eAA0B;IAEtBD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAkB;;;;IADhBH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,OAAA,CAAAC,GAAA,OAAAF,MAAA,CAAAC,OAAA,CAAAE,MAAA,MACF;;;ADFJ,OAAM,MAAOC,kBAAkB;EAM7BC,YAAqBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAF9B,KAAAC,SAAS,GAAE,EAAE;EAGb;EAEAC,QAAQA,CAAA;IAEN,IAAI,CAACD,SAAS,GAAGd,UAAU;IAC3B,IAAI,IAAI,CAACc,SAAS,EAAE;MAClBE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACH,SAAS,CAAC;MACzD,IAAI,CAACI,YAAY,CAAC,IAAI,CAACJ,SAAS,CAAC;MACjCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,OAAO,CAACC,GAAG,CAAC;IAC/B,CAAC,MAAM;MACLO,OAAO,CAACG,KAAK,CAAC,mCAAmC,CAAC;IACpD;EACF;EAEMD,YAAYA,CAACE,eAAuB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACxC,IAAI;QACFD,KAAI,CAACb,OAAO,SAAST,eAAe,CAACsB,KAAI,CAACR,SAAS,EAAEO,eAAe,CAAC;QACrEJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEI,KAAI,CAACb,OAAO,CAAC;MACjD,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACrE;IAAC;EACH;;sBA5BWR,kBAAkB;;mBAAlBA,mBAAkB,EAAAV,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;;QAAlBd,mBAAkB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX/B/B,EAAA,CAAAC,cAAA,oBAAiC;MAG8BD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAa;MAE9EH,EAAA,CAAAC,cAAA,gBAAW;MAAAD,EAAA,CAAAE,MAAA,sBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAY;MAI1CH,EAAA,CAAAC,cAAA,qBAAiC;MAC/BD,EAAA,CAAAiC,UAAA,IAAAC,sCAAA,sBAKW;MAEblC,EAAA,CAAAG,YAAA,EAAc;;;MAjBFH,EAAA,CAAAmC,UAAA,qBAAoB;MASnBnC,EAAA,CAAAI,SAAA,GAAmB;MAAnBJ,EAAA,CAAAmC,UAAA,oBAAmB;MACnBnC,EAAA,CAAAI,SAAA,EAAa;MAAbJ,EAAA,CAAAmC,UAAA,SAAAH,GAAA,CAAAzB,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}