{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/ionic-TP/shifai1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AfficheMedecinPage;\nimport { getMedecinByUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nexport class AfficheMedecinPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.medecinid = \"\";\n  }\n  ngOnInit() {\n    this.medecinid = medecinUid;\n    if (this.medecinid) {\n      console.log('Médecin UID récupéré non :', this.medecinid);\n      this.fetchMedecin(this.medecinid);\n      console.log(this.medecin[0].nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n  fetchMedecin(medecinUidValue) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.medecin = yield getMedecinByUid(_this.firestore, medecinUidValue);\n        console.log('Médecin récupéré :', _this.medecin);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du médecin :', error);\n      }\n    })();\n  }\n}\n_AfficheMedecinPage = AfficheMedecinPage;\n_AfficheMedecinPage.ɵfac = function AfficheMedecinPage_Factory(t) {\n  return new (t || _AfficheMedecinPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_AfficheMedecinPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _AfficheMedecinPage,\n  selectors: [[\"app-affiche-medecin\"]],\n  decls: 22,\n  vars: 4,\n  consts: [[3, \"fullscreen\"], [1, \"medecin-details\"], [1, \"title\"], [1, \"info\"], [1, \"label\"], [1, \"value\"], [\"name\", \"calendar-outline\"]],\n  template: function AfficheMedecinPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtext(3, \"D\\u00E9tails du M\\u00E9decin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n      i0.ɵɵtext(6, \"Nom:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4);\n      i0.ɵɵtext(11, \"Sp\\u00E9cialit\\u00E9:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5);\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 4);\n      i0.ɵɵtext(16, \"Adresse:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 5);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"ion-button\");\n      i0.ɵɵelement(20, \"ion-icon\", 6);\n      i0.ɵɵtext(21, \"\\u00A0Prendre Rendez-vous\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.medecin[0].nom);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.medecin[0].specialite);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.medecin[0].adresse);\n    }\n  },\n  dependencies: [i2.IonButton, i2.IonContent, i2.IonIcon],\n  styles: [\".header[_ngcontent-%COMP%] {\\n  height: 100px;\\n  width: 100%;\\n  background-color: #3575FE;\\n  border-radius: 0% 0% 50% 50%;\\n}\\n\\n.footer[_ngcontent-%COMP%] {\\n  padding-bottom: 10%;\\n  padding-left: 50%;\\n  padding-right: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWZmaWNoZS1tZWRlY2luL2FmZmljaGUtbWVkZWNpbi5wYWdlLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi9NYWNCb29rJTIwQWlyL2lvbmljLVRQL3NoaWZhaTEvc3JjL2FwcC9hZmZpY2hlLW1lZGVjaW4vYWZmaWNoZS1tZWRlY2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7RUFDQSw0QkFBQTtBQ0NKOztBRENBO0VBQ0ksbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FDRUoiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVye1xyXG4gICAgaGVpZ2h0OiAgMTAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNTc1RkU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwJSAwJSA1MCUgNTAlIDtcclxufVxyXG4uZm9vdGVye1xyXG4gICAgcGFkZGluZy1ib3R0b206MTAlO1xyXG4gICAgcGFkZGluZy1sZWZ0OiA1MCU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1MCU7XHJcbiAgICBcclxufSIsIi5oZWFkZXIge1xuICBoZWlnaHQ6IDEwMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM1NzVGRTtcbiAgYm9yZGVyLXJhZGl1czogMCUgMCUgNTAlIDUwJTtcbn1cblxuLmZvb3RlciB7XG4gIHBhZGRpbmctYm90dG9tOiAxMCU7XG4gIHBhZGRpbmctbGVmdDogNTAlO1xuICBwYWRkaW5nLXJpZ2h0OiA1MCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getMedecinByUid","medecinUid","AfficheMedecinPage","constructor","firestore","medecinid","ngOnInit","console","log","fetchMedecin","medecin","nom","error","medecinUidValue","_this","_asyncToGenerator","i0","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","AfficheMedecinPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","specialite","adresse"],"sources":["C:\\Users\\MacBook Air\\ionic-TP\\shifai1\\src\\app\\affiche-medecin\\affiche-medecin.page.ts","C:\\Users\\MacBook Air\\ionic-TP\\shifai1\\src\\app\\affiche-medecin\\affiche-medecin.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { getMedecinByUid } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Subscription } from 'rxjs';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\n\n@Component({\n  selector: 'app-affiche-medecin',\n  templateUrl: './affiche-medecin.page.html',\n  styleUrls: ['./affiche-medecin.page.scss'],\n})\nexport class AfficheMedecinPage implements OnInit {\n\n  medecin: any;\n  private medecinSubscription: Subscription | undefined ; \n  medecinid =\"\" ;\n\n  constructor( private firestore: AngularFirestore) {\n  }\n\n  ngOnInit() {\n \n    this.medecinid = medecinUid;\n    if (this.medecinid) {\n      console.log('Médecin UID récupéré non :', this.medecinid);\n      this.fetchMedecin(this.medecinid);\n      console.log(this.medecin[0].nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n\n  async fetchMedecin(medecinUidValue: string) {\n    try {\n      this.medecin = await getMedecinByUid(this.firestore, medecinUidValue);\n      console.log('Médecin récupéré :', this.medecin);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du médecin :', error);\n    }\n  }\n}\n","<ion-content [fullscreen]=\"true\">\n  <div class=\"medecin-details\">\n    <div class=\"title\">Détails du Médecin</div>\n\n    <!-- Informations du médecin -->\n    <div class=\"info\">\n      <div class=\"label\">Nom:</div>\n      <div class=\"value\">{{ medecin[0].nom }}</div>\n    </div>\n\n    <div class=\"info\">\n      <div class=\"label\">Spécialité:</div>\n      <div class=\"value\">{{ medecin[0].specialite }}</div>\n    </div>\n\n    <div class=\"info\">\n      <div class=\"label\">Adresse:</div>\n      <div class=\"value\">{{ medecin[0].adresse }}</div>\n    </div>\n\n    <!-- Bouton pour voir les détails -->\n    <ion-button><ion-icon name=\"calendar-outline\"></ion-icon>&nbsp;Prendre Rendez-vous</ion-button>\n  </div>\n</ion-content>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}