{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getPatientsByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PatientPage_ion_row_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\")(2, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_row_29_Template_ion_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.gotopatientpage(patient_r1));\n    });\n    i0.ɵɵelement(3, \"ion-icon\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-col\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-col\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(patient_r1.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.telephone);\n  }\n}\nexport let PatientPage = /*#__PURE__*/(() => {\n  var _PatientPage;\n  class PatientPage {\n    constructor(firestore, modalController, router) {\n      this.firestore = firestore;\n      this.modalController = modalController;\n      this.router = router;\n      this.patients = [];\n      this.rdvs = [];\n      this.uid = medecinUid.uid;\n      this.nomPatient = '';\n      this.prenomPatient = '';\n      this.patientUid = ''; // Ajout de la variable patientUid pour l'UID du patient\n      this.med = this.uid;\n      this.n = this.nomPatient;\n      this.p = this.prenomPatient;\n    }\n    ngOnInit() {\n      this.getPatients();\n      console.log(patientA);\n    }\n    gotopatientpage(patient) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        patientA = patient;\n        patientUidA = patient.uid;\n        _this.router.navigate(['/patientpage']);\n        console.log('going to patientpage');\n      })();\n    }\n    getPatients() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          _this2.patients = yield getPatientsByMedUid(_this2.firestore, _this2.uid);\n          if (_this2.patients.length > 0) {\n            _this2.nomPatient = _this2.patients[0].nom;\n            _this2.prenomPatient = _this2.patients[0].prenom;\n          }\n          console.log(\"Patients trouvés :\", _this2.patients);\n        } catch (error) {\n          console.error('Erreur lors de la récupération des patients :', error);\n        }\n      })();\n    }\n    openFichePatientModal(patient) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this3.modalController.create({\n          component: FichePatientModalComponent,\n          componentProps: {\n            patientData: patient,\n            medecinUid: _this3.uid // Passer l'UID du médecin ici\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          if (data && data.data) {\n            console.log('Données de la fiche patient à enregistrer :', data.data);\n          }\n        });\n        return yield modal.present();\n      })();\n    }\n    showConsultations(uid) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        patientUidA = uid;\n        _this4.router.navigate(['/consultationliste']);\n      })();\n    }\n    search(event) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        const searchTerm = event.target.value.toLowerCase().trim();\n        if (!searchTerm) {\n          // Si la barre de recherche est vide, réinitialiser la liste des patients\n          _this5.getPatients();\n          return;\n        }\n        // Filtrer les patients dont le nom commence par le terme de recherche\n        _this5.patients = _this5.patients.filter(patient => patient.prenom.toLowerCase().startsWith(searchTerm));\n      })();\n    }\n  }\n  _PatientPage = PatientPage;\n  _PatientPage.ɵfac = function PatientPage_Factory(t) {\n    return new (t || _PatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  _PatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _PatientPage,\n    selectors: [[\"app-affiche-patient\"]],\n    decls: 30,\n    vars: 1,\n    consts: [[\"routerLink\", \"/app-medecin\", \"fill\", \"clear\", \"slot\", \"start\"], [\"placeholder\", \"Rechercher\", 3, \"ionInput\"], [4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"], [\"name\", \"folder-sharp\"]],\n    template: function PatientPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-button\", 0);\n        i0.ɵɵtext(3, \" Retour \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Liste des Patients\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-header\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"ion-searchbar\", 1);\n        i0.ɵɵlistener(\"ionInput\", function PatientPage_Template_ion_searchbar_ionInput_9_listener($event) {\n          return ctx.search($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ion-list\")(12, \"ion-grid\")(13, \"ion-row\")(14, \"ion-col\")(15, \"strong\");\n        i0.ɵɵtext(16, \"Option\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"ion-col\")(18, \"strong\");\n        i0.ɵɵtext(19, \"Nom\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"ion-col\")(21, \"strong\");\n        i0.ɵɵtext(22, \"Pr\\u00E9nom\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"ion-col\")(24, \"strong\");\n        i0.ɵɵtext(25, \"Age\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"ion-col\")(27, \"strong\");\n        i0.ɵɵtext(28, \"T\\u00E9l\\u00E9phone\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, PatientPage_ion_row_29_Template, 12, 4, \"ion-row\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(29);\n        i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      }\n    },\n    dependencies: [i4.NgForOf, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonIcon, i2.IonList, i2.IonRow, i2.IonSearchbar, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.RouterLinkDelegate, i3.RouterLink]\n  });\n  return PatientPage;\n})();\nexport let med;\nexport let n;\nexport let p;\nexport let patientUidA; // Exporter la variable patientUid\nexport let patientA;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}