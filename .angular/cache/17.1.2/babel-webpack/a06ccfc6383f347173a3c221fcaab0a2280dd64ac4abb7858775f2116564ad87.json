{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _LoginsecretairePage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./loginsecretaire.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./loginsecretaire.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { loginsecretaire, secuid } from 'src/firebaseConfig';\nlet LoginsecretairePage = (_LoginsecretairePage = class LoginsecretairePage {\n  constructor(toastController, firestore, router) {\n    this.toastController = toastController;\n    this.firestore = firestore;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n  }\n  ngOnInit() {}\n  onLoginSecretaire() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const result = yield loginsecretaire(_this.firestore, _this.email, _this.password);\n        if (result) {\n          const {\n            uid\n          } = result;\n          console.log('Login successful! Navigating to homemedecin page...');\n          console.log('Medecin UID:', uid);\n          // Affectez la valeur de l'UID à la variable exportable medecinUid\n          secuid.uid = uid;\n          medsec = uid;\n          _this.router.navigate(['/app-secretaire']);\n        } else {\n          console.log('Login failed. Handle failure actions.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la connexion du médecin :', error);\n      }\n    })();\n  }\n  back() {\n    this.navCtrl.navigateForward('/home');\n  }\n}, _LoginsecretairePage.ctorParameters = () => [{\n  type: ToastController\n}, {\n  type: AngularFirestore\n}, {\n  type: Router\n}], _LoginsecretairePage);\nLoginsecretairePage = __decorate([Component({\n  selector: 'app-loginsecretaire',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginsecretairePage);\nexport { LoginsecretairePage };\nexport let medsec;","map":{"version":3,"names":["Component","AngularFirestore","Router","ToastController","loginsecretaire","secuid","LoginsecretairePage","_LoginsecretairePage","constructor","toastController","firestore","router","email","password","ngOnInit","onLoginSecretaire","_this","_asyncToGenerator","result","uid","console","log","medsec","navigate","error","back","navCtrl","navigateForward","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\loginsecretaire\\loginsecretaire.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { medecinUid } from '../recherche-medecin/recherche-medecin.page';\nimport { loginsecretaire,secuid } from 'src/firebaseConfig';\n\n@Component({\n  selector: 'app-loginsecretaire',\n  templateUrl: './loginsecretaire.page.html',\n  styleUrls: ['./loginsecretaire.page.scss'],\n})\nexport class LoginsecretairePage implements OnInit {\n\n  email: string = '';\n  password: string = '';\n  navCtrl: any;\n\n\n  constructor(private toastController: ToastController, private firestore: AngularFirestore, private router: Router) { }\n  ngOnInit(){\n\n  }\n\n\n  async onLoginSecretaire() {\n    try {\n      const result = await loginsecretaire(this.firestore, this.email, this.password);\n      if (result) {\n        const { uid } = result;\n        console.log('Login successful! Navigating to homemedecin page...');\n        console.log('Medecin UID:', uid);\n\n        // Affectez la valeur de l'UID à la variable exportable medecinUid\n        secuid.uid = uid;\n        medsec=uid;\n\n        \n        this.router.navigate(['/app-secretaire']);\n      } else {\n        console.log('Login failed. Handle failure actions.');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la connexion du médecin :', error);\n    }\n  }\n\n  back() {\n    this.navCtrl.navigateForward('/home');\n  }\n}\nexport let medsec:string;\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,SAASC,eAAe,EAACC,MAAM,QAAQ,oBAAoB;AAOpD,IAAMC,mBAAmB,IAAAC,oBAAA,GAAzB,MAAMD,mBAAmB;EAO9BE,YAAoBC,eAAgC,EAAUC,SAA2B,EAAUC,MAAc;IAA7F,KAAAF,eAAe,GAAfA,eAAe;IAA2B,KAAAC,SAAS,GAATA,SAAS;IAA4B,KAAAC,MAAM,GAANA,MAAM;IALzG,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAIgG;EACrHC,QAAQA,CAAA,GAER;EAGMC,iBAAiBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrB,IAAI;QACF,MAAMC,MAAM,SAASd,eAAe,CAACY,KAAI,CAACN,SAAS,EAAEM,KAAI,CAACJ,KAAK,EAAEI,KAAI,CAACH,QAAQ,CAAC;QAC/E,IAAIK,MAAM,EAAE;UACV,MAAM;YAAEC;UAAG,CAAE,GAAGD,MAAM;UACtBE,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;UAClED,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;UAEhC;UACAd,MAAM,CAACc,GAAG,GAAGA,GAAG;UAChBG,MAAM,GAACH,GAAG;UAGVH,KAAI,CAACL,MAAM,CAACY,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;QAC3C,CAAC,MAAM;UACLH,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACtD;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IAAC;EACH;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACC,OAAO,CAACC,eAAe,CAAC,OAAO,CAAC;EACvC;;;;;;;;AArCWrB,mBAAmB,GAAAsB,UAAA,EAL/B5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,qBAAqB;EAC/BC,QAAA,EAAAC,oBAA0C;;CAE3C,CAAC,C,EACWzB,mBAAmB,CAsC/B;;AACD,OAAO,IAAIgB,MAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}