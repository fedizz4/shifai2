{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _HeureComponent, _HeureModule;\nimport { IonicModule } from '@ionic/angular';\nimport { RendezvousmodalComponent } from '../rendezvousmodal/rendezvousmodal.component';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport { selectedDate } from '../work-hours-modal/work-hours-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/common\";\nfunction HeureComponent_ion_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 4);\n    i0.ɵɵlistener(\"click\", function HeureComponent_ion_button_10_Template_ion_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const index_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.toggleSelection(index_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hour_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.isHourTaken(index_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(hour_r1);\n  }\n}\nexport class HeureComponent {\n  constructor(modalController, firestore) {\n    this.modalController = modalController;\n    this.firestore = firestore;\n    this.selectedHour = '';\n    this.workHours = ['8H00 - 8H30', '8H30 - 9H00', '9H00 - 9H30', '9H30 - 10H00', '10H00 - 10H30', '10H30 - 11H00', '11H00 - 11H30', '11H30 - 12H00', '14H00 - 14H30', '14H30 - 15H00', '15H00 - 15H30', '15H30 - 16H00', '16H00 - 16H30'];\n    this.hourAvailability = Array(this.workHours.length).fill(true); // Tableau pour indiquer l'accessibilité de chaque heure\n  }\n  ngOnInit() {\n    console.log('Selected date:', selectedDate);\n    this.getTakenHoursByDate(medecinUid, selectedDate); // Charger les heures prises au démarrage\n  }\n  getTakenHoursByDate(uid, date) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const query = _this.firestore.collection('medecin').doc(uid).collection('rdv', ref => ref.where('date', '==', date));\n      const snapshot = yield query.get().toPromise();\n      if (snapshot) {\n        _this.hourAvailability = Array.from({\n          length: _this.workHours.length\n        }, () => true); // Reset hour availability to all available\n        snapshot.docs.forEach(doc => {\n          const rdvData = doc.data();\n          if (rdvData && rdvData['heure']) {\n            const index = _this.workHours.indexOf(rdvData['heure']);\n            if (index !== -1) {\n              _this.hourAvailability[index] = false; // Marquer l'heure comme indisponible si elle est prise\n            }\n          }\n        });\n        console.log('Hour availability:', _this.hourAvailability);\n      } else {\n        console.error('No snapshot available.');\n      }\n    })();\n  }\n  isHourTaken(index) {\n    return !this.hourAvailability[index];\n  }\n  toggleSelection(index) {\n    selectedHour = this.workHours[index];\n    console.log('Selected date:', selectedDate);\n    console.log('Selected hour:', selectedHour);\n    console.log('Med:', medecinUid);\n  }\n  openrdvModal() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this2.modalController.create({\n        component: RendezvousmodalComponent,\n        cssClass: 'work-hours-modal'\n      });\n      _this2.close();\n      return yield modal.present();\n    })();\n  }\n  close() {\n    this.modalController.dismiss();\n  }\n}\n_HeureComponent = HeureComponent;\n_HeureComponent.ɵfac = function HeureComponent_Factory(t) {\n  return new (t || _HeureComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.AngularFirestore));\n};\n_HeureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _HeureComponent,\n  selectors: [[\"app-heure\"]],\n  decls: 11,\n  vars: 1,\n  consts: [[\"slot\", \"end\"], [3, \"click\"], [\"slot\", \"start\"], [3, \"disabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"click\"]],\n  template: function HeureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Personne\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-buttons\", 0)(5, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function HeureComponent_Template_ion_button_click_5_listener() {\n        return ctx.openrdvModal();\n      });\n      i0.ɵɵtext(6, \"Suivant\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"ion-buttons\", 2)(8, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function HeureComponent_Template_ion_button_click_8_listener() {\n        return ctx.close();\n      });\n      i0.ɵɵtext(9, \"Fermer\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(10, HeureComponent_ion_button_10_Template, 2, 2, \"ion-button\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.workHours);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.IonButton, i1.IonButtons, i1.IonHeader, i1.IonTitle, i1.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class HeureModule {}\n_HeureModule = HeureModule;\n_HeureModule.ɵfac = function HeureModule_Factory(t) {\n  return new (t || _HeureModule)();\n};\n_HeureModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _HeureModule\n});\n_HeureModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [AngularFirestore],\n  imports: [CommonModule, FormsModule, IonicModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(HeureModule, {\n    declarations: [HeureComponent],\n    imports: [CommonModule, FormsModule, IonicModule]\n  });\n})();\nexport let selectedHour;","map":{"version":3,"names":["IonicModule","RendezvousmodalComponent","medecinUid","selectedDate","CommonModule","FormsModule","AngularFirestore","i0","ɵɵelementStart","ɵɵlistener","HeureComponent_ion_button_10_Template_ion_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","index_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","toggleSelection","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","isHourTaken","ɵɵadvance","ɵɵtextInterpolate","hour_r1","HeureComponent","constructor","modalController","firestore","selectedHour","workHours","hourAvailability","Array","length","fill","ngOnInit","console","log","getTakenHoursByDate","uid","date","_this","_asyncToGenerator","query","collection","doc","ref","where","snapshot","get","toPromise","from","docs","forEach","rdvData","data","indexOf","error","openrdvModal","_this2","modal","create","component","cssClass","close","present","dismiss","ɵɵdirectiveInject","i1","ModalController","i2","selectors","decls","vars","consts","template","HeureComponent_Template","rf","ctx","HeureComponent_Template_ion_button_click_5_listener","HeureComponent_Template_ion_button_click_8_listener","ɵɵtemplate","HeureComponent_ion_button_10_Template","HeureModule","imports","declarations"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\affiche-medecin\\heure\\heure.component.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\affiche-medecin\\heure\\heure.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\nimport { IonicModule, ModalController } from '@ionic/angular';\nimport { RendezvousmodalComponent } from '../rendezvousmodal/rendezvousmodal.component';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport { selectedDate } from '../work-hours-modal/work-hours-modal.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\n\n@Component({\n  selector: 'app-heure',\n  templateUrl: './heure.component.html',\n  styleUrls: ['./heure.component.scss'],\n})\nexport class HeureComponent implements OnInit {\n  selectedHour: string = '';\n  workHours: string[] = [\n    '8H00 - 8H30',\n    '8H30 - 9H00',\n    '9H00 - 9H30',\n    '9H30 - 10H00',\n    '10H00 - 10H30',\n    '10H30 - 11H00',\n    '11H00 - 11H30',\n    '11H30 - 12H00',\n    '14H00 - 14H30',\n    '14H30 - 15H00',\n    '15H00 - 15H30',\n    '15H30 - 16H00',\n    '16H00 - 16H30',\n  ];\n  hourAvailability: boolean[] = Array(this.workHours.length).fill(true); // Tableau pour indiquer l'accessibilité de chaque heure\n\n  constructor(private modalController: ModalController, private firestore: AngularFirestore) {}\n\n  ngOnInit() {\n    console.log('Selected date:', selectedDate);\n    this.getTakenHoursByDate(medecinUid, selectedDate); // Charger les heures prises au démarrage\n  }\n\n  async getTakenHoursByDate(uid: string, date: string) {\n    const query = this.firestore.collection('medecin').doc(uid).collection('rdv', ref => ref.where('date', '==', date));\n    const snapshot = await query.get().toPromise();\n\n    if (snapshot) {\n      this.hourAvailability = Array.from({ length: this.workHours.length }, () => true); // Reset hour availability to all available\n\n      snapshot.docs.forEach(doc => {\n        const rdvData = doc.data();\n        if (rdvData && rdvData['heure']) {\n          const index = this.workHours.indexOf(rdvData['heure']);\n          if (index !== -1) {\n            this.hourAvailability[index] = false; // Marquer l'heure comme indisponible si elle est prise\n          }\n        }\n      });\n\n      console.log('Hour availability:', this.hourAvailability);\n    } else {\n      console.error('No snapshot available.');\n    }\n  }\n  isHourTaken(index: number): boolean {\n    return !this.hourAvailability[index];\n  }\n\n  toggleSelection(index: number) {\n    selectedHour = this.workHours[index];\n    console.log('Selected date:', selectedDate);\n    console.log('Selected hour:', selectedHour);\n    console.log('Med:', medecinUid);\n  }\n\n  async openrdvModal() {\n    const modal = await this.modalController.create({\n      component: RendezvousmodalComponent,\n      cssClass: 'work-hours-modal',\n    });\n    this.close();\n    return await modal.present();\n  }\n\n  close() {\n    this.modalController.dismiss();\n  }\n}\n\n@NgModule({\n  declarations: [HeureComponent],\n  imports: [CommonModule, FormsModule, IonicModule],\n  providers: [AngularFirestore],\n})\nexport class HeureModule {}\n\nexport let selectedHour: string;\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Personne</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"openrdvModal()\">Suivant</ion-button>\n    </ion-buttons>\n    <ion-buttons slot=\"start\">\n      <ion-button (click)=\"close()\">Fermer</ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n\n  <ion-button [disabled]=\"isHourTaken(index)\" (click)=\"toggleSelection(index)\" *ngFor=\"let hour of workHours; let index = index\">{{ hour }}</ion-button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}