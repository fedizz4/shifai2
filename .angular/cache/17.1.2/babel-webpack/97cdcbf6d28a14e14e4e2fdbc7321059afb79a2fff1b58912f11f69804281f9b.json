{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _LoginPage;\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { getDoc, doc, collection, getDocs } from 'firebase/firestore';\nimport { auth, firestore } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = () => ({\n  standalone: true\n});\nexport class LoginPage {\n  constructor(navCtrl, toastController) {\n    this.navCtrl = navCtrl;\n    this.toastController = toastController;\n    this.email = '';\n    this.password = '';\n  }\n  loginWithGenericAccount() {\n    return _asyncToGenerator(function* () {\n      try {\n        const genericCredential = yield signInWithEmailAndPassword(auth, 'fedizz4@gmail.com', 'azerty');\n        const genericUser = genericCredential.user;\n        if (genericUser) {\n          // L'utilisateur générique est connecté, exporter son UID si nécessaire\n          const userUid = genericUser.uid;\n          console.log('Utilisateur générique connecté :', genericUser);\n        } else {\n          console.log('Erreur lors de la connexion avec le compte générique');\n          // Gérer l'erreur de connexion générique\n        }\n      } catch (error) {\n        console.log('Erreur lors de la connexion :', error);\n        // Gérer l'erreur de connexion générique\n      }\n    })();\n  }\n  loginUser() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Vérifier les identifiants saisis avec la base d'inscrits\n        const inscritsRef = collection(firestore, 'inscrits');\n        const querySnapshot = yield getDocs(inscritsRef);\n        querySnapshot.forEach(doc => {\n          const inscrit = doc.data();\n          if (inscrit['email'] === _this.email && inscrit['password'] === _this.password) {\n            // L'utilisateur est enregistré dans la base d'inscrits\n            console.log('Utilisateur inscrit trouvé :', inscrit);\n            // Rediriger vers la page souhaitée après la connexion réussie\n            _this.performOperationsWithUser(inscrit['uid']);\n          }\n        });\n        // Afficher un message d'erreur si les identifiants sont incorrects\n        _this.presentToast('Identifiants invalides');\n      } catch (error) {\n        console.log('Erreur lors de la connexion :', error);\n        _this.presentToast('Erreur lors de la connexion');\n      }\n    })();\n  }\n  performOperationsWithUser(uid) {\n    return _asyncToGenerator(function* () {\n      // Vous pouvez exécuter ici les opérations nécessaires avec l'UID de l'utilisateur inscrit\n      console.log('Opérations à effectuer avec l\\'UID de l\\'utilisateur inscrit');\n      // Par exemple, récupérer les données de l'utilisateur inscrit à partir de la collection 'inscrit'\n      const inscritRef = doc(firestore, 'inscrit', uid);\n      getDoc(inscritRef).then(docSnapshot => {\n        if (docSnapshot.exists()) {\n          const userData = docSnapshot.data();\n          console.log('Données de l\\'utilisateur inscrit :', userData);\n          // Vous pouvez manipuler les données de l'utilisateur inscrit ici\n        } else {\n          console.log('Aucune donnée trouvée pour l\\'utilisateur inscrit avec l\\'UID :', uid);\n        }\n      }).catch(error => {\n        console.error('Erreur lors de la récupération des données de l\\'utilisateur inscrit :', error);\n      });\n    })();\n  }\n  presentToast(message) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message: message,\n        duration: 3000,\n        position: 'bottom'\n      });\n      toast.present();\n    })();\n  }\n  back() {\n    this.navCtrl.navigateForward('/home-avant-compte');\n  }\n  ngOnInit() {}\n}\n_LoginPage = LoginPage;\n_LoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || _LoginPage)(i0.ɵɵdirectiveInject(i1.NavController), i0.ɵɵdirectiveInject(i1.ToastController));\n};\n_LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 35,\n  vars: 4,\n  consts: [[1, \"backgrounds\"], [1, \"connexion\"], [\"collapse\", \"condense\"], [\"color\", \"light\", \"slot\", \"start\", \"fill\", \"clear\", 3, \"click\"], [1, \"ion-text-center\"], [1, \"form\"], [1, \"item\"], [\"placeholder\", \"Enter email\", \"type\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"mail-outline\"], [\"shape\", \"round\", 1, \"item\"], [\"placeholder\", \"Enter password\", \"type\", \"password\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"name\", \"lock-closed-outline\"], [\"size\", \"large\", \"expand\", \"block\", \"shape\", \"round\", 3, \"click\"], [\"routerLink\", \"/forgotpass\", \"fill\", \"clear\"], [\"routerLink\", \"/signup\", \"fill\", \"clear\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-content\")(1, \"div\", 0)(2, \"div\", 1)(3, \"ion-header\", 2)(4, \"ion-button\", 3);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_4_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵtext(5, \" \\u2190 Retour \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"h4\");\n      i0.ɵɵtext(9, \"Connexion\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"br\")(11, \"br\")(12, \"br\");\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"ion-item\")(16, \"ion-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_16_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelement(17, \"ion-icon\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementStart(19, \"form\")(20, \"div\", 9)(21, \"ion-item\")(22, \"ion-input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_22_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelement(23, \"ion-icon\", 11);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\");\n      i0.ɵɵelement(26, \"br\")(27, \"br\")(28, \"br\");\n      i0.ɵɵelementStart(29, \"ion-button\", 12);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_29_listener() {\n        return ctx.loginUser();\n      });\n      i0.ɵɵtext(30, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"ion-button\", 13);\n      i0.ɵɵtext(32, \" Forgot Password \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"ion-button\", 14);\n      i0.ɵɵtext(34, \" Vous n'avez pas de compte ? \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.password)(\"ngModelOptions\", i0.ɵɵpureFunction0(3, _c0));\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm, i1.IonButton, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.TextValueAccessor, i1.RouterLinkDelegate, i3.RouterLink],\n  styles: [\".connexion[_ngcontent-%COMP%] {\\n  background-color: #3575FE;\\n  border-radius: 0% 0% 20% 20%;\\n  left: 0px;\\n  right: 0px;\\n}\\n\\n.item[_ngcontent-%COMP%] {\\n  margin-left: 10%;\\n  margin-right: 10%;\\n}\\n\\n.backgrounds[_ngcontent-%COMP%] {\\n  position: absolute; \\n\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%; \\n\\n  background-image: url('backLogin.png');\\n  background-size: cover; \\n\\n  background-position: center center;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  z-index: -1; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vTWFjQm9vayUyMEFpci9EZXNrdG9wL3NoaWZhaTFWVi9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHlCQUFBO0VBQ0EsNEJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQ0NKOztBRENBO0VBRUksZ0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBRENBO0VBQ0ksa0JBQUEsRUFBQSx1Q0FBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUEsRUFBQSx5Q0FBQTtFQUNBLHNDQUFBO0VBQ0Esc0JBQUEsRUFBQSw4REFBQTtFQUNBLGtDQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFFQSxXQUFBLEVBQUEsOENBQUE7QUNDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb25uZXhpb257XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzU3NUZFO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMCUgMCUgMjAlIDIwJSA7XHJcbiAgICBsZWZ0OiAwcHg7XHJcbiAgICByaWdodDogMHB4O1xyXG59XHJcbi5pdGVte1xyXG4gICBcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxufVxyXG4uYmFja2dyb3VuZHN7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7IC8qIHBvdXIgcmVzdGVyIGZpeGUgZW4gYmFzIGRlIGxhIHBhZ2UgKi9cclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTsgLyogQWp1c3RleiBsYSBoYXV0ZXVyIHNlbG9uIHZvcyBiZXNvaW5zICovXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWFnZS9iYWNrTG9naW4ucG5nJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAvKiBBanVzdGV6IGxlIHJlZGltZW5zaW9ubmVtZW50IGRlIGwnaW1hZ2Ugc2Vsb24gdm9zIGJlc29pbnMgKi9cclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgIC8vIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgei1pbmRleDogLTE7IC8qIFBsYWNlei1sZSBhdS1kZXNzdXMgZHUgY29udGVudSBkZSBsYSBwYWdlICovIFxyXG59IiwiLmNvbm5leGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNTc1RkU7XG4gIGJvcmRlci1yYWRpdXM6IDAlIDAlIDIwJSAyMCU7XG4gIGxlZnQ6IDBweDtcbiAgcmlnaHQ6IDBweDtcbn1cblxuLml0ZW0ge1xuICBtYXJnaW4tbGVmdDogMTAlO1xuICBtYXJnaW4tcmlnaHQ6IDEwJTtcbn1cblxuLmJhY2tncm91bmRzIHtcbiAgcG9zaXRpb246IGFic29sdXRlOyAvKiBwb3VyIHJlc3RlciBmaXhlIGVuIGJhcyBkZSBsYSBwYWdlICovXG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTsgLyogQWp1c3RleiBsYSBoYXV0ZXVyIHNlbG9uIHZvcyBiZXNvaW5zICovXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uLy4uL2Fzc2V0cy9pbWFnZS9iYWNrTG9naW4ucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyAvKiBBanVzdGV6IGxlIHJlZGltZW5zaW9ubmVtZW50IGRlIGwnaW1hZ2Ugc2Vsb24gdm9zIGJlc29pbnMgKi9cbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgei1pbmRleDogLTE7IC8qIFBsYWNlei1sZSBhdS1kZXNzdXMgZHUgY29udGVudSBkZSBsYSBwYWdlICovXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport let inscritUid;","map":{"version":3,"names":["signInWithEmailAndPassword","getDoc","doc","collection","getDocs","auth","firestore","LoginPage","constructor","navCtrl","toastController","email","password","loginWithGenericAccount","_asyncToGenerator","genericCredential","genericUser","user","userUid","uid","console","log","error","loginUser","_this","inscritsRef","querySnapshot","forEach","inscrit","data","performOperationsWithUser","presentToast","inscritRef","then","docSnapshot","exists","userData","catch","message","_this2","toast","create","duration","position","present","back","navigateForward","ngOnInit","i0","ɵɵdirectiveInject","i1","NavController","ToastController","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPage_Template_ion_button_click_4_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","LoginPage_Template_ion_input_ngModelChange_16_listener","$event","LoginPage_Template_ion_input_ngModelChange_22_listener","LoginPage_Template_ion_button_click_29_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","inscritUid"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\login\\login.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\login\\login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { getDoc, doc, collection, getDocs } from 'firebase/firestore';\nimport { auth, firestore } from 'src/firebaseConfig';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n\n  email: string = '';\n  password: string = '';\n\n  constructor(private navCtrl: NavController, private toastController: ToastController) { }\n  async loginWithGenericAccount() {\n    try {\n      const genericCredential = await signInWithEmailAndPassword(auth, 'fedizz4@gmail.com', 'azerty');\n      const genericUser = genericCredential.user;\n\n      if (genericUser) {\n        // L'utilisateur générique est connecté, exporter son UID si nécessaire\n        const userUid = genericUser.uid;\n        console.log('Utilisateur générique connecté :', genericUser);\n      } else {\n        console.log('Erreur lors de la connexion avec le compte générique');\n        // Gérer l'erreur de connexion générique\n      }\n    } catch (error) {\n      console.log('Erreur lors de la connexion :', error);\n      // Gérer l'erreur de connexion générique\n    }\n  }\n\n  async loginUser() {\n    try {\n      // Vérifier les identifiants saisis avec la base d'inscrits\n      const inscritsRef = collection(firestore, 'inscrits');\n      const querySnapshot = await getDocs(inscritsRef);\n\n      querySnapshot.forEach((doc) => {\n        const inscrit = doc.data();\n        if (inscrit['email'] === this.email && inscrit['password'] === this.password) {\n          // L'utilisateur est enregistré dans la base d'inscrits\n          console.log('Utilisateur inscrit trouvé :', inscrit);\n\n          // Rediriger vers la page souhaitée après la connexion réussie\n          this.performOperationsWithUser(inscrit['uid']);\n        }\n      });\n\n      // Afficher un message d'erreur si les identifiants sont incorrects\n      this.presentToast('Identifiants invalides');\n    } catch (error) {\n      console.log('Erreur lors de la connexion :', error);\n      this.presentToast('Erreur lors de la connexion');\n    }\n  }\n  async performOperationsWithUser(uid: string) {\n    // Vous pouvez exécuter ici les opérations nécessaires avec l'UID de l'utilisateur inscrit\n    console.log('Opérations à effectuer avec l\\'UID de l\\'utilisateur inscrit');\n\n    // Par exemple, récupérer les données de l'utilisateur inscrit à partir de la collection 'inscrit'\n    const inscritRef = doc(firestore, 'inscrit', uid);\n    getDoc(inscritRef).then((docSnapshot) => {\n      if (docSnapshot.exists()) {\n        const userData = docSnapshot.data();\n        console.log('Données de l\\'utilisateur inscrit :', userData);\n        // Vous pouvez manipuler les données de l'utilisateur inscrit ici\n      } else {\n        console.log('Aucune donnée trouvée pour l\\'utilisateur inscrit avec l\\'UID :', uid);\n      }\n    }).catch((error) => {\n      console.error('Erreur lors de la récupération des données de l\\'utilisateur inscrit :', error);\n    });\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message: message,\n      duration: 3000,\n      position: 'bottom',\n    });\n    toast.present();\n  }\n\n  back() {\n    this.navCtrl.navigateForward('/home-avant-compte');\n  }\n\n  ngOnInit() {\n  }\n}\nexport let inscritUid: string;\n\n","\n  <ion-content >\n    <div class=\"backgrounds\">\n    <div class=\"connexion\">\n    <ion-header collapse=\"condense\">\n      <ion-button color=\"light\" slot=\"start\" (click)=\"back()\" fill=\"clear\">\n        ← Retour\n      </ion-button>\n    </ion-header>\n    \n    \n    \n          <div class=\"ion-text-center\" >\n            <br>\n            <h4>Connexion</h4>\n          </div>\n          <br><br><br>\n          <div class=\"form\">\n            <div class=\"item\">\n            <ion-item>\n              <ion-input placeholder=\"Enter email\" type=\"email\" [(ngModel)]=\"email\">\n\n                <ion-icon name=\"mail-outline\">\n                </ion-icon>\n              </ion-input>\n            </ion-item>\n          </div>\n            <br>\n            <form>\n              <div class=\"item\" shape=\"round\">\n            <ion-item>\n              <ion-input placeholder=\"Enter password\" type=\"password\" [(ngModel)]=\"password\" [ngModelOptions]=\"{standalone: true}\">\n\n                <ion-icon name=\"lock-closed-outline\"></ion-icon>\n              </ion-input>\n            </ion-item>\n            </div>\n          </form>\n            <br>\n          </div>\n          \n        </div>\n          <div>\n            <br><br><br>\n            <ion-button (click)=\"loginUser()\" size=\"large\" expand=\"block\" shape=\"round\">Login</ion-button>\n            \n            <ion-button routerLink=\"/forgotpass\" fill=\"clear\">\n              Forgot Password\n            </ion-button>\n            \n          </div>\n    \n        <ion-button routerLink=\"/signup\" fill=\"clear\">\n          Vous n'avez pas de compte ? \n        </ion-button>\n      </div>\n  </ion-content>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}