{"ast":null,"code":"import { TestBed, waitForAsync } from '@angular/core/testing';\nimport { SignupPage } from './signup.page';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ToastController } from '@ionic/angular';\nimport { throwError } from 'rxjs';\ndescribe('SignupPage error handling', () => {\n  let component;\n  let fixture;\n  let mockFirestore;\n  let mockToastController;\n  beforeEach(waitForAsync(() => {\n    mockFirestore = jasmine.createSpyObj('AngularFirestore', ['collection', 'doc', 'set']);\n    mockFirestore.collection.and.returnValue({\n      add: () => throwError({\n        error: 'ra'\n      })\n    });\n    mockToastController = jasmine.createSpyObj('ToastController', ['create', 'present']);\n    TestBed.configureTestingModule({\n      declarations: [SignupPage],\n      providers: [{\n        provide: AngularFirestore,\n        useValue: mockFirestore\n      }, {\n        provide: ToastController,\n        useValue: mockToastController\n      }]\n    }).compileComponents();\n    fixture = TestBed.createComponent(SignupPage);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should display an error message when the email already exists', () => {\n    const mockUserData = {\n      familyName: 'Doe',\n      name: 'John',\n      email: 'john.doe@example.com',\n      password: '123456',\n      date: '1990-01-01',\n      sexe: 'M',\n      role: 'patient'\n    };\n    component.familyName = mockUserData.familyName;\n    component.name = mockUserData.name;\n    component.email = mockUserData.email;\n    component.password = mockUserData.password;\n    component.date = mockUserData.date;\n    component.sexe = mockUserData.sexe;\n    component.role = mockUserData.role;\n    component.AddUser();\n    expect(mockToastController.create).toHaveBeenCalledWith({\n      message: 'The email address already exists!',\n      duration: 3000,\n      position: 'bottom'\n    });\n    expect(mockToastController.present).toHaveBeenCalled();\n  });\n});","map":{"version":3,"names":["TestBed","waitForAsync","SignupPage","AngularFirestore","ToastController","throwError","describe","component","fixture","mockFirestore","mockToastController","beforeEach","jasmine","createSpyObj","collection","and","returnValue","add","error","configureTestingModule","declarations","providers","provide","useValue","compileComponents","createComponent","componentInstance","detectChanges","it","mockUserData","familyName","name","email","password","date","sexe","role","AddUser","expect","create","toHaveBeenCalledWith","message","duration","position","present","toHaveBeenCalled"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\signup\\signup.page.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, waitForAsync } from '@angular/core/testing';\nimport { SignupPage } from './signup.page';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AddUserToAuth, app } from 'src/firebaseConfig';\nimport { ToastController } from '@ionic/angular';\nimport { of, throwError } from 'rxjs';\n\ndescribe('SignupPage error handling', () => {\n  let component: SignupPage;\n  let fixture: ComponentFixture<SignupPage>;\n  let mockFirestore: any;\n  let mockToastController: any;\n\n  beforeEach(waitForAsync(() => {\n    mockFirestore = jasmine.createSpyObj('AngularFirestore', ['collection', 'doc', 'set']);\n    mockFirestore.collection.and.returnValue({ add: () => throwError({ error: 'ra' }) });\n    mockToastController = jasmine.createSpyObj('ToastController', ['create', 'present']);\n\n    TestBed.configureTestingModule({\n      declarations: [SignupPage],\n      providers: [\n        { provide: AngularFirestore, useValue: mockFirestore },\n        { provide: ToastController, useValue: mockToastController }\n      ],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(SignupPage);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n\n  it('should display an error message when the email already exists', () => {\n    const mockUserData = {\n      familyName: 'Doe',\n      name: 'John',\n      email: 'john.doe@example.com',\n      password: '123456',\n      date: '1990-01-01',\n      sexe: 'M',\n      role: 'patient'\n    };\n\n    component.familyName = mockUserData.familyName;\n    component.name = mockUserData.name;\n    component.email = mockUserData.email;\n    component.password = mockUserData.password;\n    component.date = mockUserData.date;\n    component.sexe = mockUserData.sexe;\n    component.role = mockUserData.role;\n\n    component.AddUser();\n\n    expect(mockToastController.create).toHaveBeenCalledWith({\n      message: 'The email address already exists!',\n      duration: 3000,\n      position: 'bottom'\n    });\n    expect(mockToastController.present).toHaveBeenCalled();\n  });\n});"],"mappings":"AAAA,SAA2BA,OAAO,EAAEC,YAAY,QAAQ,uBAAuB;AAC/E,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAAaC,UAAU,QAAQ,MAAM;AAErCC,QAAQ,CAAC,2BAA2B,EAAE,MAAK;EACzC,IAAIC,SAAqB;EACzB,IAAIC,OAAqC;EACzC,IAAIC,aAAkB;EACtB,IAAIC,mBAAwB;EAE5BC,UAAU,CAACV,YAAY,CAAC,MAAK;IAC3BQ,aAAa,GAAGG,OAAO,CAACC,YAAY,CAAC,kBAAkB,EAAE,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACtFJ,aAAa,CAACK,UAAU,CAACC,GAAG,CAACC,WAAW,CAAC;MAAEC,GAAG,EAAEA,CAAA,KAAMZ,UAAU,CAAC;QAAEa,KAAK,EAAE;MAAI,CAAE;IAAC,CAAE,CAAC;IACpFR,mBAAmB,GAAGE,OAAO,CAACC,YAAY,CAAC,iBAAiB,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAEpFb,OAAO,CAACmB,sBAAsB,CAAC;MAC7BC,YAAY,EAAE,CAAClB,UAAU,CAAC;MAC1BmB,SAAS,EAAE,CACT;QAAEC,OAAO,EAAEnB,gBAAgB;QAAEoB,QAAQ,EAAEd;MAAa,CAAE,EACtD;QAAEa,OAAO,EAAElB,eAAe;QAAEmB,QAAQ,EAAEb;MAAmB,CAAE;KAE9D,CAAC,CAACc,iBAAiB,EAAE;IAEtBhB,OAAO,GAAGR,OAAO,CAACyB,eAAe,CAACvB,UAAU,CAAC;IAC7CK,SAAS,GAAGC,OAAO,CAACkB,iBAAiB;IACrClB,OAAO,CAACmB,aAAa,EAAE;EACzB,CAAC,CAAC,CAAC;EAEHC,EAAE,CAAC,+DAA+D,EAAE,MAAK;IACvE,MAAMC,YAAY,GAAG;MACnBC,UAAU,EAAE,KAAK;MACjBC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,sBAAsB;MAC7BC,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE,YAAY;MAClBC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE;KACP;IAED7B,SAAS,CAACuB,UAAU,GAAGD,YAAY,CAACC,UAAU;IAC9CvB,SAAS,CAACwB,IAAI,GAAGF,YAAY,CAACE,IAAI;IAClCxB,SAAS,CAACyB,KAAK,GAAGH,YAAY,CAACG,KAAK;IACpCzB,SAAS,CAAC0B,QAAQ,GAAGJ,YAAY,CAACI,QAAQ;IAC1C1B,SAAS,CAAC2B,IAAI,GAAGL,YAAY,CAACK,IAAI;IAClC3B,SAAS,CAAC4B,IAAI,GAAGN,YAAY,CAACM,IAAI;IAClC5B,SAAS,CAAC6B,IAAI,GAAGP,YAAY,CAACO,IAAI;IAElC7B,SAAS,CAAC8B,OAAO,EAAE;IAEnBC,MAAM,CAAC5B,mBAAmB,CAAC6B,MAAM,CAAC,CAACC,oBAAoB,CAAC;MACtDC,OAAO,EAAE,mCAAmC;MAC5CC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;KACX,CAAC;IACFL,MAAM,CAAC5B,mBAAmB,CAACkC,OAAO,CAAC,CAACC,gBAAgB,EAAE;EACxD,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}