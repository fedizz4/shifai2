{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _MedicamentPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./medicament.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./medicament.page.scss?ngResource\";\nimport { Component, ViewChild } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { MedicamentFormComponent } from './medicament-form/medicament-form.component';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { EventService } from 'src/app/event.service';\nimport { ModifComponent } from './modif/modif.component';\nlet MedicamentPage = (_MedicamentPage = class MedicamentPage {\n  constructor(firestore, modalController, eventService) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.eventService = eventService;\n    this.medicamentFormComponent = MedicamentFormComponent;\n    this.uid = inscritUid;\n    this.medicaments = [];\n    // Souscrire à l'événement de mise à jour des médicaments\n    this.subscription = this.eventService.medicamentUpdated.subscribe(() => {\n      this.fetchMedicaments();\n    });\n  }\n  openMedicamentFormModal() {\n    this.modalController.create({\n      component: this.medicamentFormComponent\n    }).then(modal => {\n      modal.present();\n    });\n  }\n  openModifModal(med) {\n    this.modalController.create({\n      component: ModifComponent,\n      componentProps: {\n        med: med\n      }\n    }).then(modal => {\n      modal.present();\n    });\n  }\n  dismissModal() {\n    this.modalController.dismiss();\n  }\n  ionViewDidEnter() {\n    // Appeler fetchMedicaments lors de l'entrée dans la vue\n    this.fetchMedicaments();\n  }\n  // Utilisez la fonction pour récupérer les médicaments d'un utilisateur\n  fetchMedicaments() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Effectuer une requête Firestore avec la clause where directement sur la collection\n        const querySnapshot = yield _this.firestore.firestore.collection('medicaments').where('uid', '==', _this.uid).get();\n        // Réinitialiser le tableau des médicaments avant de le remplir à nouveau\n        _this.medicaments = [];\n        // Itérer sur chaque document de la collection\n        querySnapshot.forEach(doc => {\n          // Accéder à l'ID du document via doc.id\n          const idd = doc.id;\n          // Accéder aux données du document via doc.data()\n          const data = doc.data(); // Assurez-vous de caster les données correctement\n          // Ajouter l'ID au champ idd dans les données du médicament\n          data.idd = idd;\n          console.log(idd);\n          // Ajouter le médicament au tableau des médicaments\n          _this.medicaments.push(data);\n        });\n        console.log('Médicaments de l\\'utilisateur :', _this.medicaments);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des médicaments :', error);\n      }\n    })();\n  }\n  ngOnDestroy() {\n    // Assurez-vous de désabonner la souscription pour éviter les fuites de mémoire\n    this.subscription.unsubscribe();\n  }\n  getIconName(prises, label) {\n    const prise = prises.find(p => p.label === label);\n    return prise ? prise.checked ? 'checkmark' : 'close' : '';\n  }\n}, _MedicamentPage.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}, {\n  type: EventService\n}], _MedicamentPage.propDecorators = {\n  myModal: [{\n    type: ViewChild,\n    args: ['myModal']\n  }]\n}, _MedicamentPage);\nMedicamentPage = __decorate([Component({\n  selector: 'app-medicament',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], MedicamentPage);\nexport { MedicamentPage };","map":{"version":3,"names":["Component","ViewChild","ModalController","MedicamentFormComponent","AngularFirestore","inscritUid","EventService","ModifComponent","MedicamentPage","_MedicamentPage","constructor","firestore","modalController","eventService","medicamentFormComponent","uid","medicaments","subscription","medicamentUpdated","subscribe","fetchMedicaments","openMedicamentFormModal","create","component","then","modal","present","openModifModal","med","componentProps","dismissModal","dismiss","ionViewDidEnter","_this","_asyncToGenerator","querySnapshot","collection","where","get","forEach","doc","idd","id","data","console","log","push","error","ngOnDestroy","unsubscribe","getIconName","prises","label","prise","find","p","checked","args","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\medicament\\medicament.page.ts"],"sourcesContent":["import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { MedicamentFormComponent } from './medicament-form/medicament-form.component';\nimport { getMedicamentsByUid } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { EventService } from 'src/app/event.service';\nimport { Subscription } from 'rxjs';\nimport { ModifComponent } from './modif/modif.component';\n\n\ninterface MedicamentData {\n  idd:string; \n  nom: string;\n  dosage: number;\n  prise: boolean[];\n  uid:string\n  // Autres champs si nécessaire...\n}\n@Component({\n  selector: 'app-medicament',\n  templateUrl: 'medicament.page.html',\n  styleUrls: ['medicament.page.scss']\n})\nexport class MedicamentPage implements OnDestroy {\n\n  @ViewChild('myModal') myModal: any;\n  medicamentFormComponent = MedicamentFormComponent;\n\n  uid = inscritUid;\n  medicaments: any[] = [];\n  medicament!:MedicamentData ;\n  \n  private subscription: Subscription;\n\n  constructor(private firestore: AngularFirestore,private modalController: ModalController, private eventService: EventService) {\n     // Souscrire à l'événement de mise à jour des médicaments\n     this.subscription = this.eventService.medicamentUpdated.subscribe(() => {\n      this.fetchMedicaments();\n    });\n  }\n\n\n  \n  openMedicamentFormModal() {\n    this.modalController.create({\n      component: this.medicamentFormComponent,\n    }).then(modal => {\n      modal.present();\n    });\n  }\n  openModifModal(med:MedicamentData) {\n    this.modalController.create({\n      component: ModifComponent,\n      componentProps :{ med:med }\n      \n    }).then(modal => {\n      modal.present();\n    });\n  }\n\n  dismissModal() {\n    this.modalController.dismiss();\n  }\n\n\n  ionViewDidEnter() {\n    // Appeler fetchMedicaments lors de l'entrée dans la vue\n    this.fetchMedicaments();\n  }\n\n  \n\n    // Utilisez la fonction pour récupérer les médicaments d'un utilisateur\n\n    async fetchMedicaments() {\n      try {\n        // Effectuer une requête Firestore avec la clause where directement sur la collection\n        const querySnapshot = await this.firestore.firestore\n          .collection('medicaments')\n          .where('uid', '==', this.uid)\n          .get();\n    \n        // Réinitialiser le tableau des médicaments avant de le remplir à nouveau\n        this.medicaments = [];\n    \n        // Itérer sur chaque document de la collection\n        querySnapshot.forEach((doc) => {\n          // Accéder à l'ID du document via doc.id\n          const idd = doc.id;\n    \n          // Accéder aux données du document via doc.data()\n          const data = doc.data() as MedicamentData; // Assurez-vous de caster les données correctement\n    \n          // Ajouter l'ID au champ idd dans les données du médicament\n          data.idd = idd;\n          console.log(idd)\n    \n          // Ajouter le médicament au tableau des médicaments\n          this.medicaments.push(data);\n        });\n    \n        console.log('Médicaments de l\\'utilisateur :', this.medicaments);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des médicaments :', error);\n      }\n    }\n    \n    \n    \n    ngOnDestroy() {\n      // Assurez-vous de désabonner la souscription pour éviter les fuites de mémoire\n      this.subscription.unsubscribe();\n    }\n\n   \n\n    getIconName(prises: any[], label: string): string {\n      const prise = prises.find(p => p.label === label);\n      return prise ? (prise.checked ? 'checkmark' : 'close') : '';\n    }\n    \n  \n}\n\n"],"mappings":";;;;;AAAA,SAASA,SAAS,EAAaC,SAAS,QAAQ,eAAe;AAC/D,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,uBAAuB,QAAQ,6CAA6C;AAErF,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,YAAY,QAAQ,uBAAuB;AAEpD,SAASC,cAAc,QAAQ,yBAAyB;AAgBjD,IAAMC,cAAc,IAAAC,eAAA,GAApB,MAAMD,cAAc;EAWzBE,YAAoBC,SAA2B,EAASC,eAAgC,EAAUC,YAA0B;IAAxG,KAAAF,SAAS,GAATA,SAAS;IAA2B,KAAAC,eAAe,GAAfA,eAAe;IAA2B,KAAAC,YAAY,GAAZA,YAAY;IAR9G,KAAAC,uBAAuB,GAAGX,uBAAuB;IAEjD,KAAAY,GAAG,GAAGV,UAAU;IAChB,KAAAW,WAAW,GAAU,EAAE;IAMpB;IACA,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,YAAY,CAACK,iBAAiB,CAACC,SAAS,CAAC,MAAK;MACtE,IAAI,CAACC,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;EAIAC,uBAAuBA,CAAA;IACrB,IAAI,CAACT,eAAe,CAACU,MAAM,CAAC;MAC1BC,SAAS,EAAE,IAAI,CAACT;KACjB,CAAC,CAACU,IAAI,CAACC,KAAK,IAAG;MACdA,KAAK,CAACC,OAAO,EAAE;IACjB,CAAC,CAAC;EACJ;EACAC,cAAcA,CAACC,GAAkB;IAC/B,IAAI,CAAChB,eAAe,CAACU,MAAM,CAAC;MAC1BC,SAAS,EAAEhB,cAAc;MACzBsB,cAAc,EAAE;QAAED,GAAG,EAACA;MAAG;KAE1B,CAAC,CAACJ,IAAI,CAACC,KAAK,IAAG;MACdA,KAAK,CAACC,OAAO,EAAE;IACjB,CAAC,CAAC;EACJ;EAEAI,YAAYA,CAAA;IACV,IAAI,CAAClB,eAAe,CAACmB,OAAO,EAAE;EAChC;EAGAC,eAAeA,CAAA;IACb;IACA,IAAI,CAACZ,gBAAgB,EAAE;EACzB;EAIE;EAEMA,gBAAgBA,CAAA;IAAA,IAAAa,KAAA;IAAA,OAAAC,iBAAA;MACpB,IAAI;QACF;QACA,MAAMC,aAAa,SAASF,KAAI,CAACtB,SAAS,CAACA,SAAS,CACjDyB,UAAU,CAAC,aAAa,CAAC,CACzBC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAEJ,KAAI,CAAClB,GAAG,CAAC,CAC5BuB,GAAG,EAAE;QAER;QACAL,KAAI,CAACjB,WAAW,GAAG,EAAE;QAErB;QACAmB,aAAa,CAACI,OAAO,CAAEC,GAAG,IAAI;UAC5B;UACA,MAAMC,GAAG,GAAGD,GAAG,CAACE,EAAE;UAElB;UACA,MAAMC,IAAI,GAAGH,GAAG,CAACG,IAAI,EAAoB,CAAC,CAAC;UAE3C;UACAA,IAAI,CAACF,GAAG,GAAGA,GAAG;UACdG,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;UAEhB;UACAR,KAAI,CAACjB,WAAW,CAAC8B,IAAI,CAACH,IAAI,CAAC;QAC7B,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEZ,KAAI,CAACjB,WAAW,CAAC;MAClE,CAAC,CAAC,OAAO+B,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MAC1E;IAAC;EACH;EAIAC,WAAWA,CAAA;IACT;IACA,IAAI,CAAC/B,YAAY,CAACgC,WAAW,EAAE;EACjC;EAIAC,WAAWA,CAACC,MAAa,EAAEC,KAAa;IACtC,MAAMC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,KAAK,KAAKA,KAAK,CAAC;IACjD,OAAOC,KAAK,GAAIA,KAAK,CAACG,OAAO,GAAG,WAAW,GAAG,OAAO,GAAI,EAAE;EAC7D;;;;;;;;;UA9FDvD,SAAS;IAAAwD,IAAA,GAAC,SAAS;EAAA;;AAFTjD,cAAc,GAAAkD,UAAA,EAL1B1D,SAAS,CAAC;EACT2D,QAAQ,EAAE,gBAAgB;EAC1BC,QAAA,EAAAC,oBAAmC;;CAEpC,CAAC,C,EACWrD,cAAc,CAmG1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}