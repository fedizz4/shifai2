{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientPage;\nimport { getPatientsByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PatientPage_ion_row_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\")(2, \"ion-button\", 1);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_row_26_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.gotopatientpage());\n    });\n    i0.ɵɵtext(3, \"Fiche\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-col\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-col\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-col\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(patient_r1.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.adresse);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.telephones);\n  }\n}\nexport class PatientPage {\n  constructor(firestore, modalController, router) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.router = router;\n    this.patients = [];\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n    this.nomPatient = '';\n    this.prenomPatient = '';\n    this.patientUid = ''; // Ajout de la variable patientUid pour l'UID du patient\n    this.med = this.uid;\n    this.n = this.nomPatient;\n    this.p = this.prenomPatient;\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  gotopatientpage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.router.navigate(['/patientpage']);\n    })();\n  }\n  getPatients() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.patients = yield getPatientsByMedUid(_this2.firestore, _this2.uid);\n        if (_this2.patients.length > 0) {\n          _this2.nomPatient = _this2.patients[0].nom;\n          _this2.prenomPatient = _this2.patients[0].prenom;\n        }\n        console.log(\"Patients trouvés :\", _this2.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n  openFichePatientModal(patient) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this3.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          patientData: patient,\n          medecinUid: _this3.uid // Passer l'UID du médecin ici\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showConsultations(uid) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      patientUidA = uid;\n      _this4.router.navigate(['/consultationliste']);\n    })();\n  }\n}\n_PatientPage = PatientPage;\n_PatientPage.ɵfac = function PatientPage_Factory(t) {\n  return new (t || _PatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.Router));\n};\n_PatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientPage,\n  selectors: [[\"app-affiche-patient\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"]],\n  template: function PatientPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Liste des Patients\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\")(6, \"ion-grid\")(7, \"ion-row\")(8, \"ion-col\")(9, \"strong\");\n      i0.ɵɵtext(10, \"Option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"ion-col\")(12, \"strong\");\n      i0.ɵɵtext(13, \"Nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"ion-col\")(15, \"strong\");\n      i0.ɵɵtext(16, \"Pr\\u00E9nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"ion-col\")(18, \"strong\");\n      i0.ɵɵtext(19, \"Age\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"ion-col\")(21, \"strong\");\n      i0.ɵɵtext(22, \"Adresse\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ion-col\")(24, \"strong\");\n      i0.ɵɵtext(25, \"T\\u00E9l\\u00E9phone\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(26, PatientPage_ion_row_26_Template, 14, 5, \"ion-row\", 0);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonList, i2.IonRow, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport let med;\nexport let n;\nexport let p;\nexport let patientUidA; // Exporter la variable patientUid","map":{"version":3,"names":["getPatientsByMedUid","medecinUid","FichePatientModalComponent","i0","ɵɵelementStart","ɵɵlistener","PatientPage_ion_row_26_Template_ion_button_click_2_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","gotopatientpage","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","patient_r1","nom","prenom","age","adresse","telephones","PatientPage","constructor","firestore","modalController","router","patients","rdvs","uid","nomPatient","prenomPatient","patientUid","med","n","p","ngOnInit","getPatients","_this","_asyncToGenerator","navigate","_this2","length","console","log","error","openFichePatientModal","patient","_this3","modal","create","component","componentProps","patientData","onDidDismiss","then","data","present","showConsultations","_this4","patientUidA","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","i3","Router","selectors","decls","vars","consts","template","PatientPage_Template","rf","ctx","ɵɵtemplate","PatientPage_ion_row_26_Template","ɵɵproperty"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { RendezVousData, getPatientsByMedUid, getConsultationsForPatient, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { ConsultationsModalComponent } from './consultations-modal/consultations-modal.component';\nimport { ConsultationslisteModalComponent } from '../patients/consultationsliste-modal/consultationsliste-modal.component';\nimport { Router } from '@angular/router';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n\ninterface PatientData {\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephones?: string;\n  uid: string;\n  medecinUid?: string; \n}\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patient.page.html',\n  styleUrls: ['./patient.page.scss'],\n})\nexport class PatientPage implements OnInit {\n  patients: PatientData[] = [];\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n  nomPatient: string = ''; \n  prenomPatient: string = '';\n  patientUid: string = ''; // Ajout de la variable patientUid pour l'UID du patient\n\n  \n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController, private router: Router) { }\n\n  ngOnInit() {\n    this.getPatients();\n    \n  }\n\n  async gotopatientpage(){\n  this.router.navigate(['/patientpage']);\n}\n  async getPatients() {\n    try {\n      this.patients = await getPatientsByMedUid(this.firestore, this.uid);\n      if (this.patients.length > 0) {\n        this.nomPatient = this.patients[0].nom;\n        this.prenomPatient = this.patients[0].prenom;\n      } \n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n\n  async openFichePatientModal(patient: PatientData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        patientData: patient,\n        medecinUid: this.uid // Passer l'UID du médecin ici\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n\n    return await modal.present();\n  }\n\n  async showConsultations(uid :string) {\n    patientUidA=uid;\n    this.router.navigate(['/consultationliste']);\n\n  }\n\nmed=this.uid;\nn=this.nomPatient ;\np=this.prenomPatient;\n \n\n\n}\nexport let med :string ;\nexport let n :string ;\nexport let p :string ;\nexport let patientUidA: string ; // Exporter la variable patientUid\n\n\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Liste des Patients</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-grid>\n      <ion-row>\n        <ion-col ><strong>Option</strong></ion-col>\n        <ion-col ><strong>Nom</strong></ion-col>\n        <ion-col ><strong>Prénom</strong></ion-col>\n        <ion-col ><strong>Age</strong></ion-col>\n        <ion-col ><strong>Adresse</strong></ion-col>\n        <ion-col ><strong>Téléphone</strong></ion-col>\n      </ion-row>\n      <ion-row *ngFor=\"let patient of patients\">\n        <ion-col >\n          <ion-button (click)=\"gotopatientpage()\" color=\"primary\">Fiche</ion-button>\n        </ion-col>\n        <ion-col >{{ patient.nom }}</ion-col>\n        <ion-col >{{ patient.prenom }}</ion-col>\n        <ion-col >{{ patient.age }}</ion-col>\n        <ion-col >{{ patient.adresse }}</ion-col>\n        <ion-col >{{ patient.telephones }}</ion-col>\n       \n      </ion-row>\n    </ion-grid>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}