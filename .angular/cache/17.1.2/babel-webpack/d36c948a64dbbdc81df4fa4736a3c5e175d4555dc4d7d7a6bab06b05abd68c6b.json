{"ast":null,"code":"var _EventService;\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class EventService {\n  constructor() {\n    // Déclarez un EventEmitter pour l'événement\n    this.medicamentUpdated = new EventEmitter();\n    this.secretaireUpdatedSubject = new Subject();\n    // Déclarez votre observable pour que les autres composants puissent s'abonner\n    this.secretaireUpdated$ = new Subject();\n  }\n  // Méthode pour déclencher la mise à jour du secrétaire\n  triggerSecretaireUpdate() {\n    this.secretaireUpdatedSubject.next();\n  }\n  // Méthode pour déclencher l'événement\n  triggerMedicamentUpdated() {\n    this.medicamentUpdated.emit();\n  }\n}\n_EventService = EventService;\n_EventService.ɵfac = function EventService_Factory(t) {\n  return new (t || _EventService)();\n};\n_EventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _EventService,\n  factory: _EventService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EventEmitter","Subject","EventService","constructor","medicamentUpdated","secretaireUpdatedSubject","secretaireUpdated$","triggerSecretaireUpdate","next","triggerMedicamentUpdated","emit","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\event.service.ts"],"sourcesContent":["// event.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventService {\r\n  // Déclarez un EventEmitter pour l'événement\r\n  medicamentUpdated = new EventEmitter<void>();\r\n  secretaireUpdated: any;\r\n  private secretaireUpdatedSubject = new Subject<void>();\r\n\r\n   // Déclarez votre observable pour que les autres composants puissent s'abonner\r\n   secretaireUpdated$: Subject<any> = new Subject<any>();\r\n\r\n\r\n     // Méthode pour déclencher la mise à jour du secrétaire\r\n  triggerSecretaireUpdate() {\r\n    this.secretaireUpdatedSubject.next();\r\n  }\r\n\r\n  // Méthode pour déclencher l'événement\r\n  triggerMedicamentUpdated() {\r\n    this.medicamentUpdated.emit();\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAASA,YAAY,QAAQ,eAAe;AAC5C,SAASC,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,YAAY;EAHzBC,YAAA;IAIE;IACA,KAAAC,iBAAiB,GAAG,IAAIJ,YAAY,EAAQ;IAEpC,KAAAK,wBAAwB,GAAG,IAAIJ,OAAO,EAAQ;IAErD;IACA,KAAAK,kBAAkB,GAAiB,IAAIL,OAAO,EAAO;;EAGnD;EACHM,uBAAuBA,CAAA;IACrB,IAAI,CAACF,wBAAwB,CAACG,IAAI,EAAE;EACtC;EAEA;EACAC,wBAAwBA,CAAA;IACtB,IAAI,CAACL,iBAAiB,CAACM,IAAI,EAAE;EAC/B;;gBAlBWR,YAAY;;mBAAZA,aAAY;AAAA;;SAAZA,aAAY;EAAAS,OAAA,EAAZT,aAAY,CAAAU,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}