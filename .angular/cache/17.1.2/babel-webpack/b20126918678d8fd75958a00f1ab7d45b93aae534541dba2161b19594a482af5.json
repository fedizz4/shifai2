{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AffichePatientPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./affiche-patient.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./affiche-patient.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { getRdvByMedUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { meduid } from '../login-medecin/login-medecin.page';\nlet AffichePatientPage = (_AffichePatientPage = class AffichePatientPage {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.rdvs = [];\n    this.loadRdv();\n  }\n  ngOnInit() {}\n  loadRdv() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const rdvs = yield getRdvByMedUid(_this.firestore, meduid); // Utilisez medecinUid.uid pour obtenir l'UID du médecin\n        if (rdvs && rdvs.length > 0) {\n          _this.rdvs = rdvs;\n        } else {\n          console.log('Aucun rendez-vous trouvé pour ce médecin.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des rendez-vous:', error);\n      }\n    })();\n  }\n  openFichePatientModal(rendezVous) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this2.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          rendezVousData: rendezVous\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n}, _AffichePatientPage.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}], _AffichePatientPage);\nAffichePatientPage = __decorate([Component({\n  selector: 'app-affiche-patient',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AffichePatientPage);\nexport { AffichePatientPage };","map":{"version":3,"names":["Component","AngularFirestore","ModalController","getRdvByMedUid","FichePatientModalComponent","meduid","AffichePatientPage","_AffichePatientPage","constructor","firestore","modalController","rdvs","loadRdv","ngOnInit","_this","_asyncToGenerator","length","console","log","error","openFichePatientModal","rendezVous","_this2","modal","create","component","componentProps","rendezVousData","onDidDismiss","then","data","present","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\affiche-patient\\affiche-patient.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { RendezVousData, getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { meduid } from '../login-medecin/login-medecin.page';\n\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './affiche-patient.page.html',\n  styleUrls: ['./affiche-patient.page.scss'],\n})\nexport class AffichePatientPage implements OnInit {\n\n  rdvs: RendezVousData[] = [];\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) {\n    this.loadRdv();\n  }\n\n  ngOnInit() {\n  }\n\n  async loadRdv() {\n    try {\n      const rdvs = await getRdvByMedUid(this.firestore, meduid); // Utilisez medecinUid.uid pour obtenir l'UID du médecin\n      if (rdvs && rdvs.length > 0) {\n        this.rdvs = rdvs;\n      } else {\n        console.log('Aucun rendez-vous trouvé pour ce médecin.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des rendez-vous:', error);\n    }\n  }\n\n  async openFichePatientModal(rendezVous: RendezVousData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        rendezVousData: rendezVous\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n    return await modal.present();\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAAyBC,cAAc,QAAoB,oBAAoB;AAC/E,SAASC,0BAA0B,QAAQ,qDAAqD;AAChG,SAASC,MAAM,QAAQ,qCAAqC;AAQrD,IAAMC,kBAAkB,IAAAC,mBAAA,GAAxB,MAAMD,kBAAkB;EAG7BE,YAAoBC,SAA2B,EAAUC,eAAgC;IAArE,KAAAD,SAAS,GAATA,SAAS;IAA4B,KAAAC,eAAe,GAAfA,eAAe;IADxE,KAAAC,IAAI,GAAqB,EAAE;IAEzB,IAAI,CAACC,OAAO,EAAE;EAChB;EAEAC,QAAQA,CAAA,GACR;EAEMD,OAAOA,CAAA;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MACX,IAAI;QACF,MAAMJ,IAAI,SAASR,cAAc,CAACW,KAAI,CAACL,SAAS,EAAEJ,MAAM,CAAC,CAAC,CAAC;QAC3D,IAAIM,IAAI,IAAIA,IAAI,CAACK,MAAM,GAAG,CAAC,EAAE;UAC3BF,KAAI,CAACH,IAAI,GAAGA,IAAI;QAClB,CAAC,MAAM;UACLM,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IAAC;EACH;EAEMC,qBAAqBA,CAACC,UAA0B;IAAA,IAAAC,MAAA;IAAA,OAAAP,iBAAA;MACpD,MAAMQ,KAAK,SAASD,MAAI,CAACZ,eAAe,CAACc,MAAM,CAAC;QAC9CC,SAAS,EAAErB,0BAA0B;QACrCsB,cAAc,EAAE;UACdC,cAAc,EAAEN;;OAEnB,CAAC;MAEFE,KAAK,CAACK,YAAY,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAI;QACjC,IAAIA,IAAI,IAAIA,IAAI,CAACA,IAAI,EAAE;UACrB;UACAb,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEY,IAAI,CAACA,IAAI,CAAC;QACvE;MACF,CAAC,CAAC;MAEF,aAAaP,KAAK,CAACQ,OAAO,EAAE;IAAC;EAC/B;;;;;;AAvCWzB,kBAAkB,GAAA0B,UAAA,EAL9BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,qBAAqB;EAC/BC,QAAA,EAAAC,oBAA0C;;CAE3C,CAAC,C,EACW7B,kBAAkB,CAwC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}