{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ConsultationMedPage;\nimport { getConsultations, getPatientsByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nfunction ConsultationMedPage_ion_item_10_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-list\")(2, \"ion-item\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const consultation_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", consultation_r3.date, \" \", consultation_r3 == null ? null : consultation_r3.details, \" \");\n  }\n}\nfunction ConsultationMedPage_ion_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-card\")(2, \"ion-card-header\")(3, \"ion-card-title\")(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-card-content\");\n    i0.ɵɵtemplate(7, ConsultationMedPage_ion_item_10_div_7_Template, 4, 2, \"div\", 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"Info patient \", patient_r1.prenom, \" \", patient_r1.nom, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.consultations);\n  }\n}\nexport class ConsultationMedPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.consultations = [];\n    this.uid = medecinUid.uid;\n    this.patients = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('med', _this.uid);\n      _this.getPatients();\n      console.log(_this.getPatients());\n    })();\n  }\n  loadConsultations(patientuid) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultations = yield getConsultations(_this2.firestore, medecinUid.uid, patientuid);\n        console.log('consultations', consultations);\n        if (consultations && consultations.length > 0) {\n          _this2.consultations = consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n        } else {\n          console.log('Aucune consultation trouvée pour ce patient.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des consultations du patient :', error);\n      }\n    })();\n  }\n  getPatients() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const patients = yield getPatientsByMedUid(_this3.firestore, _this3.uid);\n        if (_this3.patients.length > 0) {\n          _this3.patients = patients;\n          for (const patient of _this3.patients) {\n            yield _this3.loadConsultations(patient.uid);\n          }\n        }\n        console.log(\"Patients trouvés :\", _this3.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n}\n_ConsultationMedPage = ConsultationMedPage;\n_ConsultationMedPage.ɵfac = function ConsultationMedPage_Factory(t) {\n  return new (t || _ConsultationMedPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_ConsultationMedPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _ConsultationMedPage,\n  selectors: [[\"app-consultation-med\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ConsultationMedPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-list\");\n      i0.ɵɵtemplate(10, ConsultationMedPage_ion_item_10_Template, 8, 3, \"ion-item\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardTitle, i3.IonContent, i3.IonHeader, i3.IonItem, i3.IonList, i3.IonTitle, i3.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getConsultations","getPatientsByMedUid","medecinUid","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","consultation_r3","date","details","ɵɵtemplate","ConsultationMedPage_ion_item_10_div_7_Template","patient_r1","prenom","nom","ɵɵproperty","ctx_r0","consultations","ConsultationMedPage","constructor","firestore","uid","patients","ngOnInit","_this","_asyncToGenerator","console","log","getPatients","loadConsultations","patientuid","_this2","length","sort","a","b","Date","getTime","error","_this3","patient","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","ConsultationMedPage_Template","rf","ctx","ConsultationMedPage_ion_item_10_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getConsultations, getConsultationsmed, getPatientsByMedUid } from 'src/firebaseConfig'; \nimport { medecinUid } from 'src/firebaseConfig';\nimport { patientUidA } from '../patient/patient.page';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  \n}\ninterface PatientData{\n  uid:string;\n  nom: string;\n  prenom: string;\n  age: number;\n  sexe: string;\n  groupeSanguin: string;\n  situationFamiliale: string;\n  profession: string;\n  email: string;\n  telephone: string;\n  telephone2: string;\n  numeroAssurance: string;\n  adresse: string;\n  note: string;\n  antecedentsMedicaux: string;\n  antecedentsChirurgicaux: string;\n  antecedentsFamiliaux: string;\n  autresAntecedents: string;\n  medicaments: string;\n  useruid:string;\n}\n\n@Component({\n  selector: 'app-consultation-med',\n  templateUrl: './consultation-med.page.html',\n  styleUrls: ['./consultation-med.page.scss'],\n})\n\n\nexport class ConsultationMedPage implements OnInit {\n  consultations: consultationData[] = [];\n  uid: string = medecinUid.uid;\n  patients:PatientData[]=[];\n\n  constructor(private firestore: AngularFirestore) { }\n\n  async ngOnInit() {\n    console.log('med',this.uid)\n this.getPatients()\n console.log(this.getPatients())\n  }\n  async loadConsultations(patientuid:string) {\n    try {\n      const consultations = await getConsultations(this.firestore, medecinUid.uid, patientuid);\n      console.log('consultations', consultations);\n  \n      if (consultations && consultations.length > 0) {\n        this.consultations = consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }\n  async getPatients() {\n    try {\n      const patients = await getPatientsByMedUid(this.firestore, this.uid);\n      if (this.patients.length > 0) {\n        this.patients=patients;\n        for (const patient of this.patients) {\n          await this.loadConsultations(patient.uid);\n        }\n      } \n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Consultations</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Consultations</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-list>\n    <ion-item *ngFor=\"let patient of patients\">\n      <ion-card>\n        <ion-card-header>\n          <ion-card-title><b>Info patient {{ patient.prenom }} {{ patient.nom }} </b></ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n      \n          <div *ngFor=\"let consultation of consultations\">\n            <ion-list>\n              <ion-item>\n                {{ consultation.date }}\n                {{consultation?.details}}\n              </ion-item>\n            </ion-list>\n          </div>\n\n        </ion-card-content>\n      </ion-card>     \n    </ion-item>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}