{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientsPage;\nimport { getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nexport class PatientsPage {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n    this.fichePatientExiste = false;\n    this.loadRdv();\n  }\n  ngOnInit() {}\n  loadRdv() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n        if (rdvs && rdvs.length > 0) {\n          _this.rdvs = rdvs;\n          console.log(\"rendez-vous trouve \", rdvs);\n        } else {\n          console.log('Aucun rendez-vous trouvé pour ce médecin.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des rendez-vous:', error);\n      }\n    })();\n  }\n  openFichePatientModal(rendezVous) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this2.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          rendezVousData: rendezVous\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showFichePatient(rdv) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const fichePatientRef = _this3.firestore.collection('medecin').doc(rdv.medecinuid).collection('patients').doc(rdv.nom);\n        const fichePatientSnapshot = yield fichePatientRef.get().toPromise(); // Convertir l'observable en promesse\n        if (fichePatientSnapshot && fichePatientSnapshot.exists) {\n          _this3.fichePatientExiste = true;\n          const fichePatientData = fichePatientSnapshot.data();\n          const modal = yield _this3.modalController.create({\n            component: FichePatientModalComponent,\n            componentProps: {\n              fichePatientData: fichePatientData // Passer les données de la fiche patient au composant modal\n            }\n          });\n          yield modal.present();\n        } else {}\n      } catch (error) {\n        console.error('Erreur lors de l\\'ouverture de la fiche patient :', error);\n      }\n    })();\n  }\n}\n_PatientsPage = PatientsPage;\n_PatientsPage.ɵfac = function PatientsPage_Factory(t) {\n  return new (t || _PatientsPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController));\n};\n_PatientsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientsPage,\n  selectors: [[\"app-affiche-patient\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"]],\n  template: function PatientsPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"patients\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"patients\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n    }\n  },\n  dependencies: [i2.IonContent, i2.IonHeader, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getRdvByMedUid","medecinUid","FichePatientModalComponent","PatientsPage","constructor","firestore","modalController","rdvs","uid","fichePatientExiste","loadRdv","ngOnInit","_this","_asyncToGenerator","length","console","log","error","openFichePatientModal","rendezVous","_this2","modal","create","component","componentProps","rendezVousData","onDidDismiss","then","data","present","showFichePatient","rdv","_this3","fichePatientRef","collection","doc","medecinuid","nom","fichePatientSnapshot","get","toPromise","exists","fichePatientData","i0","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","selectors","decls","vars","consts","template","PatientsPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patients\\patients.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patients\\patients.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport {  ModalController } from '@ionic/angular';\nimport { RendezVousData, getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\n\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patients.page.html',\n  styleUrls: ['./patients.page.scss'],\n})\n\n\nexport class PatientsPage implements OnInit {\n\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) {\n    this.loadRdv();\n  }\n\n  ngOnInit() {\n  }\n\n  async loadRdv() {\n    try {\n      const rdvs = await getRdvByMedUid(this.firestore, this.uid);\n      if (rdvs && rdvs.length > 0) {\n        this.rdvs = rdvs;\n        console.log(\"rendez-vous trouve \", rdvs)\n      } else {\n        console.log('Aucun rendez-vous trouvé pour ce médecin.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des rendez-vous:', error);\n    }\n  }\n\n  async openFichePatientModal(rendezVous: RendezVousData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        rendezVousData: rendezVous\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n    return await modal.present();\n  }\n  fichePatientExiste: boolean = false;\n\n  async showFichePatient(rdv: RendezVousData) {\n    try {\n\n      const fichePatientRef = this.firestore.collection('medecin').doc(rdv.medecinuid).collection('patients').doc(rdv.nom);\n      const fichePatientSnapshot = await fichePatientRef.get().toPromise(); // Convertir l'observable en promesse\n      \n      \n      if (fichePatientSnapshot && fichePatientSnapshot.exists) {\n        this.fichePatientExiste= true ;\n        const fichePatientData = fichePatientSnapshot.data();\n        const modal = await this.modalController.create({\n          component: FichePatientModalComponent,\n          componentProps: {\n            fichePatientData: fichePatientData // Passer les données de la fiche patient au composant modal\n          }\n        });\n        await modal.present();\n      } else {\n        \n      }\n    }\n        \n        \n     catch (error) {\n      console.error('Erreur lors de l\\'ouverture de la fiche patient :', error);\n    }\n  \n  \n}\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>patients</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">patients</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}