{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _AjoutMedecinPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./ajout-medecin.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./ajout-medecin.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { AddMedecinforpatient, getMedecinsByLocalisationAndSpecialite } from 'src/firebaseConfig';\nimport { inscritUid } from '../login/login.page';\nlet AjoutMedecinPage = (_AjoutMedecinPage = class AjoutMedecinPage {\n  constructor(firestore, navCtrl, toastcontroller) {\n    this.firestore = firestore;\n    this.navCtrl = navCtrl;\n    this.toastcontroller = toastcontroller;\n    this.medecins = [];\n    this.medecins1 = [];\n    this.etat = null;\n    this.specialite = null;\n    this.specialites = ['Médecine générale', 'Cardiologie', 'Chirurgie générale', 'Pédiatrie', 'Gynécologie obstétrique', 'Radiologie', 'Médecine interne', 'Orthopédie', 'Ophtalmologie', 'Dermatologie', 'Anesthésiologie', 'Neurologie', 'Gastro-entérologie', 'Urologie', 'Oncologie', 'Médecine d\\'urgence', 'Pneumologie', 'Endocrinologie', 'Néphrologie', 'Rhumatologie', 'Psychiatrie', 'Médecine du travail', 'Pédiatrie néonatale', 'Infectiologie', 'Hématologie', 'Pédiatrie médicale', 'Médecine de réadaptation', 'Médecine du sport', 'Pédiatrie chirurgicale', 'Chirurgie orthopédique', 'Chirurgie cardiovasculaire', 'Chirurgie plastique et reconstructive', 'Médecine nucléaire', 'Allergologie', 'Pédiatrie sociale', 'Chirurgie vasculaire', 'Médecine légale', 'Gériatrie', 'Médecine de famille', 'Hépato-gastro-entérologie', 'Médecine tropicale', 'Chirurgie maxillo-faciale', 'Médecine de la douleur', 'Médecine palliative', 'Endocrinologie pédiatrique', 'Néonatologie', 'Chirurgie thoracique', 'Chirurgie abdominale', 'Néonatalogie', 'Immunologie'];\n    this.etatsTunisiens = ['Ariana', 'Beja', 'Ben Arous', 'Bizerte', 'Gabes', 'Gafsa', 'Jendouba', 'Kairouan', 'Kasserine', 'Kebili', 'Le Kef', 'Mahdia', 'La Manouba', 'Médenine', 'Monastir', 'Nabeul', 'Sfax', 'Sidi Bouzid', 'Siliana', 'Sousse', 'Tataouine', 'Tozeur', 'Tunis', 'Zaghouan'];\n  }\n  ngOnInit() {\n    this.fetchMedecins();\n  }\n  setToastController(toastcontroller) {\n    this.toastcontroller = toastcontroller;\n  }\n  setFirestore(firestore) {\n    this.firestore = firestore;\n  }\n  fetchMedecins() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this.etat && _this.specialite) {\n          _this.medecins = yield getMedecinsByLocalisationAndSpecialite(_this.firestore, _this.etat, _this.specialite);\n          console.log('Médecins disponibles :', _this.medecins);\n        } else {\n          console.error('Paramètres de recherche non valides.');\n          // Ajoutez une logique pour afficher un message à l'utilisateur, si nécessaire\n          // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n          // d'entrer des paramètres valides pour la recherche.\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des médecins (fetchMedecins):', error);\n        // Ajoutez une logique pour afficher un message à l'utilisateur en cas d'erreur\n        // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n        // qu'une erreur s'est produite lors de la récupération des médecins.\n      }\n    })();\n  }\n  AddMedecinforpatient(medecin) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      AddMedecinforpatient(_this2.firestore, inscritUid, medecin, _this2.toastcontroller);\n      console.log('ajout avec succes');\n    })();\n  }\n}, _AjoutMedecinPage.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: NavController\n}, {\n  type: ToastController\n}], _AjoutMedecinPage);\nAjoutMedecinPage = __decorate([Component({\n  selector: 'app-ajout-medecin',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AjoutMedecinPage);\nexport { AjoutMedecinPage };","map":{"version":3,"names":["Component","AngularFirestore","NavController","ToastController","AddMedecinforpatient","getMedecinsByLocalisationAndSpecialite","inscritUid","AjoutMedecinPage","_AjoutMedecinPage","constructor","firestore","navCtrl","toastcontroller","medecins","medecins1","etat","specialite","specialites","etatsTunisiens","ngOnInit","fetchMedecins","setToastController","setFirestore","_this","_asyncToGenerator","console","log","error","medecin","_this2","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\ajout-medecin\\ajout-medecin.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { AddMedecinforpatient, getMedecinforPatient, getMedecinsByLocalisationAndSpecialite } from 'src/firebaseConfig';\nimport { medecinUid } from '../recherche-medecin/recherche-medecin.page';\nimport { FirebaseApp } from 'firebase/app';\nimport { inscritUid } from '../login/login.page';\n\n\nexport interface MedecinData {\n  uid:string,\n  nom:string,\n  prenom:string,\n  sexe:string,\n  email: string,\n  password: string,\n  date: string,\n  delegation: string,\n  etat: string,\n  specialite: string,\n  telephone: string,\n}\n\n@Component({\n  selector: 'app-ajout-medecin',\n  templateUrl: './ajout-medecin.page.html',\n  styleUrls: ['./ajout-medecin.page.scss'],\n})\nexport class AjoutMedecinPage implements OnInit {\n \n\n \n  medecins: MedecinData[] = [];\n  medecins1: MedecinData[] = [];\n  etat: string | null = null;\n  specialite: string | null = null;\n\n\n  specialites: string[] = [\n    'Médecine générale',\n    'Cardiologie',\n    'Chirurgie générale',\n    'Pédiatrie',\n    'Gynécologie obstétrique',\n    'Radiologie',\n    'Médecine interne',\n    'Orthopédie',\n    'Ophtalmologie',\n    'Dermatologie',\n    'Anesthésiologie',\n    'Neurologie',\n    'Gastro-entérologie',\n    'Urologie',\n    'Oncologie',\n    'Médecine d\\'urgence',\n    'Pneumologie',\n    'Endocrinologie',\n    'Néphrologie',\n    'Rhumatologie',\n    'Psychiatrie',\n    'Médecine du travail',\n    'Pédiatrie néonatale',\n    'Infectiologie',\n    'Hématologie',\n    'Pédiatrie médicale',\n    'Médecine de réadaptation',\n    'Médecine du sport',\n    'Pédiatrie chirurgicale',\n    'Chirurgie orthopédique',\n    'Chirurgie cardiovasculaire',\n    'Chirurgie plastique et reconstructive',\n    'Médecine nucléaire',\n    'Allergologie',\n    'Pédiatrie sociale',\n    'Chirurgie vasculaire',\n    'Médecine légale',\n    'Gériatrie',\n    'Médecine de famille',\n    'Hépato-gastro-entérologie',\n    'Médecine tropicale',\n    'Chirurgie maxillo-faciale',\n    'Médecine de la douleur',\n    'Médecine palliative',\n    'Endocrinologie pédiatrique',\n    'Néonatologie',\n    'Chirurgie thoracique',\n    'Chirurgie abdominale',\n    'Néonatalogie',\n    'Immunologie'\n  ];\n\n  etatsTunisiens: string[] = [\n    'Ariana',\n    'Beja',\n    'Ben Arous',\n    'Bizerte',\n    'Gabes',\n    'Gafsa',\n    'Jendouba',\n    'Kairouan',\n    'Kasserine',\n    'Kebili',\n    'Le Kef',\n    'Mahdia',\n    'La Manouba',\n    'Médenine',\n    'Monastir',\n    'Nabeul',\n    'Sfax',\n    'Sidi Bouzid',\n    'Siliana',\n    'Sousse',\n    'Tataouine',\n    'Tozeur',\n    'Tunis',\n    'Zaghouan',\n  ];\n  \n\n  constructor(private firestore: AngularFirestore, private navCtrl: NavController,private toastcontroller : ToastController) { }\n\n  ngOnInit() {\n    this.fetchMedecins();\n\n  }\n  setToastController(toastcontroller: any) {\n    this.toastcontroller = toastcontroller;\n  }\n  setFirestore(firestore:any){\n    this.firestore=firestore;\n  }\n  async fetchMedecins() {\n    try {\n      if (this.etat && this.specialite) {\n        this.medecins = await getMedecinsByLocalisationAndSpecialite(this.firestore, this.etat, this.specialite);\n        console.log('Médecins disponibles :', this.medecins);\n      } else {\n        console.error('Paramètres de recherche non valides.');\n        // Ajoutez une logique pour afficher un message à l'utilisateur, si nécessaire\n        // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n        // d'entrer des paramètres valides pour la recherche.\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des médecins (fetchMedecins):', error);\n      // Ajoutez une logique pour afficher un message à l'utilisateur en cas d'erreur\n      // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n      // qu'une erreur s'est produite lors de la récupération des médecins.\n    }\n  }\nasync AddMedecinforpatient(medecin:MedecinData){\n  AddMedecinforpatient(this.firestore,inscritUid,medecin,this.toastcontroller);\n  console.log('ajout avec succes')\n\n\n}\n\n/*export async function AddMedecinforpatient(firestore: AngularFirestore, app: FirebaseApp, patientuid: string ,medecin:MedecinData) {\n  const medecinA = {\n    nom: medecin.nom,\n    prenom:medecin.prenom,\n    specialite:medecin.specialite,\n    medecin:medecin.uid,\n    patientuid:patientuid,\n  };\n\n  try {\n    \n    const medref =await firestore.collection('medecinpatient').add(medecinA);\n    const uid = medref.id;\n\n    // Mettre à jour le document avec l'uid\n    await medref.update({ idd: uid });\n\n\n  } catch (error) {\n    console.error('Erreur lors de l\\'ajout du medecin:', error);\n    throw error;  // Renvoyer l'erreur pour que le gestionnaire puisse la gérer\n  }\n}\n*/\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}