{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientPage;\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nfunction PatientPage_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-button\", 1);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_item_6_Template_ion_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const rdv_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openFichePatientModal(rdv_r1));\n    });\n    i0.ɵɵtext(4, \"Fiche Patient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_item_6_Template_ion_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const rdv_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showFichePatient(rdv_r1));\n    });\n    i0.ɵɵtext(6, \"Afficher Fiche Patient\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rdv_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\"\", rdv_r1.date, \" - \", rdv_r1.heure, \" - \", rdv_r1.nom, \" \", rdv_r1.prenom, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.fichePatientExiste);\n  }\n}\nlet PatientPage = (_PatientPage = class PatientPage {\n  constructor(firestore, modalController, alertController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.alertController = alertController;\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n    this.fichePatientExiste = false;\n    this.loadRdv();\n  }\n  ngOnInit() {}\n  loadRdv() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n        if (rdvs && rdvs.length > 0) {\n          _this.rdvs = rdvs;\n          console.log(\"rendez-vous trouve \", rdvs);\n        } else {\n          console.log('Aucun rendez-vous trouvé pour ce médecin.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des rendez-vous:', error);\n      }\n    })();\n  }\n  openFichePatientModal(rendezVous) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this2.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          rendezVousData: rendezVous\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showFichePatient(rdv) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const fichePatientRef = _this3.firestore.collection('medecin').doc(rdv.medecinuid).collection('patients').doc(rdv.nom);\n        const fichePatientSnapshot = yield fichePatientRef.get().toPromise(); // Convertir l'observable en promesse\n        if (fichePatientSnapshot && fichePatientSnapshot.exists) {\n          _this3.fichePatientExiste = true;\n          const fichePatientData = fichePatientSnapshot.data();\n          const modal = yield _this3.modalController.create({\n            component: FichePatientModalComponent,\n            componentProps: {\n              fichePatientData: fichePatientData // Passer les données de la fiche patient au composant modal\n            }\n          });\n          yield modal.present();\n        } else {}\n      } catch (error) {\n        console.error('Erreur lors de l\\'ouverture de la fiche patient :', error);\n      }\n    })();\n  }\n}, _PatientPage.ɵfac = function PatientPage_Factory(t) {\n  return new (t || _PatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i2.AlertController));\n}, _PatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientPage,\n  selectors: [[\"app-affiche-patient\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"], [\"color\", \"primary\", 3, \"disabled\", \"click\"]],\n  template: function PatientPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Liste des rendez-vous\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\");\n      i0.ɵɵtemplate(6, PatientPage_ion_item_6_Template, 7, 5, \"ion-item\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.rdvs);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.IonButton, i2.IonContent, i2.IonHeader, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n}), _PatientPage);\nPatientPage = __decorate([Component({\n  selector: 'app-fiche-patient-not-found',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Fiche Patient Non Trouvée</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <ion-card>\n        <ion-card-content>\n          <p>Fiche patient non trouvée.</p>\n        </ion-card-content>\n        <ion-card-footer>\n          <ion-button (click)=\"createFichePatient()\">Créer une fiche patient</ion-button>\n        </ion-card-footer>\n      </ion-card>\n    </ion-content>\n  `\n})], PatientPage);\nexport { PatientPage };","map":{"version":3,"names":["Component","getRdvByMedUid","medecinUid","FichePatientModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PatientPage_ion_item_6_Template_ion_button_click_3_listener","restoredCtx","ɵɵrestoreView","_r3","rdv_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","openFichePatientModal","PatientPage_ion_item_6_Template_ion_button_click_5_listener","ctx_r4","showFichePatient","ɵɵadvance","ɵɵtextInterpolate4","date","heure","nom","prenom","ɵɵproperty","ctx_r0","fichePatientExiste","PatientPage","_PatientPage","constructor","firestore","modalController","alertController","rdvs","uid","loadRdv","ngOnInit","_this","_asyncToGenerator","length","console","log","error","rendezVous","_this2","modal","create","component","componentProps","rendezVousData","onDidDismiss","then","data","present","rdv","_this3","fichePatientRef","collection","doc","medecinuid","fichePatientSnapshot","get","toPromise","exists","fichePatientData","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","AlertController","selectors","decls","vars","consts","template","PatientPage_Template","rf","ctx","ɵɵtemplate","PatientPage_ion_item_6_Template","__decorate","selector"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { RendezVousData, getRdvByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\n\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patient.page.html',\n  styleUrls: ['./patient.page.scss'],\n})\n@Component({\n  selector: 'app-fiche-patient-not-found',\n  template: `\n    <ion-header>\n      <ion-toolbar>\n        <ion-title>Fiche Patient Non Trouvée</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content>\n      <ion-card>\n        <ion-card-content>\n          <p>Fiche patient non trouvée.</p>\n        </ion-card-content>\n        <ion-card-footer>\n          <ion-button (click)=\"createFichePatient()\">Créer une fiche patient</ion-button>\n        </ion-card-footer>\n      </ion-card>\n    </ion-content>\n  `,\n})\nexport class PatientPage implements OnInit {\n\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n  constructor(private firestore: AngularFirestore, private modalController: ModalController, private alertController: AlertController) {\n    this.loadRdv();\n  }\n\n  ngOnInit() {\n  }\n\n  async loadRdv() {\n    try {\n      const rdvs = await getRdvByMedUid(this.firestore, this.uid);\n      if (rdvs && rdvs.length > 0) {\n        this.rdvs = rdvs;\n        console.log(\"rendez-vous trouve \", rdvs)\n      } else {\n        console.log('Aucun rendez-vous trouvé pour ce médecin.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des rendez-vous:', error);\n    }\n  }\n\n  async openFichePatientModal(rendezVous: RendezVousData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        rendezVousData: rendezVous\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        // Enregistrez les données de la fiche patient dans la base de données Firebase ici\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n    return await modal.present();\n  }\n  fichePatientExiste: boolean = false;\n\n  async showFichePatient(rdv: RendezVousData) {\n    try {\n\n      const fichePatientRef = this.firestore.collection('medecin').doc(rdv.medecinuid).collection('patients').doc(rdv.nom);\n      const fichePatientSnapshot = await fichePatientRef.get().toPromise(); // Convertir l'observable en promesse\n      \n      \n      if (fichePatientSnapshot && fichePatientSnapshot.exists) {\n        this.fichePatientExiste= true ;\n        const fichePatientData = fichePatientSnapshot.data();\n        const modal = await this.modalController.create({\n          component: FichePatientModalComponent,\n          componentProps: {\n            fichePatientData: fichePatientData // Passer les données de la fiche patient au composant modal\n          }\n        });\n        await modal.present();\n      } else {\n        \n      }\n    }\n        \n        \n     catch (error) {\n      console.error('Erreur lors de l\\'ouverture de la fiche patient :', error);\n    }\n  \n  \n}\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Liste des rendez-vous</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-item *ngFor=\"let rdv of rdvs\">\n      <ion-label>{{ rdv.date }} - {{ rdv.heure }} - {{ rdv.nom }} {{ rdv.prenom }}</ion-label>\n      <ion-button (click)=\"openFichePatientModal(rdv)\" color=\"primary\">Fiche Patient</ion-button>\n      <ion-button (click)=\"showFichePatient(rdv)\" color=\"primary\" [disabled]=\"!fichePatientExiste\">Afficher Fiche Patient</ion-button>\n    </ion-item>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}