{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _CalenderMedecinPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./calender-medecin.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./calender-medecin.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { CalendarView } from 'angular-calendar';\nimport { deleteRendezVous, getRdvByMedUid } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { medecinUid } from 'src/firebaseConfig';\nimport { ExcuseModalComponent, selectedExcuse } from './excusemodal/excusemodal.component';\nimport { ModalController } from '@ionic/angular';\nlet CalenderMedecinPage = (_CalenderMedecinPage = class CalenderMedecinPage {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.viewDate = new Date();\n    this.view = CalendarView.Month;\n    this.CalendarView = CalendarView;\n    this.uid = medecinUid.uid;\n    this.events = [{\n      start: new Date(),\n      title: 'An event'\n    }];\n    this.activeDayIsOpen = false;\n    this.rdvs = [];\n    this.medecinuid = this.uid;\n    this.dayStartTime = '8:00'; // Heure de début de journée\n    this.dayEndTime = '17:00'; // Heure de fin de journée\n    this.loadEvents();\n    console.log('meduid', medecinUid.uid);\n  }\n  ngOnInit() {}\n  loadEvents() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n        if (rdvs && rdvs.length > 0) {\n          _this.rdvs = rdvs.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n          ;\n          _this.events = rdvs.map(rdv => ({\n            start: _this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[0]),\n            end: _this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[1]),\n            title: `Rendez-vous de ${rdv.prenom} ${rdv.nom} à ${rdv.heure} chez ${rdv.medecinPrenom} ${rdv.medecinNom}`\n          }));\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des rendez-vous:', error);\n      }\n    })();\n  }\n  dayClicked({\n    date,\n    events\n  }) {\n    if (isSameMonth(date, this.viewDate)) {\n      if (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true || events.length === 0) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n  deleteRendezVouscalendar(rendezVous) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Demander une excuse via la modal\n        const excuse = yield _this2.presentExcuseModal();\n        // Vérifier si une excuse a été fournie\n        if (selectedExcuse !== undefined) {\n          // Appeler deleteRendezVous avec l'excuse\n          yield deleteRendezVous(_this2.firestore, medecinUid.uid, rendezVous, selectedExcuse);\n          console.log('Rendez-vous supprimé avec succès.');\n          yield _this2.loadEvents();\n        } else {\n          console.log('Excuse non fournie. Annulation de la suppression du rendez-vous.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la suppression du rendez-vous:', error);\n      }\n    })();\n  }\n  isRendezVousDatePassed(rendezVous) {\n    const d = rendezVous.date;\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n    const rendezVousDate = new Date(d);\n    return rendezVousDate < yesterday;\n  }\n  presentExcuseModal() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this3.modalController.create({\n        component: ExcuseModalComponent\n      });\n      yield modal.present();\n      return new Promise(resolve => {\n        modal.onDidDismiss().then(({\n          data\n        }) => {\n          resolve(data === null || data === void 0 ? void 0 : data.excuse);\n        });\n      });\n    })();\n  }\n  changeDay(date) {\n    this.viewDate = date;\n    this.view = CalendarView.Day;\n  }\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n  setView(view) {\n    this.view = view;\n  }\n  convertDateTimeToDate(dateString, timeString) {\n    const dateParts = dateString.split('-').map(part => parseInt(part, 10));\n    const timeParts = timeString.split('H').map(part => parseInt(part, 10));\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], timeParts[0], timeParts[1]);\n  }\n}, _CalenderMedecinPage.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}], _CalenderMedecinPage);\nCalenderMedecinPage = __decorate([Component({\n  selector: 'app-calender-medecin',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], CalenderMedecinPage);\nexport { CalenderMedecinPage };","map":{"version":3,"names":["Component","isSameDay","isSameMonth","CalendarView","deleteRendezVous","getRdvByMedUid","AngularFirestore","medecinUid","ExcuseModalComponent","selectedExcuse","ModalController","CalenderMedecinPage","_CalenderMedecinPage","constructor","firestore","modalController","viewDate","Date","view","Month","uid","events","start","title","activeDayIsOpen","rdvs","medecinuid","dayStartTime","dayEndTime","loadEvents","console","log","ngOnInit","_this","_asyncToGenerator","length","sort","a","b","date","getTime","map","rdv","convertDateTimeToDate","heure","split","end","prenom","nom","medecinPrenom","medecinNom","error","dayClicked","deleteRendezVouscalendar","rendezVous","_this2","excuse","presentExcuseModal","undefined","isRendezVousDatePassed","d","today","yesterday","setDate","getDate","rendezVousDate","_this3","modal","create","component","present","Promise","resolve","onDidDismiss","then","data","changeDay","Day","closeOpenMonthViewDay","setView","dateString","timeString","dateParts","part","parseInt","timeParts","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\calender-medecin\\calender-medecin.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CalendarEvent } from 'angular-calendar';\nimport { isSameDay, isSameMonth, startOfDay,endOfDay } from 'date-fns';\nimport { CalendarView } from 'angular-calendar';\nimport { deleteRendezVous, getRdvByMedUid } from 'src/firebaseConfig';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { medecinUid } from 'src/firebaseConfig';\nimport { ExcuseModalComponent, selectedExcuse } from './excusemodal/excusemodal.component';\nimport { ModalController } from '@ionic/angular';\n\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string;\n  medecinPrenom?: string;\n  medecinuid: string;\n  key: string;\n  excuse?:string ;\n  statut?:string;\n  present?:boolean;\n}\n\n@Component({\n  selector: 'app-calender-medecin',\n  templateUrl: './calender-medecin.page.html',\n  styleUrls: ['./calender-medecin.page.scss'],\n})\nexport class CalenderMedecinPage implements OnInit {\n\n  viewDate: Date = new Date();\n  view: CalendarView = CalendarView.Month;\n  CalendarView = CalendarView;\n  uid: string = medecinUid.uid;\n  events: CalendarEvent[] = [{ start: new Date(), title: 'An event' }];\n  activeDayIsOpen: boolean = false;\n  rdvs: RendezVousData[] = [];\n  medecinuid = this.uid;\n  dayStartTime: string;\n  dayEndTime: string;\n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) {\n    this.dayStartTime  = '8:00'; // Heure de début de journée\n    this.dayEndTime = '17:00'; // Heure de fin de journée\n    this.loadEvents();\n    console.log('meduid', medecinUid.uid);\n  }\n\n  ngOnInit() {}\n\n  async loadEvents() {\n    try {\n      const rdvs = await getRdvByMedUid(this.firestore, this.uid);\n      if (rdvs && rdvs.length > 0) {\n        this.rdvs = rdvs.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());;\n\n        \n        this.events = rdvs.map(rdv => ({\n          start: this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[0]),\n          end: this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[1]),\n          title: `Rendez-vous de ${rdv.prenom} ${rdv.nom} à ${rdv.heure} chez ${rdv.medecinPrenom} ${rdv.medecinNom}`,\n        }));\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des rendez-vous:', error);\n    }\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if ((isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) || events.length === 0) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n\n  async deleteRendezVouscalendar(rendezVous: RendezVousData) {\n    try {\n        // Demander une excuse via la modal\n        const excuse = await this.presentExcuseModal();\n        // Vérifier si une excuse a été fournie\n        if (selectedExcuse !== undefined) {\n            // Appeler deleteRendezVous avec l'excuse\n            await deleteRendezVous(this.firestore, medecinUid.uid, rendezVous, selectedExcuse);\n            console.log('Rendez-vous supprimé avec succès.');\n            await this.loadEvents();\n        } else {\n            console.log('Excuse non fournie. Annulation de la suppression du rendez-vous.');\n        }\n    } catch (error) {\n        console.error('Erreur lors de la suppression du rendez-vous:', error);\n    }\n}\n isRendezVousDatePassed(rendezVous: RendezVousData) {\n  const d = rendezVous.date;\n  const today = new Date();\n  const yesterday = new Date(today);\n  yesterday.setDate(today.getDate() - 1); \n  const rendezVousDate = new Date(d);\n  return  rendezVousDate < yesterday;\n}\n\n\n\nasync presentExcuseModal(): Promise<string | undefined> {\n    const modal = await this.modalController.create({\n        component: ExcuseModalComponent,\n    });\n\n    await modal.present();\n\n    return new Promise<string | undefined>((resolve) => {\n        modal.onDidDismiss().then(({ data }) => {\n            resolve(data?.excuse);\n        });\n    });\n}\n\n\n\n\n\n\n  changeDay(date: Date) {\n    this.viewDate = date;\n    this.view = CalendarView.Day;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = false;\n  }\n\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  private convertDateTimeToDate(dateString: string, timeString: string): Date {\n    const dateParts = dateString.split('-').map(part => parseInt(part, 10));\n    const timeParts = timeString.split('H').map(part => parseInt(part, 10));\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], timeParts[0], timeParts[1]);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}