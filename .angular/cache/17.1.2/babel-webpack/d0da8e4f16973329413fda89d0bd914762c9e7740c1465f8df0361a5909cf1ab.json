{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./patient.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./patient.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { getPatientsByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { Router } from '@angular/router';\nlet PatientPage = (_PatientPage = class PatientPage {\n  constructor(firestore, modalController, router) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.router = router;\n    this.patients = [];\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n    this.nomPatient = '';\n    this.prenomPatient = '';\n    this.patientUid = ''; // Ajout de la variable patientUid pour l'UID du patient\n    this.med = this.uid;\n    this.n = this.nomPatient;\n    this.p = this.prenomPatient;\n  }\n  ngOnInit() {\n    this.getPatients();\n    console.log(patientA);\n  }\n  gotopatientpage(patient) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      patientA = patient;\n      patientUidA = patient.uid;\n      _this.router.navigate(['/patientpage']);\n      console.log('going to patientpage');\n    })();\n  }\n  getPatients() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.patients = yield getPatientsByMedUid(_this2.firestore, _this2.uid);\n        if (_this2.patients.length > 0) {\n          _this2.nomPatient = _this2.patients[0].nom;\n          _this2.prenomPatient = _this2.patients[0].prenom;\n        }\n        console.log(\"Patients trouvés :\", _this2.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n  openFichePatientModal(patient) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this3.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          patientData: patient,\n          medecinUid: _this3.uid // Passer l'UID du médecin ici\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showConsultations(uid) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      patientUidA = uid;\n      _this4.router.navigate(['/consultationliste']);\n    })();\n  }\n  search(event) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const searchTerm = event.target.value.toLowerCase().trim();\n      if (!searchTerm) {\n        // Si la barre de recherche est vide, réinitialiser la liste des patients\n        _this5.getPatients();\n        return;\n      }\n      // Filtrer les patients dont le nom commence par le terme de recherche\n      _this5.patients = _this5.patients.filter(patient => patient.prenom.toLowerCase().startsWith(searchTerm));\n    })();\n  }\n}, _PatientPage.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}, {\n  type: Router\n}], _PatientPage);\nPatientPage = __decorate([Component({\n  selector: 'app-affiche-patient',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], PatientPage);\nexport { PatientPage };\nexport let med;\nexport let n;\nexport let p;\nexport let patientUidA; // Exporter la variable patientUid\nexport let patientA;","map":{"version":3,"names":["Component","AngularFirestore","ModalController","getPatientsByMedUid","medecinUid","FichePatientModalComponent","Router","PatientPage","_PatientPage","constructor","firestore","modalController","router","patients","rdvs","uid","nomPatient","prenomPatient","patientUid","med","n","p","ngOnInit","getPatients","console","log","patientA","gotopatientpage","patient","_this","_asyncToGenerator","patientUidA","navigate","_this2","length","nom","prenom","error","openFichePatientModal","_this3","modal","create","component","componentProps","patientData","onDidDismiss","then","data","present","showConsultations","_this4","search","event","_this5","searchTerm","target","value","toLowerCase","trim","filter","startsWith","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { RendezVousData, getPatientsByMedUid, getConsultationsForPatient, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { ConsultationsModalComponent } from './consultations-modal/consultations-modal.component';\nimport { ConsultationslisteModalComponent } from '../patients/consultationsliste-modal/consultationsliste-modal.component';\nimport { Router } from '@angular/router';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n\ninterface PatientData {\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephone?: string;\n  uid: string;\n  medecinUid?: string; \n}\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patient.page.html',\n  styleUrls: ['./patient.page.scss'],\n})\nexport class PatientPage implements OnInit {\n  patients: PatientData[] = [];\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n  nomPatient: string = ''; \n  prenomPatient: string = '';\n  patientUid: string = ''; // Ajout de la variable patientUid pour l'UID du patient\n\n  \n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController, private router: Router) { }\n\n  ngOnInit() {\n    this.getPatients();\n    console.log(patientA)\n    \n  }\n\n  async gotopatientpage(patient:PatientData){\n  patientA=patient\n  patientUidA=patient.uid\n  this.router.navigate(['/patientpage']);\n  console.log('going to patientpage')\n}\n  async getPatients() {\n    try {\n      this.patients = await getPatientsByMedUid(this.firestore, this.uid);\n      if (this.patients.length > 0) {\n        this.nomPatient = this.patients[0].nom;\n        this.prenomPatient = this.patients[0].prenom;\n      } \n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n\n  async openFichePatientModal(patient: PatientData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        patientData: patient,\n        medecinUid: this.uid // Passer l'UID du médecin ici\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n\n    return await modal.present();\n  }\n\n  async showConsultations(uid :string) {\n    patientUidA=uid;\n    this.router.navigate(['/consultationliste']);\n\n  }\n\nmed=this.uid;\nn=this.nomPatient ;\np=this.prenomPatient;\n\nasync search(event: CustomEvent) {\n  const searchTerm = (event.target as HTMLInputElement).value.toLowerCase().trim();\n  if (!searchTerm) {\n    // Si la barre de recherche est vide, réinitialiser la liste des patients\n    this.getPatients();\n    return;\n  }\n\n  // Filtrer les patients dont le nom commence par le terme de recherche\n  this.patients = this.patients.filter(patient =>\n    patient.prenom.toLowerCase().startsWith(searchTerm)\n  );\n}\n \n\n\n}\nexport let med :string ;\nexport let n :string ;\nexport let p :string ;\nexport let patientUidA: string ; // Exporter la variable patientUid\nexport let patientA:PatientData;\n\n"],"mappings":";;;;;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAAyBC,mBAAmB,EAA8BC,UAAU,QAAQ,oBAAoB;AAChH,SAASC,0BAA0B,QAAQ,qDAAqD;AAGhG,SAASC,MAAM,QAAQ,iBAAiB;AAuBjC,IAAMC,WAAW,IAAAC,YAAA,GAAjB,MAAMD,WAAW;EAUtBE,YAAoBC,SAA2B,EAAUC,eAAgC,EAAUC,MAAc;IAA7F,KAAAF,SAAS,GAATA,SAAS;IAA4B,KAAAC,eAAe,GAAfA,eAAe;IAA2B,KAAAC,MAAM,GAANA,MAAM;IATzG,KAAAC,QAAQ,GAAkB,EAAE;IAC5B,KAAAC,IAAI,GAAqB,EAAE;IAC3B,KAAAC,GAAG,GAAWX,UAAU,CAACW,GAAG;IAC5B,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,UAAU,GAAW,EAAE,CAAC,CAAC;IAwD3B,KAAAC,GAAG,GAAC,IAAI,CAACJ,GAAG;IACZ,KAAAK,CAAC,GAAC,IAAI,CAACJ,UAAU;IACjB,KAAAK,CAAC,GAAC,IAAI,CAACJ,aAAa;EAtDmG;EAErHK,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;IAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAEvB;EAEMC,eAAeA,CAACC,OAAmB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACzCJ,QAAQ,GAACE,OAAO;MAChBG,WAAW,GAACH,OAAO,CAACb,GAAG;MACvBc,KAAI,CAACjB,MAAM,CAACoB,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACtCR,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAAA;EACrC;EACQF,WAAWA,CAAA;IAAA,IAAAU,MAAA;IAAA,OAAAH,iBAAA;MACf,IAAI;QACFG,MAAI,CAACpB,QAAQ,SAASV,mBAAmB,CAAC8B,MAAI,CAACvB,SAAS,EAAEuB,MAAI,CAAClB,GAAG,CAAC;QACnE,IAAIkB,MAAI,CAACpB,QAAQ,CAACqB,MAAM,GAAG,CAAC,EAAE;UAC5BD,MAAI,CAACjB,UAAU,GAAGiB,MAAI,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAACsB,GAAG;UACtCF,MAAI,CAAChB,aAAa,GAAGgB,MAAI,CAACpB,QAAQ,CAAC,CAAC,CAAC,CAACuB,MAAM;QAC9C;QACAZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,MAAI,CAACpB,QAAQ,CAAC;MAClD,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdb,OAAO,CAACa,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;IAAC;EACH;EAEMC,qBAAqBA,CAACV,OAAoB;IAAA,IAAAW,MAAA;IAAA,OAAAT,iBAAA;MAC9C,MAAMU,KAAK,SAASD,MAAI,CAAC5B,eAAe,CAAC8B,MAAM,CAAC;QAC9CC,SAAS,EAAErC,0BAA0B;QACrCsC,cAAc,EAAE;UACdC,WAAW,EAAEhB,OAAO;UACpBxB,UAAU,EAAEmC,MAAI,CAACxB,GAAG,CAAC;;OAExB,CAAC;MAEFyB,KAAK,CAACK,YAAY,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAI;QACjC,IAAIA,IAAI,IAAIA,IAAI,CAACA,IAAI,EAAE;UACrBvB,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEsB,IAAI,CAACA,IAAI,CAAC;QACvE;MACF,CAAC,CAAC;MAGF,aAAaP,KAAK,CAACQ,OAAO,EAAE;IAAC;EAC/B;EAEMC,iBAAiBA,CAAClC,GAAW;IAAA,IAAAmC,MAAA;IAAA,OAAApB,iBAAA;MACjCC,WAAW,GAAChB,GAAG;MACfmC,MAAI,CAACtC,MAAM,CAACoB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAAC;EAE/C;EAMImB,MAAMA,CAACC,KAAkB;IAAA,IAAAC,MAAA;IAAA,OAAAvB,iBAAA;MAC7B,MAAMwB,UAAU,GAAIF,KAAK,CAACG,MAA2B,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,IAAI,EAAE;MAChF,IAAI,CAACJ,UAAU,EAAE;QACf;QACAD,MAAI,CAAC9B,WAAW,EAAE;QAClB;MACF;MAEA;MACA8B,MAAI,CAACxC,QAAQ,GAAGwC,MAAI,CAACxC,QAAQ,CAAC8C,MAAM,CAAC/B,OAAO,IAC1CA,OAAO,CAACQ,MAAM,CAACqB,WAAW,EAAE,CAACG,UAAU,CAACN,UAAU,CAAC,CACpD;IAAC;EACJ;;;;;;;;AA9Ea/C,WAAW,GAAAsD,UAAA,EALvB7D,SAAS,CAAC;EACT8D,QAAQ,EAAE,qBAAqB;EAC/BC,QAAA,EAAAC,oBAAkC;;CAEnC,CAAC,C,EACWzD,WAAW,CAkFvB;;AACD,OAAO,IAAIY,GAAW;AACtB,OAAO,IAAIC,CAAS;AACpB,OAAO,IAAIC,CAAS;AACpB,OAAO,IAAIU,WAAmB,CAAE,CAAC;AACjC,OAAO,IAAIL,QAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}