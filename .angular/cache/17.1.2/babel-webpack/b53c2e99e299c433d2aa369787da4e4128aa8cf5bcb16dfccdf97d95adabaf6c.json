{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _RechercheMedicamentPage;\nimport { getMedicaments } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/router\";\nexport class RechercheMedicamentPage {\n  constructor(firestore, http) {\n    this.firestore = firestore;\n    this.http = http;\n    this.medicaments = [];\n    this.nom = '';\n  }\n  ngOnInit() {\n    this.readMedicamentsJson();\n    console.log(this.readMedicamentsJson);\n  }\n  fetchMedicament() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this.nom) {\n          // Filter the medicaments array based on the given name\n          _this.filteredMedicament = _this.medicaments.find(med => med.dci.toLowerCase() === _this.nom.toLowerCase());\n          if (_this.filteredMedicament) {\n            console.log('Médecin disponible :', _this.filteredMedicament);\n          } else {\n            console.error('Aucun médecament trouvé avec le nom spécifié.');\n          }\n        } else {\n          console.error('Paramètres de recherche non valides.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération du médecin (fetchMedicament):', error);\n      }\n    })();\n  }\n  getMedicament() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const medicaments = yield getMedicaments(_this2.firestore);\n      console.log(medicaments);\n      _this2.medicaments = medicaments;\n      console.log(_this2.medicaments);\n    })();\n  }\n  readJsonFile(filePath) {\n    return new Promise((resolve, reject) => {\n      this.http.get(filePath, {\n        responseType: 'json'\n      }).toPromise().then(response => {\n        resolve(response);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n  // Usage\n  readMedicamentsJson() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const medicaments = yield _this3.readJsonFile('../../assets/medicaments.json');\n        _this3.medicaments = medicaments;\n        console.log(medicaments);\n      } catch (error) {\n        console.error('Error reading JSON file:', error);\n      }\n    })();\n  }\n}\n_RechercheMedicamentPage = RechercheMedicamentPage;\n_RechercheMedicamentPage.ɵfac = function RechercheMedicamentPage_Factory(t) {\n  return new (t || _RechercheMedicamentPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n_RechercheMedicamentPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _RechercheMedicamentPage,\n  selectors: [[\"app-recherche-medicament\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"translucent\"], [\"routerLink\", \"/tabs/tab3\", \"fill\", \"clear\"], [3, \"fullscreen\"], [1, \"entier\"], [\"name\", \"search-outline\", 1, \"warning\"], [\"placeholder\", \"\\u00A0Nom\", \"type\", \"text\", \"name\", \"nom\", 3, \"ngModel\", \"ngModelChange\"], [\"size\", \"auto\"], [3, \"click\"], [\"name\", \"search-outline\"], [\"src\", \"https://www.med.tn/\", \"width\", \"600\", \"height\", \"400\", \"frameborder\", \"0\", \"allowfullscreen\", \"\"]],\n  template: function RechercheMedicamentPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-button\", 1);\n      i0.ɵɵtext(3, \" Retour\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 2)(5, \"ion-grid\")(6, \"ion-row\")(7, \"ion-col\")(8, \"ion-item\", 3);\n      i0.ɵɵelement(9, \"ion-icon\", 4);\n      i0.ɵɵelementStart(10, \"ion-input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RechercheMedicamentPage_Template_ion_input_ngModelChange_10_listener($event) {\n        return ctx.nom = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"ion-col\", 6)(12, \"ion-button\", 7);\n      i0.ɵɵlistener(\"click\", function RechercheMedicamentPage_Template_ion_button_click_12_listener() {\n        return ctx.fetchMedicament();\n      });\n      i0.ɵɵelement(13, \"ion-icon\", 8);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(14, \"iframe\", 9);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.nom);\n    }\n  },\n  dependencies: [i3.NgControlStatus, i3.NgModel, i4.IonButton, i4.IonCol, i4.IonContent, i4.IonGrid, i4.IonHeader, i4.IonIcon, i4.IonInput, i4.IonItem, i4.IonRow, i4.IonToolbar, i4.TextValueAccessor, i4.RouterLinkDelegate, i5.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getMedicaments","RechercheMedicamentPage","constructor","firestore","http","medicaments","nom","ngOnInit","readMedicamentsJson","console","log","fetchMedicament","_this","_asyncToGenerator","filteredMedicament","find","med","dci","toLowerCase","error","getMedicament","_this2","readJsonFile","filePath","Promise","resolve","reject","get","responseType","toPromise","then","response","catch","_this3","i0","ɵɵdirectiveInject","i1","AngularFirestore","i2","HttpClient","selectors","decls","vars","consts","template","RechercheMedicamentPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","RechercheMedicamentPage_Template_ion_input_ngModelChange_10_listener","$event","RechercheMedicamentPage_Template_ion_button_click_12_listener","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\recherche-medicament\\recherche-medicament.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\recherche-medicament\\recherche-medicament.page.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getMedicamentByName, getMedicaments } from 'src/firebaseConfig';\n\ninterface MedicamentDD {\n  class: string;\n  conditionnement: string;\n  conservation: string;\n  amm: string;\n  dateamm: string;\n  dci: string;\n  dosage: string;\n  forme: string;\n  indication: string;\n  laboratoire: string;\n  sousclass: string;\n  specialite: string;\n  specification: string;\n  tableau: string;\n}\n\n@Component({\n  selector: 'app-recherche-medicament',\n  templateUrl: './recherche-medicament.page.html',\n  styleUrls: ['./recherche-medicament.page.scss'],\n})\nexport class RechercheMedicamentPage implements OnInit {\n  medicaments: MedicamentDD[] = [];\n  nom: string = '';\n  filteredMedicament: MedicamentDD | undefined;\n\n  constructor(private firestore: AngularFirestore,private http: HttpClient) { }\n\n  ngOnInit() {\n    this.readMedicamentsJson();\n    console.log(this.readMedicamentsJson)\n  }\n\n  async fetchMedicament() {\n    try {\n      if (this.nom) {\n        // Filter the medicaments array based on the given name\n        this.filteredMedicament = this.medicaments.find(med => med.dci.toLowerCase() === this.nom.toLowerCase());\n        if (this.filteredMedicament) {\n          console.log('Médecin disponible :', this.filteredMedicament);\n        } else {\n          console.error('Aucun médecament trouvé avec le nom spécifié.');\n        }\n      } else {\n        console.error('Paramètres de recherche non valides.');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération du médecin (fetchMedicament):', error);\n    }\n  }\n\n  async getMedicament(){\n    const medicaments =await getMedicaments(this.firestore);\n    console.log(medicaments)\n\n    this.medicaments=medicaments;\n    console.log(this.medicaments)\n  }\n\n  readJsonFile(filePath: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http.get(filePath, { responseType: 'json' })\n        .toPromise()\n        .then(response => {\n          resolve(response);\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  // Usage\n  async readMedicamentsJson() {\n    try {\n      const medicaments = await this.readJsonFile('../../assets/medicaments.json');\n      this.medicaments=medicaments;\n      console.log(medicaments);\n    } catch (error) {\n      console.error('Error reading JSON file:', error);\n    }\n  }\n}","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-button routerLink=\"/tabs/tab3\" fill=\"clear\"> Retour</ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-item class=\"entier\">\n          <ion-icon name=\"search-outline\" class=\"warning\"></ion-icon>\n          <ion-input placeholder=\"&nbsp;Nom\" type=\"text\" name=\"nom\" [(ngModel)]=\"nom\" >\n          </ion-input>\n        </ion-item>\n      </ion-col>\n\n      <ion-col size=\"auto\">\n        <ion-button (click)=\"fetchMedicament()\"> \n          <ion-icon name=\"search-outline\"></ion-icon>\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <iframe src=\"https://www.med.tn/\" width=\"600\" height=\"400\" frameborder=\"0\" allowfullscreen></iframe>\n\n</ion-content>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}