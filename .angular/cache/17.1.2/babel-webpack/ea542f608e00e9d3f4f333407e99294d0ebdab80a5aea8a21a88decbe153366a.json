{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientpagePage;\nimport { getConsultations, getRdvByPatientUid, medecinUid, savePatient } from 'src/firebaseConfig';\nimport { patient, patientUidA } from '../patient/patient.page';\nimport { meduid } from '../login-medecin/login-medecin.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nexport class PatientpagePage {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.Segment = 'fiches';\n    this.fichePatient = {\n      nom: '',\n      prenom: '',\n      age: null,\n      adresse: '',\n      telephone: ''\n      // Ajoutez d'autres champs selon vos besoins\n    };\n    this.patient = patient;\n    this.prenom = this.rendezVousData.prenom;\n    this.nom = this.rendezVousData.nom;\n    this.rendezVousData = {};\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.rdv = yield getRdvByPatientUid(_this.firestore, patientUidA);\n      console.log('patient');\n      console.log('patient', patient);\n      _this.loadConsultations();\n      console.log('rdv', _this.rdv);\n    })();\n  }\n  loadConsultations() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Utilisez la fonction getConsultation pour obtenir les consultations\n        const consultations = yield getConsultations(_this2.firestore, medecinUid.uid, patientUidA);\n        if (consultations && consultations.length > 0) {\n          // Assurez-vous que les consultations sont définies et non vides\n          _this2.consultations = consultations;\n        } else {\n          console.log('Aucune consultation trouvée pour ce patient.');\n        }\n      } catch (error) {\n        console.error('Erreur lors du chargement des consultations du patient :', error);\n      }\n    })();\n  }\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n  saveFichePatient() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.fichePatient.nom = _this3.patient.nom;\n        _this3.fichePatient.prenom = _this3.patient.prenom;\n        console.log('prenom ', _this3.fichePatient.prenom, 'nom ', _this3.fichePatient.nom);\n        console.log('Données de la fiche patient à sauvegarder :', _this3.fichePatient);\n        // Appel de la fonction savePatient pour sauvegarder le patient chez le médecin\n        yield savePatient(_this3.firestore, _this3.fichePatient, meduid);\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n      }\n    })();\n  }\n}\n_PatientpagePage = PatientpagePage;\n_PatientpagePage.ɵfac = function PatientpagePage_Factory(t) {\n  return new (t || _PatientpagePage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController));\n};\n_PatientpagePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientpagePage,\n  selectors: [[\"app-patientpage\"]],\n  inputs: {\n    rendezVousData: \"rendezVousData\"\n  },\n  decls: 17,\n  vars: 1,\n  consts: [[\"value\", \"fiches\"], [\"value\", \"consultations\"], [\"value\", \"documents\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"]],\n  template: function PatientpagePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"info patients : \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"ion-toolbar\")(5, \"ion-segment\")(6, \"ion-segment-button\", 0);\n      i0.ɵɵtext(7, \"Fiche Patient\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"ion-segment-button\", 1);\n      i0.ɵɵtext(9, \"Consultations\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ion-segment-button\", 2);\n      i0.ɵɵtext(11, \"Documents\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(12, \"ion-content\", 3)(13, \"ion-header\", 4)(14, \"ion-toolbar\")(15, \"ion-title\", 5);\n      i0.ɵɵtext(16, \"patientpage\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"fullscreen\", true);\n    }\n  },\n  dependencies: [i2.IonContent, i2.IonHeader, i2.IonSegment, i2.IonSegmentButton, i2.IonTitle, i2.IonToolbar, i2.SelectValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getConsultations","getRdvByPatientUid","medecinUid","savePatient","patient","patientUidA","meduid","PatientpagePage","constructor","firestore","modalController","Segment","fichePatient","nom","prenom","age","adresse","telephone","rendezVousData","ngOnInit","_this","_asyncToGenerator","rdv","console","log","loadConsultations","_this2","consultations","uid","length","error","closeModal","dismiss","saveFichePatient","_this3","i0","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","selectors","inputs","decls","vars","consts","template","PatientpagePage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patientpage\\patientpage.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patientpage\\patientpage.page.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { getConsultations, getRdvByPatientUid, medecinUid, savePatient } from 'src/firebaseConfig';\nimport { patient, patientUidA } from '../patient/patient.page';\nimport { meduid } from '../login-medecin/login-medecin.page';\n\ninterface PatientData {\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephones?: string;\n  uid:string ;\n}\n\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom?: string; // Ajout de la propriété medecinNom comme optionnelle\n  medecinPrenom?: string; \n  medecinuid:string;// Ajout de la propriété medecinPrenom comme optionnelle\n  key:string ;\n  excuse?:string;\n  statut?:string;\n}\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n@Component({\n  selector: 'app-patientpage',\n  templateUrl: './patientpage.page.html',\n  styleUrls: ['./patientpage.page.scss'],\n})\n\n\nexport class PatientpagePage implements OnInit {\n  @Input() rendezVousData!: RendezVousData; \n  Segment: string = 'fiches'; \n  \n  fichePatient = {\n    nom: '',\n    prenom: '',\n    age: null,\n    adresse: '',\n    telephone: ''\n    // Ajoutez d'autres champs selon vos besoins\n  };\n  rdv: RendezVousData[] | null | undefined;\n  patient:PatientData =patient ;\n  consultations!: consultationData[];\n\n  constructor(private firestore: AngularFirestore,private modalController: ModalController) {\n    this.rendezVousData = {} as RendezVousData;\n  }\n  prenom :string = this.rendezVousData.prenom;\n  nom:string=this.rendezVousData.nom;\n\n\n  async ngOnInit() {\n    this.rdv= await getRdvByPatientUid(this.firestore,  patientUidA);\n    console.log('patient')\n    console.log('patient',patient)\n    this.loadConsultations();\n    \n    console.log('rdv',this.rdv)\n\n  }\n  async loadConsultations() {\n    try {\n      // Utilisez la fonction getConsultation pour obtenir les consultations\n      const consultations = await getConsultations(this.firestore,medecinUid.uid, patientUidA);\n  \n      if (consultations && consultations.length > 0) {\n        // Assurez-vous que les consultations sont définies et non vides\n        this.consultations = consultations;\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n\n  async saveFichePatient() {\n    try {\n     this.fichePatient.nom=this.patient.nom ;\n     this.fichePatient.prenom=this.patient.prenom;\n     console.log('prenom ',this.fichePatient.prenom,'nom ',this.fichePatient.nom)\n     \n      console.log('Données de la fiche patient à sauvegarder :', this.fichePatient);\n\n      // Appel de la fonction savePatient pour sauvegarder le patient chez le médecin\n      await savePatient(this.firestore, this.fichePatient, meduid);\n\n     \n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du patient chez le médecin :', error);\n    }\n  }\n\n}\n\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>info patients : </ion-title>\n  </ion-toolbar>\n  <ion-toolbar>\n    <ion-segment >\n      <ion-segment-button value=\"fiches\">Fiche Patient</ion-segment-button>\n      <ion-segment-button value=\"consultations\">Consultations</ion-segment-button>\n      <ion-segment-button value=\"documents\">Documents</ion-segment-button>\n    </ion-segment>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">patientpage</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}