{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ParametreMedProfilPage;\nimport { getMedecinByUid, medecinUid } from 'src/firebaseConfig'; // Importez votre fonction getMedecinByUid\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nexport class ParametreMedProfilPage {\n  constructor(router, firestore) {\n    this.router = router;\n    this.firestore = firestore;\n    this.medecin = {}; // Objet pour stocker les données du médecin\n    this.formulaireActif = false; // Indicateur pour activer/désactiver le formulaire\n    this.uid = medecinUid.uid;\n  }\n  ngOnInit() {\n    if (this.uid) {\n      console.log('Médecin UID récupéré non :', this.uid);\n      this.fetchMedecin(this.uid);\n      console.log(this.medecin[0].nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n  fetchMedecin(medecinUidValue) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.medecin = yield getMedecinByUid(_this.firestore, medecinUidValue);\n        console.log('Médecin récupéré :', _this.medecin);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du médecin :', error);\n      }\n    })();\n  }\n  activerFormulaire() {\n    this.formulaireActif = true; // Active le formulaire pour les modifications\n  }\n  enregistrerDonnees(formulaire) {\n    // Code pour enregistrer les données modifiées dans la base de données\n    // Vous pouvez utiliser le service AngularFirestore pour cela\n    // Après l'enregistrement, désactivez le formulaire\n    this.formulaireActif = false;\n  }\n  goAlimentation() {\n    this.router.navigate(['/aliment']);\n  }\n}\n_ParametreMedProfilPage = ParametreMedProfilPage;\n_ParametreMedProfilPage.ɵfac = function ParametreMedProfilPage_Factory(t) {\n  return new (t || _ParametreMedProfilPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AngularFirestore));\n};\n_ParametreMedProfilPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _ParametreMedProfilPage,\n  selectors: [[\"app-parametre-med-profil\"]],\n  decls: 30,\n  vars: 7,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [3, \"ngSubmit\"], [\"medecinForm\", \"ngForm\"], [\"position\", \"floating\"], [\"type\", \"text\", \"name\", \"nom\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"prenom\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"expand\", \"block\", \"color\", \"primary\", 3, \"click\"], [\"expand\", \"block\", \"color\", \"success\", \"type\", \"submit\", 3, \"disabled\"]],\n  template: function ParametreMedProfilPage_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Param\\u00E8tre du profil du m\\u00E9decin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Param\\u00E8tre du profil du m\\u00E9decin\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-card\")(10, \"ion-card-header\");\n      i0.ɵɵtext(11, \" Param\\u00E8tres du m\\u00E9decin \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"ion-card-content\")(13, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function ParametreMedProfilPage_Template_form_ngSubmit_13_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.enregistrerDonnees(_r0));\n      });\n      i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-label\", 6);\n      i0.ɵɵtext(17, \"Nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ParametreMedProfilPage_Template_ion_input_ngModelChange_18_listener($event) {\n        return ctx.medecin.nom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"ion-item\")(20, \"ion-label\", 6);\n      i0.ɵɵtext(21, \"Pr\\u00E9nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"ion-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ParametreMedProfilPage_Template_ion_input_ngModelChange_22_listener($event) {\n        return ctx.medecin.prenom = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ion-row\")(24, \"ion-col\")(25, \"ion-button\", 9);\n      i0.ɵɵlistener(\"click\", function ParametreMedProfilPage_Template_ion_button_click_25_listener() {\n        return ctx.activerFormulaire();\n      });\n      i0.ɵɵtext(26, \"Modifier\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"ion-col\")(28, \"ion-button\", 10);\n      i0.ɵɵtext(29, \"Enregistrer\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.medecin.nom)(\"disabled\", !ctx.formulaireActif);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.medecin.prenom)(\"disabled\", !ctx.formulaireActif);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", !ctx.formulaireActif);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.IonButton, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCol, i4.IonContent, i4.IonHeader, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonRow, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getMedecinByUid","medecinUid","ParametreMedProfilPage","constructor","router","firestore","medecin","formulaireActif","uid","ngOnInit","console","log","fetchMedecin","nom","error","medecinUidValue","_this","_asyncToGenerator","activerFormulaire","enregistrerDonnees","formulaire","goAlimentation","navigate","i0","ɵɵdirectiveInject","i1","Router","i2","AngularFirestore","selectors","decls","vars","consts","template","ParametreMedProfilPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ParametreMedProfilPage_Template_form_ngSubmit_13_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ParametreMedProfilPage_Template_ion_input_ngModelChange_18_listener","$event","ParametreMedProfilPage_Template_ion_input_ngModelChange_22_listener","prenom","ParametreMedProfilPage_Template_ion_button_click_25_listener","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\parametre-med-profil\\parametre-med-profil.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\parametre-med-profil\\parametre-med-profil.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getMedecinByUid, medecinUid } from 'src/firebaseConfig'; // Importez votre fonction getMedecinByUid\n\n\n@Component({\n  selector: 'app-parametre-med-profil',\n  templateUrl: './parametre-med-profil.page.html',\n  styleUrls: ['./parametre-med-profil.page.scss'],\n})\nexport class ParametreMedProfilPage implements OnInit {\n  medecin: any = {}; // Objet pour stocker les données du médecin\n  formulaireActif: boolean = false; // Indicateur pour activer/désactiver le formulaire\n  uid=medecinUid.uid;\n  constructor(private router: Router, private firestore: AngularFirestore) {}\n\n\n  ngOnInit() {\n \n    if (this.uid) {\n      console.log('Médecin UID récupéré non :', this.uid);\n      this.fetchMedecin(this.uid);\n      console.log(this.medecin[0].nom);\n    } else {\n      console.error('Erreur: medecinUid est undefined.');\n    }\n  }\n\n\n  async fetchMedecin(medecinUidValue: string) {\n    try {\n      this.medecin = await getMedecinByUid(this.firestore, medecinUidValue);\n      console.log('Médecin récupéré :', this.medecin);\n    } catch (error) {\n      console.error('Erreur lors de la récupération du médecin :', error);\n    }\n  }\n\n\n  activerFormulaire() {\n    this.formulaireActif = true; // Active le formulaire pour les modifications\n  }\n\n\n  enregistrerDonnees(formulaire: any) {\n    // Code pour enregistrer les données modifiées dans la base de données\n    // Vous pouvez utiliser le service AngularFirestore pour cela\n    // Après l'enregistrement, désactivez le formulaire\n    this.formulaireActif = false;\n  }\n\n\n  goAlimentation() {\n    this.router.navigate(['/aliment']);\n  }\n}\n\n\n\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Paramètre du profil du médecin</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Paramètre du profil du médecin</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-card>\n    <ion-card-header>\n      Paramètres du médecin\n    </ion-card-header>\n    <ion-card-content>\n      <form #medecinForm=\"ngForm\" (ngSubmit)=\"enregistrerDonnees(medecinForm)\">\n        <ion-item>\n          <ion-label position=\"floating\">Nom</ion-label>\n          <ion-input type=\"text\" [(ngModel)]=\"medecin.nom\" name=\"nom\" [disabled]=\"!formulaireActif\"></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-label position=\"floating\">Prénom</ion-label>\n          <ion-input type=\"text\" [(ngModel)]=\"medecin.prenom\" name=\"prenom\" [disabled]=\"!formulaireActif\"></ion-input>\n        </ion-item>\n        <!-- Ajoutez d'autres champs en fonction de votre objet medecin -->\n        <ion-row>\n          <ion-col>\n            <ion-button expand=\"block\" color=\"primary\" (click)=\"activerFormulaire()\">Modifier</ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button expand=\"block\" color=\"success\" type=\"submit\" [disabled]=\"!formulaireActif\">Enregistrer</ion-button>\n          </ion-col>\n        </ion-row>\n      </form>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}