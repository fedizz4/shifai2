{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ProfilPage;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./profil.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./profil.page.scss?ngResource\";\nimport { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { getInscritByUid1 } from 'src/firebaseConfig';\nlet ProfilPage = (_ProfilPage = class ProfilPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.uid = inscritUid;\n    this.familyName = \"\";\n    this.name = \"\";\n    this.email = \"\";\n    this.password = \"\";\n    this.date = \"\";\n    this.sexe = \"\";\n    this.formulaireActif = false; // Indicateur pour activer/désactiver le formulaire\n  }\n  ngOnInit() {\n    this.fetchInscrit();\n  }\n  fetchInscrit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.inscrit = yield getInscritByUid1(_this.firestore, inscritUid);\n        console.log('Inscrit récupéré :', _this.inscrit);\n        if (_this.inscrit) {\n          // Mettez à jour les champs du formulaire avec les données récupérées de l'inscrit\n          _this.familyName = _this.inscrit.familyName;\n          _this.name = _this.inscrit.name;\n          _this.email = _this.inscrit.email;\n          _this.password = _this.inscrit.password;\n          _this.date = _this.inscrit.date;\n          _this.sexe = _this.inscrit.sexe;\n        } else {\n          console.error('Aucun inscrit trouvé pour cet UID :', inscritUid);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération de l\\'inscrit :', error);\n      }\n    })();\n  }\n  activerFormulaire() {\n    this.formulaireActif = true; // Active le formulaire pour les modifications\n  }\n  enregistrerDonneesInscrit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Vérifiez que inscrit n'est pas null avant de tenter la mise à jour\n        if (_this2.inscrit) {\n          const inscritModifie = {\n            familyName: _this2.familyName,\n            name: _this2.name,\n            email: _this2.email,\n            password: _this2.password,\n            date: _this2.date,\n            sexe: _this2.sexe\n            // Ajoutez d'autres champs si nécessaire\n          };\n          yield _this2.firestore.collection('inscrits').doc(inscritUid).update(inscritModifie);\n          console.log('Données de l\\'inscrit mises à jour avec succès dans Firebase.');\n          _this2.formulaireActif = false; // Désactivez le formulaire après la mise à jour\n        } else {\n          console.error('Aucun inscrit trouvé pour la mise à jour.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la mise à jour des données de l\\'inscrit dans Firebase :', error);\n      }\n    })();\n  }\n}, _ProfilPage.ctorParameters = () => [{\n  type: AngularFirestore\n}], _ProfilPage);\nProfilPage = __decorate([Component({\n  selector: 'app-profil',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ProfilPage);\nexport { ProfilPage };","map":{"version":3,"names":["Component","AngularFirestore","inscritUid","getInscritByUid1","ProfilPage","_ProfilPage","constructor","firestore","uid","familyName","name","email","password","date","sexe","formulaireActif","ngOnInit","fetchInscrit","_this","_asyncToGenerator","inscrit","console","log","error","activerFormulaire","enregistrerDonneesInscrit","_this2","inscritModifie","collection","doc","update","__decorate","selector","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\profil\\profil.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { getInscritByUid1 } from 'src/firebaseConfig';\n\ninterface Inscrit {\n  familyName: string;\n  name: string;\n  email: string;\n  password: string;\n  date: string;\n  sexe: string;\n}\n\n\n@Component({\n  selector: 'app-profil',\n  templateUrl: './profil.page.html',\n  styleUrls: ['./profil.page.scss'],\n})\nexport class ProfilPage implements OnInit {\n\n  uid=inscritUid;\n\n\n  familyName: string=\"\";\n  name: string=\"\";\n  email: string=\"\";\n  password: string=\"\";\n  date: string=\"\";\n  sexe: string=\"\";\n \n  inscrit: Inscrit | null | undefined;\n\n  formulaireActif: boolean = false; // Indicateur pour activer/désactiver le formulaire\n  constructor(private firestore: AngularFirestore) { }\n\n  ngOnInit() {\n    this.fetchInscrit();\n  }\n\n  async fetchInscrit() {\n    try {\n\n      \n      this.inscrit = await getInscritByUid1(this.firestore, inscritUid);\n      console.log('Inscrit récupéré :', this.inscrit);\n      if (this.inscrit) {\n        // Mettez à jour les champs du formulaire avec les données récupérées de l'inscrit\n        this.familyName = this.inscrit.familyName;\n        this.name = this.inscrit.name;\n        this.email = this.inscrit.email;\n        this.password = this.inscrit.password;\n        this.date = this.inscrit.date;\n        this.sexe = this.inscrit.sexe;\n      } else {\n        console.error('Aucun inscrit trouvé pour cet UID :', inscritUid);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération de l\\'inscrit :', error);\n    }\n  }\n  \n  \n  activerFormulaire() {\n    this.formulaireActif = true; // Active le formulaire pour les modifications\n  }\n\n  async enregistrerDonneesInscrit() {\n    try {\n      // Vérifiez que inscrit n'est pas null avant de tenter la mise à jour\n      if (this.inscrit) {\n        const inscritModifie = {\n          familyName: this.familyName,\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          date: this.date,\n          sexe: this.sexe\n          // Ajoutez d'autres champs si nécessaire\n        };\n  \n        await this.firestore.collection('inscrits').doc(inscritUid).update(inscritModifie);\n        console.log('Données de l\\'inscrit mises à jour avec succès dans Firebase.');\n        this.formulaireActif = false; // Désactivez le formulaire après la mise à jour\n      } else {\n        console.error('Aucun inscrit trouvé pour la mise à jour.');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour des données de l\\'inscrit dans Firebase :', error);\n    }\n  }\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}