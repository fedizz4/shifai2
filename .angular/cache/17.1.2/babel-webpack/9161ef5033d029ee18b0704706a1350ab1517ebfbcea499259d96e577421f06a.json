{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/ionic-TP/shifai1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { getMedecinsByLocalisationAndSpecialite } from 'src/firebaseConfig';\nlet RechercheMedecinPage = class RechercheMedecinPage {\n  constructor(firestore, navCtrl) {\n    this.firestore = firestore;\n    this.navCtrl = navCtrl;\n    this.medecins = [];\n    this.localisation = '';\n    this.specialite = '';\n  }\n  ngOnInit() {\n    this.fetchMedecins();\n  }\n  fetchMedecins() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this.localisation && _this.specialite) {\n          _this.medecins = yield getMedecinsByLocalisationAndSpecialite(_this.firestore, _this.localisation, _this.specialite);\n          console.log('Médecins disponibles :', _this.medecins);\n        } else {\n          console.error('Paramètres de recherche non valides.');\n          // Ajoutez une logique pour afficher un message à l'utilisateur, si nécessaire\n          // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n          // d'entrer des paramètres valides pour la recherche.\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des médecins (fetchMedecins):', error);\n        // Ajoutez une logique pour afficher un message à l'utilisateur en cas d'erreur\n        // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n        // qu'une erreur s'est produite lors de la récupération des médecins.\n      }\n    })();\n  }\n  goToAfficheMedecin(medecinUidValue) {\n    // Stockez le medecinUid dans la variable exportée\n    medecinUid = medecinUidValue;\n    console.log('uid envoyé est :', medecinUidValue);\n    // Utilisez this.navCtrl pour naviguer vers la page AfficheMedecinPage\n    this.navCtrl.navigateForward('/affiche-medecin');\n  }\n};\nRechercheMedecinPage = __decorate([Component({\n  selector: 'app-recherche-medecin',\n  templateUrl: './recherche-medecin.page.html',\n  styleUrls: ['./recherche-medecin.page.scss']\n})], RechercheMedecinPage);\nexport { RechercheMedecinPage };\nexport let medecinUid;","map":{"version":3,"names":["Component","getMedecinsByLocalisationAndSpecialite","RechercheMedecinPage","constructor","firestore","navCtrl","medecins","localisation","specialite","ngOnInit","fetchMedecins","_this","_asyncToGenerator","console","log","error","goToAfficheMedecin","medecinUidValue","medecinUid","navigateForward","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MacBook Air\\ionic-TP\\shifai1\\src\\app\\recherche-medecin\\recherche-medecin.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getMedecinsByLocalisationAndSpecialite } from 'src/firebaseConfig';\nimport { NavController } from '@ionic/angular';\n\n// Interface pour décrire le format des données des médecins\ninterface MedecinData {\n  uid: string;\n  nom: string;\n  prenom: string;\n  localisation: string;\n  specialite: string;\n  // ... autres champs si nécessaire\n}\n\n@Component({\n  selector: 'app-recherche-medecin',\n  templateUrl: './recherche-medecin.page.html',\n  styleUrls: ['./recherche-medecin.page.scss'],\n})\nexport class RechercheMedecinPage implements OnInit {\n\n  medecins: MedecinData[] = [];\n  localisation: string = '';\n  specialite: string = '';\n\n  constructor(private firestore: AngularFirestore, private navCtrl: NavController) { }\n\n  ngOnInit() {\n    this.fetchMedecins();\n  }\n\n  async fetchMedecins() {\n    try {\n      if (this.localisation && this.specialite) {\n        this.medecins = await getMedecinsByLocalisationAndSpecialite(this.firestore, this.localisation, this.specialite);\n        console.log('Médecins disponibles :', this.medecins);\n      } else {\n        console.error('Paramètres de recherche non valides.');\n        // Ajoutez une logique pour afficher un message à l'utilisateur, si nécessaire\n        // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n        // d'entrer des paramètres valides pour la recherche.\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des médecins (fetchMedecins):', error);\n      // Ajoutez une logique pour afficher un message à l'utilisateur en cas d'erreur\n      // Par exemple, utilisez une alerte ou un autre mécanisme pour informer l'utilisateur\n      // qu'une erreur s'est produite lors de la récupération des médecins.\n    }\n  }\n\n  goToAfficheMedecin(medecinUidValue: string) {\n    // Stockez le medecinUid dans la variable exportée\n    medecinUid = medecinUidValue;\n    console.log('uid envoyé est :',medecinUidValue);\n  \n    // Utilisez this.navCtrl pour naviguer vers la page AfficheMedecinPage\n    this.navCtrl.navigateForward('/affiche-medecin');\n  }\n  \n}\nexport let medecinUid: string;\n\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,sCAAsC,QAAQ,oBAAoB;AAkBpE,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAM/BC,YAAoBC,SAA2B,EAAUC,OAAsB;IAA3D,KAAAD,SAAS,GAATA,SAAS;IAA4B,KAAAC,OAAO,GAAPA,OAAO;IAJhE,KAAAC,QAAQ,GAAkB,EAAE;IAC5B,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,UAAU,GAAW,EAAE;EAE4D;EAEnFC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEMA,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACjB,IAAI;QACF,IAAID,KAAI,CAACJ,YAAY,IAAII,KAAI,CAACH,UAAU,EAAE;UACxCG,KAAI,CAACL,QAAQ,SAASL,sCAAsC,CAACU,KAAI,CAACP,SAAS,EAAEO,KAAI,CAACJ,YAAY,EAAEI,KAAI,CAACH,UAAU,CAAC;UAChHK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,KAAI,CAACL,QAAQ,CAAC;QACtD,CAAC,MAAM;UACLO,OAAO,CAACE,KAAK,CAAC,sCAAsC,CAAC;UACrD;UACA;UACA;QACF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,8DAA8D,EAAEA,KAAK,CAAC;QACpF;QACA;QACA;MACF;IAAC;EACH;EAEAC,kBAAkBA,CAACC,eAAuB;IACxC;IACAC,UAAU,GAAGD,eAAe;IAC5BJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACG,eAAe,CAAC;IAE/C;IACA,IAAI,CAACZ,OAAO,CAACc,eAAe,CAAC,kBAAkB,CAAC;EAClD;CAED;AAxCYjB,oBAAoB,GAAAkB,UAAA,EALhCpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWrB,oBAAoB,CAwChC;;AACD,OAAO,IAAIgB,UAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}