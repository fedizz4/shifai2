{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientPage;\nimport { getPatientsByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { ConsultationsModalComponent } from './consultations-modal/consultations-modal.component';\nimport { ConsultationslisteModalComponent } from '../patients/consultationsliste-modal/consultationsliste-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nfunction PatientPage_ion_row_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\", 0);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-col\", 0);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-col\", 0);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-col\", 1);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-col\", 0);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ion-col\", 1)(12, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_row_26_Template_ion_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openFichePatientModal(patient_r1));\n    });\n    i0.ɵɵtext(13, \"Fiche Patient\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_row_26_Template_ion_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openConsultationsListeModal(patient_r1));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.adresse);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.telephones);\n  }\n}\nexport class PatientPage {\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.patients = [];\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n  }\n  ngOnInit() {\n    this.getPatients();\n  }\n  getPatients() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.patients = yield getPatientsByMedUid(_this.firestore, _this.uid);\n        console.log(\"Patients trouvés :\", _this.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n  openFichePatientModal(patient) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this2.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          patientData: patient\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showConsultations() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this3.modalController.create({\n        component: ConsultationsModalComponent\n      });\n      yield modal.present();\n    })();\n  }\n  openConsultationsListeModal(patientId) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultations = []; // Remplacez ceci par les consultations réelles récupérées de la base de données\n        const modal = yield _this4.modalController.create({\n          component: ConsultationslisteModalComponent,\n          componentProps: {\n            consultationsData: consultations\n          }\n        });\n        yield modal.present();\n      } catch (error) {\n        console.error('Erreur lors de l\\'ouverture du modal de la liste des consultations :', error);\n      }\n    })();\n  }\n}\n_PatientPage = PatientPage;\n_PatientPage.ɵfac = function PatientPage_Factory(t) {\n  return new (t || _PatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController));\n};\n_PatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientPage,\n  selectors: [[\"app-affiche-patient\"]],\n  decls: 27,\n  vars: 1,\n  consts: [[\"size\", \"2\"], [\"size\", \"3\"], [4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"]],\n  template: function PatientPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Liste des Patients\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\")(6, \"ion-grid\")(7, \"ion-row\")(8, \"ion-col\", 0)(9, \"strong\");\n      i0.ɵɵtext(10, \"Nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"ion-col\", 0)(12, \"strong\");\n      i0.ɵɵtext(13, \"Pr\\u00E9nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"ion-col\", 0)(15, \"strong\");\n      i0.ɵɵtext(16, \"Age\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"ion-col\", 1)(18, \"strong\");\n      i0.ɵɵtext(19, \"Adresse\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"ion-col\", 0)(21, \"strong\");\n      i0.ɵɵtext(22, \"T\\u00E9l\\u00E9phone\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ion-col\", 1)(24, \"strong\");\n      i0.ɵɵtext(25, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(26, PatientPage_ion_row_26_Template, 15, 5, \"ion-row\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(26);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonList, i2.IonRow, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getPatientsByMedUid","medecinUid","FichePatientModalComponent","ConsultationsModalComponent","ConsultationslisteModalComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PatientPage_ion_row_26_Template_ion_button_click_12_listener","restoredCtx","ɵɵrestoreView","_r3","patient_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","openFichePatientModal","PatientPage_ion_row_26_Template_ion_button_click_14_listener","ctx_r4","openConsultationsListeModal","ɵɵadvance","ɵɵtextInterpolate","nom","prenom","age","adresse","telephones","PatientPage","constructor","firestore","modalController","patients","rdvs","uid","ngOnInit","getPatients","_this","_asyncToGenerator","console","log","error","patient","_this2","modal","create","component","componentProps","patientData","onDidDismiss","then","data","present","showConsultations","_this3","patientId","_this4","consultations","consultationsData","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","selectors","decls","vars","consts","template","PatientPage_Template","rf","ctx","ɵɵtemplate","PatientPage_ion_row_26_Template","ɵɵproperty"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { RendezVousData, getPatientsByMedUid, getConsultationsForPatient, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { ConsultationsModalComponent } from './consultations-modal/consultations-modal.component';\nimport { ConsultationslisteModalComponent } from '../patients/consultationsliste-modal/consultationsliste-modal.component';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n\ninterface PatientData {\n  id: string;\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephones?: string;\n  uid?: string;\n}\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patient.page.html',\n  styleUrls: ['./patient.page.scss'],\n})\nexport class PatientPage implements OnInit {\n  patients: PatientData[] = [];\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) { }\n\n  ngOnInit() {\n    this.getPatients();\n  }\n\n  async getPatients() {\n    try {\n      this.patients = await getPatientsByMedUid(this.firestore, this.uid);\n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n\n  async openFichePatientModal(patient: PatientData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        patientData: patient\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n    return await modal.present();\n  }\n\n  async showConsultations() {\n    const modal = await this.modalController.create({\n      component: ConsultationsModalComponent,\n    });\n    await modal.present();\n  }\n\n  async openConsultationsListeModal(patientId: string) {\n    try {\n      const consultations: consultationData[] = []; // Remplacez ceci par les consultations réelles récupérées de la base de données\n  \n      const modal = await this.modalController.create({\n        component: ConsultationslisteModalComponent,\n        componentProps: {\n          consultationsData: consultations\n        }\n      });\n  \n      await modal.present();\n    } catch (error) {\n      console.error('Erreur lors de l\\'ouverture du modal de la liste des consultations :', error);\n    }\n  }\n  \n}  ","<ion-header>\n  <ion-toolbar>\n    <ion-title>Liste des Patients</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-grid>\n      <ion-row>\n        <ion-col size=\"2\"><strong>Nom</strong></ion-col>\n        <ion-col size=\"2\"><strong>Prénom</strong></ion-col>\n        <ion-col size=\"2\"><strong>Age</strong></ion-col>\n        <ion-col size=\"3\"><strong>Adresse</strong></ion-col>\n        <ion-col size=\"2\"><strong>Téléphone</strong></ion-col>\n        <ion-col size=\"3\"><strong>Actions</strong></ion-col>\n      </ion-row>\n      <ion-row *ngFor=\"let patient of patients\">\n        <ion-col size=\"2\">{{ patient.nom }}</ion-col>\n        <ion-col size=\"2\">{{ patient.prenom }}</ion-col>\n        <ion-col size=\"2\">{{ patient.age }}</ion-col>\n        <ion-col size=\"3\">{{ patient.adresse }}</ion-col>\n        <ion-col size=\"2\">{{ patient.telephones }}</ion-col>\n        <ion-col size=\"3\">\n          <ion-button (click)=\"openFichePatientModal(patient)\" color=\"primary\">Fiche Patient</ion-button>\n          <ion-button  (click)=\"openConsultationsListeModal(patient)\" color=\"primary\">\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}