{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PatientPage;\nimport { getPatientsByMedUid, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction PatientPage_ion_row_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\")(2, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function PatientPage_ion_row_25_Template_ion_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.gotopatientpage(patient_r1));\n    });\n    i0.ɵɵelement(3, \"ion-icon\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-col\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-col\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-col\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-col\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(patient_r1.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.telephone);\n  }\n}\nexport class PatientPage {\n  constructor(firestore, modalController, router) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n    this.router = router;\n    this.patients = [];\n    this.rdvs = [];\n    this.uid = medecinUid.uid;\n    this.nomPatient = '';\n    this.prenomPatient = '';\n    this.patientUid = ''; // Ajout de la variable patientUid pour l'UID du patient\n    this.med = this.uid;\n    this.n = this.nomPatient;\n    this.p = this.prenomPatient;\n  }\n  ngOnInit() {\n    this.getPatients();\n    console.log(patientA);\n  }\n  gotopatientpage(patient) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      patientA = patient;\n      patientUidA = patient.uid;\n      _this.router.navigate(['/patientpage']);\n      console.log('going to patientpage');\n    })();\n  }\n  getPatients() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.patients = yield getPatientsByMedUid(_this2.firestore, _this2.uid);\n        if (_this2.patients.length > 0) {\n          _this2.nomPatient = _this2.patients[0].nom;\n          _this2.prenomPatient = _this2.patients[0].prenom;\n        }\n        console.log(\"Patients trouvés :\", _this2.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n  openFichePatientModal(patient) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const modal = yield _this3.modalController.create({\n        component: FichePatientModalComponent,\n        componentProps: {\n          patientData: patient,\n          medecinUid: _this3.uid // Passer l'UID du médecin ici\n        }\n      });\n      modal.onDidDismiss().then(data => {\n        if (data && data.data) {\n          console.log('Données de la fiche patient à enregistrer :', data.data);\n        }\n      });\n      return yield modal.present();\n    })();\n  }\n  showConsultations(uid) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      patientUidA = uid;\n      _this4.router.navigate(['/consultationliste']);\n    })();\n  }\n}\n_PatientPage = PatientPage;\n_PatientPage.ɵfac = function PatientPage_Factory(t) {\n  return new (t || _PatientPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.Router));\n};\n_PatientPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _PatientPage,\n  selectors: [[\"app-affiche-patient\"]],\n  decls: 26,\n  vars: 1,\n  consts: [[\"routerLink\", \"/app-medecin\", \"fill\", \"clear\", \"slot\", \"start\"], [4, \"ngFor\", \"ngForOf\"], [\"color\", \"primary\", 3, \"click\"], [\"name\", \"folder-sharp\"]],\n  template: function PatientPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-button\", 0);\n      i0.ɵɵtext(3, \" Retour \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \"Liste des Patients\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-list\")(8, \"ion-grid\")(9, \"ion-row\")(10, \"ion-col\")(11, \"strong\");\n      i0.ɵɵtext(12, \"Option\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-col\")(14, \"strong\");\n      i0.ɵɵtext(15, \"Nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"ion-col\")(17, \"strong\");\n      i0.ɵɵtext(18, \"Pr\\u00E9nom\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"ion-col\")(20, \"strong\");\n      i0.ɵɵtext(21, \"Age\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"ion-col\")(23, \"strong\");\n      i0.ɵɵtext(24, \"T\\u00E9l\\u00E9phone\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(25, PatientPage_ion_row_25_Template, 12, 4, \"ion-row\", 1);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.IonButton, i2.IonCol, i2.IonContent, i2.IonGrid, i2.IonHeader, i2.IonIcon, i2.IonList, i2.IonRow, i2.IonTitle, i2.IonToolbar, i2.RouterLinkDelegate, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport let med;\nexport let n;\nexport let p;\nexport let patientUidA; // Exporter la variable patientUid\nexport let patientA;","map":{"version":3,"names":["getPatientsByMedUid","medecinUid","FichePatientModalComponent","i0","ɵɵelementStart","ɵɵlistener","PatientPage_ion_row_25_Template_ion_button_click_2_listener","restoredCtx","ɵɵrestoreView","_r3","patient_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","gotopatientpage","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","nom","prenom","age","telephone","PatientPage","constructor","firestore","modalController","router","patients","rdvs","uid","nomPatient","prenomPatient","patientUid","med","n","p","ngOnInit","getPatients","console","log","patientA","patient","_this","_asyncToGenerator","patientUidA","navigate","_this2","length","error","openFichePatientModal","_this3","modal","create","component","componentProps","patientData","onDidDismiss","then","data","present","showConsultations","_this4","ɵɵdirectiveInject","i1","AngularFirestore","i2","ModalController","i3","Router","selectors","decls","vars","consts","template","PatientPage_Template","rf","ctx","ɵɵtemplate","PatientPage_ion_row_25_Template","ɵɵproperty"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patient\\patient.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { ModalController } from '@ionic/angular';\nimport { RendezVousData, getPatientsByMedUid, getConsultationsForPatient, medecinUid } from 'src/firebaseConfig';\nimport { FichePatientModalComponent } from './fiche-patient-modal/fiche-patient-modal.component';\nimport { ConsultationsModalComponent } from './consultations-modal/consultations-modal.component';\nimport { ConsultationslisteModalComponent } from '../patients/consultationsliste-modal/consultationsliste-modal.component';\nimport { Router } from '@angular/router';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  uid?: string;\n}\n\ninterface PatientData {\n  nom: string;\n  prenom: string;\n  age?: number;\n  adresse?: string;\n  telephones?: string;\n  uid: string;\n  medecinUid?: string; \n}\n\n@Component({\n  selector: 'app-affiche-patient',\n  templateUrl: './patient.page.html',\n  styleUrls: ['./patient.page.scss'],\n})\nexport class PatientPage implements OnInit {\n  patients: PatientData[] = [];\n  rdvs: RendezVousData[] = [];\n  uid: string = medecinUid.uid;\n  nomPatient: string = ''; \n  prenomPatient: string = '';\n  patientUid: string = ''; // Ajout de la variable patientUid pour l'UID du patient\n\n  \n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController, private router: Router) { }\n\n  ngOnInit() {\n    this.getPatients();\n    console.log(patientA)\n    \n  }\n\n  async gotopatientpage(patient:PatientData){\n  patientA=patient\n  patientUidA=patient.uid\n  this.router.navigate(['/patientpage']);\n  console.log('going to patientpage')\n}\n  async getPatients() {\n    try {\n      this.patients = await getPatientsByMedUid(this.firestore, this.uid);\n      if (this.patients.length > 0) {\n        this.nomPatient = this.patients[0].nom;\n        this.prenomPatient = this.patients[0].prenom;\n      } \n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n\n  async openFichePatientModal(patient: PatientData) {\n    const modal = await this.modalController.create({\n      component: FichePatientModalComponent,\n      componentProps: {\n        patientData: patient,\n        medecinUid: this.uid // Passer l'UID du médecin ici\n      }\n    });\n\n    modal.onDidDismiss().then((data) => {\n      if (data && data.data) {\n        console.log('Données de la fiche patient à enregistrer :', data.data);\n      }\n    });\n\n\n    return await modal.present();\n  }\n\n  async showConsultations(uid :string) {\n    patientUidA=uid;\n    this.router.navigate(['/consultationliste']);\n\n  }\n\nmed=this.uid;\nn=this.nomPatient ;\np=this.prenomPatient;\n \n\n\n}\nexport let med :string ;\nexport let n :string ;\nexport let p :string ;\nexport let patientUidA: string ; // Exporter la variable patientUid\nexport let patientA:PatientData;\n\n","<ion-header>\n  <ion-toolbar>\n    <ion-button routerLink=\"/app-medecin\" fill=\"clear\" slot=\"start\">\n      Retour\n    </ion-button>\n    <ion-title>Liste des Patients</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <ion-grid>\n      <ion-row>\n        <ion-col ><strong>Option</strong></ion-col>\n        <ion-col ><strong>Nom</strong></ion-col>\n        <ion-col ><strong>Prénom</strong></ion-col>\n        <ion-col ><strong>Age</strong></ion-col>\n        <ion-col ><strong>Téléphone</strong></ion-col>\n      </ion-row>\n      <ion-row *ngFor=\"let patient of patients\">\n        <ion-col >\n          <ion-button (click)=\"gotopatientpage(patient)\" color=\"primary\"><ion-icon name=\"folder-sharp\"></ion-icon></ion-button>\n        </ion-col>\n        <ion-col >{{ patient.nom }}</ion-col>\n        <ion-col >{{ patient.prenom }}</ion-col>\n        <ion-col >{{ patient.age }}</ion-col>\n        <ion-col >{{ patient.telephone }}</ion-col>\n       \n      </ion-row>\n    </ion-grid>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}