{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ConsultationMedPage;\nimport { getConsultations, getPatientsByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nfunction ConsultationMedPage_ion_item_16_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const consultation_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", consultation_r3.date, \" \");\n  }\n}\nfunction ConsultationMedPage_ion_item_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-card\", 7)(2, \"ion-card-header\")(3, \"ion-card-title\")(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-card-content\")(7, \"ion-list\");\n    i0.ɵɵtemplate(8, ConsultationMedPage_ion_item_16_ion_item_8_Template, 2, 1, \"ion-item\", 6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"Info patient \", patient_r1.prenom, \" \", patient_r1.nom, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", patient_r1.consultations);\n  }\n}\nexport class ConsultationMedPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.consultations = [];\n    this.uid = medecinUid.uid;\n    this.patients = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('Med UID:', _this.uid);\n      yield _this.getPatients();\n    })();\n  }\n  loadConsultations(patientUid) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const consultations = yield getConsultations(_this2.firestore, medecinUid.uid, patientUid);\n        console.log('Consultations for patient UID', patientUid, ':', consultations);\n        if (consultations && consultations.length > 0) {\n          // Concaténer les consultations à la liste existante au lieu de réinitialiser\n          _this2.consultations = _this2.consultations.concat(consultations);\n          // Trier toutes les consultations après chaque ajout\n          _this2.consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n        } else {\n          console.log('No consultations found for this patient.');\n        }\n      } catch (error) {\n        console.error('Error loading consultations for patient:', error);\n      }\n    })();\n  }\n  getPatients() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const patients = yield getPatientsByMedUid(_this3.firestore, _this3.uid);\n        console.log(patients);\n        if (patients.length > 0) {\n          _this3.patients = patients.map(patient => ({\n            ...patient,\n            consultations: [] // Initialiser consultations comme un tableau vide\n          }));\n          console.log('patients', _this3.patients);\n          // Charger les consultations pour chaque patient\n          for (const patient of _this3.patients) {\n            const consultations = yield getConsultations(_this3.firestore, medecinUid.uid, patient.uid);\n            if (consultations && consultations.length > 0) {\n              patient.consultations = consultations; // Ajouter les consultations au patient\n            }\n          }\n        }\n        console.log(\"Patients trouvés :\", _this3.patients);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des patients :', error);\n      }\n    })();\n  }\n}\n_ConsultationMedPage = ConsultationMedPage;\n_ConsultationMedPage.ɵfac = function ConsultationMedPage_Factory(t) {\n  return new (t || _ConsultationMedPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_ConsultationMedPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _ConsultationMedPage,\n  selectors: [[\"app-consultation-med\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[3, \"translucent\"], [\"routerLink\", \"/patient\", \"slot\", \"start\", \"fill\", \"clear\"], [3, \"fullscreen\"], [\"placeholder\", \"Rechercher\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [4, \"ngFor\", \"ngForOf\"], [1, \"rempli\"]],\n  template: function ConsultationMedPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-button\", 1);\n      i0.ɵɵtext(3, \"retour\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-title\");\n      i0.ɵɵtext(5, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"ion-header\");\n      i0.ɵɵelement(8, \"br\")(9, \"ion-searchbar\", 3)(10, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"ion-header\", 4)(12, \"ion-toolbar\")(13, \"ion-title\", 5);\n      i0.ɵɵtext(14, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"ion-list\");\n      i0.ɵɵtemplate(16, ConsultationMedPage_ion_item_16_Template, 9, 3, \"ion-item\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.IonButton, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardTitle, i3.IonContent, i3.IonHeader, i3.IonItem, i3.IonList, i3.IonSearchbar, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.RouterLinkDelegate, i4.RouterLink],\n  styles: [\".rempli[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29uc3VsdGF0aW9uLW1lZC9jb25zdWx0YXRpb24tbWVkLnBhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uL01hY0Jvb2slMjBBaXIvRGVza3RvcC9zaGlmYWkxVlYvc3JjL2FwcC9jb25zdWx0YXRpb24tbWVkL2NvbnN1bHRhdGlvbi1tZWQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSiIsInNvdXJjZXNDb250ZW50IjpbIi5yZW1wbGl7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59IiwiLnJlbXBsaSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getConsultations","getPatientsByMedUid","medecinUid","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","consultation_r3","date","ɵɵtemplate","ConsultationMedPage_ion_item_16_ion_item_8_Template","ɵɵtextInterpolate2","patient_r1","prenom","nom","ɵɵproperty","consultations","ConsultationMedPage","constructor","firestore","uid","patients","ngOnInit","_this","_asyncToGenerator","console","log","getPatients","loadConsultations","patientUid","_this2","length","concat","sort","a","b","Date","getTime","error","_this3","map","patient","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","ConsultationMedPage_Template","rf","ctx","ɵɵelement","ConsultationMedPage_ion_item_16_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getConsultations, getPatientsByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  \n}\ninterface PatientData {\n  uid: string;\n  nom: string;\n  prenom: string;\n  age: number;\n  sexe: string;\n  groupeSanguin: string;\n  situationFamiliale: string;\n  profession: string;\n  email: string;\n  telephone: string;\n  telephone2: string;\n  numeroAssurance: string;\n  adresse: string;\n  note: string;\n  antecedentsMedicaux: string;\n  antecedentsChirurgicaux: string;\n  antecedentsFamiliaux: string;\n  autresAntecedents: string;\n  medicaments: string;\n  useruid: string;\n  consultations?: consultationData[]; // Ajoutez cette propriété pour les consultations\n}\n\n@Component({\n  selector: 'app-consultation-med',\n  templateUrl: './consultation-med.page.html',\n  styleUrls: ['./consultation-med.page.scss'],\n})\nexport class ConsultationMedPage implements OnInit {\n  consultations: consultationData[] = [];\n  uid: string = medecinUid.uid;\n  patients: PatientData[] = [];\n\n  constructor(private firestore: AngularFirestore) {}\n\n  async ngOnInit() {\n    console.log('Med UID:', this.uid);\n    await this.getPatients();\n  }\n  async loadConsultations(patientUid: string) {\n    try {\n      const consultations = await getConsultations(this.firestore, medecinUid.uid, patientUid);\n      console.log('Consultations for patient UID', patientUid, ':', consultations);\n  \n      if (consultations && consultations.length > 0) {\n        // Concaténer les consultations à la liste existante au lieu de réinitialiser\n        this.consultations = this.consultations.concat(consultations);\n        // Trier toutes les consultations après chaque ajout\n        this.consultations.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n      } else {\n        console.log('No consultations found for this patient.');\n      }\n    } catch (error) {\n      console.error('Error loading consultations for patient:', error);\n    }\n  }\n  \n  \n  async getPatients() {\n    try {\n      const patients = await getPatientsByMedUid(this.firestore, this.uid);\n      console.log(patients);\n      if (patients.length > 0) {\n        this.patients = patients.map(patient => ({\n          ...patient,\n          consultations: [] // Initialiser consultations comme un tableau vide\n        }));\n        console.log('patients', this.patients);\n  \n        // Charger les consultations pour chaque patient\n        for (const patient of this.patients) {\n          const consultations = await getConsultations(this.firestore, medecinUid.uid, patient.uid);\n          if (consultations && consultations.length > 0) {\n            patient.consultations = consultations; // Ajouter les consultations au patient\n          }\n        }\n      } \n      console.log(\"Patients trouvés :\", this.patients);\n    } catch (error) {\n      console.error('Erreur lors de la récupération des patients :', error);\n    }\n  }\n  \n  \n}\n","<ion-header [translucent]=\"true\">\n\n  <ion-toolbar>\n    <ion-button routerLink=\"/patient\" slot=\"start\" fill=\"clear\">retour</ion-button>\n    <ion-title>Consultations</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header>\n    <br>\n    <ion-searchbar placeholder=\"Rechercher\" ></ion-searchbar>\n    <br>\n  </ion-header>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Consultations</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-list>\n    <ion-item *ngFor=\"let patient of patients\">\n      <ion-card class=\"rempli\">\n        <ion-card-header>\n          <ion-card-title><b>Info patient {{ patient.prenom }} {{ patient.nom }} </b></ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n          <ion-list>\n            <ion-item *ngFor=\"let consultation of patient.consultations\">\n              {{ consultation.date }}\n            </ion-item>\n          </ion-list>\n        </ion-card-content>\n      </ion-card>     \n    </ion-item>\n  </ion-list>\n       \n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}