{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ConsultationMedPage;\nimport { getConsultations, getPatientsByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@ionic/angular\";\nfunction ConsultationMedPage_ion_item_10_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const consultation_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", consultation_r3.date, \" \");\n  }\n}\nfunction ConsultationMedPage_ion_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-card\")(2, \"ion-card-header\")(3, \"ion-card-title\")(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"ion-card-content\")(7, \"ion-list\");\n    i0.ɵɵtemplate(8, ConsultationMedPage_ion_item_10_ion_item_8_Template, 2, 1, \"ion-item\", 4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"Info patient \", patient_r1.prenom, \" \", patient_r1.nom, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.consultations);\n  }\n}\nexport class ConsultationMedPage {\n  constructor(firestore) {\n    this.firestore = firestore;\n    this.consultations = [];\n    this.uid = medecinUid.uid;\n    this.patients = [];\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('Med UID:', _this.uid);\n      yield _this.getPatients();\n    })();\n  }\n  getPatients() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const patients = yield getPatientsByMedUid(_this2.firestore, _this2.uid);\n        console.log('Patients found:', patients);\n        if (patients && patients.length > 0) {\n          _this2.patients = patients;\n          for (const patient of _this2.patients) {\n            yield getConsultations(_this2.firestore, medecinUid.uid, patient.uid);\n          }\n        } else {\n          console.log('No patients found for this medic UID.');\n        }\n      } catch (error) {\n        console.error('Error loading patients:', error);\n      }\n    })();\n  }\n}\n_ConsultationMedPage = ConsultationMedPage;\n_ConsultationMedPage.ɵfac = function ConsultationMedPage_Factory(t) {\n  return new (t || _ConsultationMedPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore));\n};\n_ConsultationMedPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _ConsultationMedPage,\n  selectors: [[\"app-consultation-med\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[3, \"translucent\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ConsultationMedPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 1)(5, \"ion-header\", 2)(6, \"ion-toolbar\")(7, \"ion-title\", 3);\n      i0.ɵɵtext(8, \"Consultations\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"ion-list\");\n      i0.ɵɵtemplate(10, ConsultationMedPage_ion_item_10_Template, 9, 3, \"ion-item\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonCardTitle, i3.IonContent, i3.IonHeader, i3.IonItem, i3.IonList, i3.IonTitle, i3.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getConsultations","getPatientsByMedUid","medecinUid","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","consultation_r3","date","ɵɵtemplate","ConsultationMedPage_ion_item_10_ion_item_8_Template","ɵɵtextInterpolate2","patient_r1","prenom","nom","ɵɵproperty","ctx_r0","consultations","ConsultationMedPage","constructor","firestore","uid","patients","ngOnInit","_this","_asyncToGenerator","console","log","getPatients","_this2","length","patient","error","ɵɵdirectiveInject","i1","AngularFirestore","selectors","decls","vars","consts","template","ConsultationMedPage_Template","rf","ctx","ConsultationMedPage_ion_item_10_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\consultation-med\\consultation-med.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getConsultations, getPatientsByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\n\ninterface consultationData {\n  date: string;\n  details?: string;\n  \n}\ninterface PatientData{\n  uid:string;\n  nom: string;\n  prenom: string;\n  age: number;\n  sexe: string;\n  groupeSanguin: string;\n  situationFamiliale: string;\n  profession: string;\n  email: string;\n  telephone: string;\n  telephone2: string;\n  numeroAssurance: string;\n  adresse: string;\n  note: string;\n  antecedentsMedicaux: string;\n  antecedentsChirurgicaux: string;\n  antecedentsFamiliaux: string;\n  autresAntecedents: string;\n  medicaments: string;\n  useruid:string;\n}\n@Component({\n  selector: 'app-consultation-med',\n  templateUrl: './consultation-med.page.html',\n  styleUrls: ['./consultation-med.page.scss'],\n})\nexport class ConsultationMedPage implements OnInit {\n  consultations: consultationData[] = [];\n  uid: string = medecinUid.uid;\n  patients: PatientData[] = [];\n\n  constructor(private firestore: AngularFirestore) {}\n\n  async ngOnInit() {\n    console.log('Med UID:', this.uid);\n    await this.getPatients();\n  }\n\n  \n\n  async getPatients() {\n    try {\n      const patients = await getPatientsByMedUid(this.firestore, this.uid);\n      console.log('Patients found:', patients);\n\n      if (patients && patients.length > 0) {\n        this.patients = patients;\n        for (const patient of this.patients) {\n\n          await getConsultations(this.firestore, medecinUid.uid,patient.uid);\n        }\n      } else {\n        console.log('No patients found for this medic UID.');\n      }\n    } catch (error) {\n      console.error('Error loading patients:', error);\n    }\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Consultations</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Consultations</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-list>\n    <ion-item *ngFor=\"let patient of patients\">\n      <ion-card>\n        <ion-card-header>\n          <ion-card-title><b>Info patient {{ patient.prenom }} {{ patient.nom }} </b></ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n      \n          \n            <ion-list>\n              <ion-item  *ngFor=\"let consultation of consultations\">\n                {{ consultation.date }}\n              </ion-item>\n            </ion-list>\n          \n\n        </ion-card-content>\n      </ion-card>     \n    </ion-item>\n  </ion-list>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}