{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _RendezvousmodalComponent, _RendezvousmodalModule;\nimport { IonicModule } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { selectedHour, selectedDate } from '../work-hours-modal/work-hours-modal.component';\nimport { selectedNom, selectedPrenom } from '../personne-modal/personne-modal.component';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { AddRendezVous, AddRendezVousForUser, getMedecinByUid, generateUniqueKey } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nexport class RendezvousmodalComponent {\n  constructor(modalController, firestore) {\n    this.modalController = modalController;\n    this.firestore = firestore;\n    this.medecin = {\n      nom: '',\n      prenom: '',\n      uid: ''\n    };\n    this.selectedTime = selectedHour;\n    this.dates = selectedDate;\n    this.patientName = selectedPrenom;\n    this.patientnom = selectedNom;\n    this.uid = inscritUid;\n    this.nommed = this.medecin.nom;\n    this.medecinuid = medecinUid; // Assignation du nom du médecin\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log(\"prenom = \", selectedNom);\n      console.log(\"time = \", selectedHour);\n      console.log(\"medecinuid =\", medecinUid);\n      console.log(\"useruid =\", inscritUid);\n      console.log(\"date selectionne =\", selectedDate);\n      try {\n        const medecinData = yield getMedecinByUid(_this.firestore, medecinUid);\n        if (medecinData && medecinData.length > 0) {\n          // Vérifiez si des données de médecin ont été récupérées et si elles ne sont pas null\n          _this.medecin = medecinData[0];\n          _this.nommed = _this.medecin.nom;\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des informations du médecin:', error);\n      }\n    })();\n  }\n  saveRendezVous() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const rendezVousData = {\n        date: selectedDate,\n        heure: selectedHour,\n        nom: selectedNom,\n        prenom: selectedPrenom,\n        useruid: inscritUid,\n        medecinNom: _this2.medecin.nom,\n        medecinPrenom: _this2.medecin.prenom,\n        medecinuid: medecinUid,\n        key: yield generateUniqueKey() // Générer une clé unique pour le rendez-vous\n      };\n      const k = rendezVousData.key;\n      AddRendezVous(_this2.firestore, medecinUid, rendezVousData).then(() => {\n        console.log('Rendez-vous enregistré avec succès.');\n        console.log('key= ', k);\n        _this2.closeModal();\n      }).catch(error => {\n        console.error('Erreur lors de l\\'enregistrement du rendez-vous :', error);\n      });\n      AddRendezVousForUser(_this2.firestore, inscritUid, rendezVousData).then(() => {\n        console.log('Rendez-vous enregistré avec succès chez le patient.');\n        _this2.closeModal();\n      }).catch(error => {\n        console.error('Erreur lors de l\\'enregistrement du rendez-vous chez le patient:', error);\n      });\n    })();\n  }\n  closeModal() {\n    this.modalController.dismiss();\n  }\n}\n_RendezvousmodalComponent = RendezvousmodalComponent;\n_RendezvousmodalComponent.ɵfac = function RendezvousmodalComponent_Factory(t) {\n  return new (t || _RendezvousmodalComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.AngularFirestore));\n};\n_RendezvousmodalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _RendezvousmodalComponent,\n  selectors: [[\"app-rendezvousmodal\"]],\n  inputs: {\n    medecin: \"medecin\"\n  },\n  decls: 20,\n  vars: 4,\n  consts: [[\"slot\", \"end\"], [3, \"click\"], [\"name\", \"close\"], [1, \"modal-buttons\"], [\"expand\", \"block\", \"color\", \"primary\", 3, \"click\"]],\n  template: function RendezvousmodalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Ajouter un rendez-vous\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-buttons\", 0)(5, \"ion-button\", 1);\n      i0.ɵɵlistener(\"click\", function RendezvousmodalComponent_Template_ion_button_click_5_listener() {\n        return ctx.closeModal();\n      });\n      i0.ɵɵelement(6, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"ion-content\")(8, \"ion-content\")(9, \"p\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"ion-button\", 4);\n      i0.ɵɵlistener(\"click\", function RendezvousmodalComponent_Template_ion_button_click_18_listener() {\n        return ctx.saveRendezVous();\n      });\n      i0.ɵɵtext(19, \"Enregistrer\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate1(\"Heure s\\u00E9lectionn\\u00E9e : \", ctx.selectedTime, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"prenom du patient : \", ctx.patientName, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"nom du patient : \", ctx.patientnom, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"date de rdv : \", ctx.dates, \"\");\n    }\n  },\n  dependencies: [i1.IonButton, i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonTitle, i1.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport class RendezvousmodalModule {}\n_RendezvousmodalModule = RendezvousmodalModule;\n_RendezvousmodalModule.ɵfac = function RendezvousmodalModule_Factory(t) {\n  return new (t || _RendezvousmodalModule)();\n};\n_RendezvousmodalModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: _RendezvousmodalModule\n});\n_RendezvousmodalModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [AngularFirestore],\n  imports: [CommonModule, FormsModule, IonicModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(RendezvousmodalModule, {\n    declarations: [RendezvousmodalComponent],\n    imports: [CommonModule, FormsModule, IonicModule]\n  });\n})();","map":{"version":3,"names":["IonicModule","AngularFirestore","CommonModule","FormsModule","selectedHour","selectedDate","selectedNom","selectedPrenom","medecinUid","inscritUid","AddRendezVous","AddRendezVousForUser","getMedecinByUid","generateUniqueKey","RendezvousmodalComponent","constructor","modalController","firestore","medecin","nom","prenom","uid","selectedTime","dates","patientName","patientnom","nommed","medecinuid","ngOnInit","_this","_asyncToGenerator","console","log","medecinData","length","error","saveRendezVous","_this2","rendezVousData","date","heure","useruid","medecinNom","medecinPrenom","key","k","then","closeModal","catch","dismiss","i0","ɵɵdirectiveInject","i1","ModalController","i2","selectors","inputs","decls","vars","consts","template","RendezvousmodalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RendezvousmodalComponent_Template_ion_button_click_5_listener","ɵɵelement","RendezvousmodalComponent_Template_ion_button_click_18_listener","ɵɵadvance","ɵɵtextInterpolate1","RendezvousmodalModule","imports","declarations"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\affiche-medecin\\rendezvousmodal\\rendezvousmodal.component.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\affiche-medecin\\rendezvousmodal\\rendezvousmodal.component.html"],"sourcesContent":["import { Component, Input, NgModule } from '@angular/core';\nimport { IonicModule, ModalController } from '@ionic/angular';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { selectedHour, selectedDate } from '../work-hours-modal/work-hours-modal.component';\nimport { selectedNom, selectedPrenom } from '../personne-modal/personne-modal.component';\nimport { medecinUid } from 'src/app/recherche-medecin/recherche-medecin.page';\nimport { inscritUid } from 'src/app/login/login.page';\nimport { AddRendezVous, AddRendezVousForUser, getMedecinByUid,generateUniqueKey } from 'src/firebaseConfig';\n\ninterface MedecinData {\n  nom: string;\n  prenom: string;\n  uid: string;\n}\n\ninterface RendezVousData {\n  date: string;\n  heure: string;\n  nom: string;\n  prenom: string;\n  useruid: string;\n  medecinNom: string;\n  medecinPrenom: string;\n  medecinuid:string;\n  key: string; // Ajout de la clé unique pour le rendez-vous\n}\n\n@Component({\n  selector: 'app-rendezvousmodal',\n  templateUrl: './rendezvousmodal.component.html',\n  styleUrls: ['./rendezvousmodal.component.scss'],\n})\nexport class RendezvousmodalComponent {\n  @Input() medecin: MedecinData = { nom: '', prenom: '', uid: '' };\n  selectedTime: string = selectedHour;\n  dates: string = selectedDate;\n  patientName = selectedPrenom;\n  patientnom = selectedNom;\n  uid = inscritUid;\n  nommed = this.medecin.nom; \n  medecinuid=medecinUid;// Assignation du nom du médecin\n  \n  constructor(private modalController: ModalController, private firestore: AngularFirestore) {}\n\n  async ngOnInit() {\n    console.log(\"prenom = \", selectedNom);\n    console.log(\"time = \", selectedHour);\n    console.log(\"medecinuid =\", medecinUid);\n    console.log(\"useruid =\", inscritUid);\n    console.log(\"date selectionne =\", selectedDate);\n\n    try {\n      const medecinData: MedecinData[] | null = await getMedecinByUid(this.firestore, medecinUid);\n      if (medecinData && medecinData.length > 0) { // Vérifiez si des données de médecin ont été récupérées et si elles ne sont pas null\n        this.medecin = medecinData[0];\n        this.nommed = this.medecin.nom;\n      }\n    } catch (error) {\n      console.error('Erreur lors de la récupération des informations du médecin:', error);\n    }\n  }\n\n  async saveRendezVous() {\n    \n    const rendezVousData: RendezVousData = {\n      date: selectedDate,\n      heure: selectedHour,\n      nom: selectedNom,\n      prenom: selectedPrenom,\n      useruid: inscritUid,\n      medecinNom: this.medecin.nom,\n      medecinPrenom: this.medecin.prenom,\n      medecinuid : medecinUid ,\n      key: await generateUniqueKey(), // Générer une clé unique pour le rendez-vous\n    };\n    const k=rendezVousData.key;\n    AddRendezVous(this.firestore, medecinUid, rendezVousData)\n      .then(() => {\n        console.log('Rendez-vous enregistré avec succès.');\n        console.log('key= ',k);\n        this.closeModal();\n      })\n      .catch((error) => {\n        console.error('Erreur lors de l\\'enregistrement du rendez-vous :', error);\n    \n      });\n\n    AddRendezVousForUser(this.firestore, inscritUid, rendezVousData)\n      .then(() => {\n        console.log('Rendez-vous enregistré avec succès chez le patient.');\n        \n        this.closeModal();\n      })\n      .catch((error) => {\n        console.error('Erreur lors de l\\'enregistrement du rendez-vous chez le patient:', error);\n      });\n  }\n  \n  closeModal() {\n    this.modalController.dismiss();\n  }\n}\n\n@NgModule({\n  declarations: [RendezvousmodalComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [AngularFirestore],\n})\nexport class RendezvousmodalModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Ajouter un rendez-vous</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-content>\n    <!-- Affichage de l'heure sélectionnée -->\n    <p>Heure sélectionnée : {{ selectedTime }}</p>\n    <p>prenom du patient : {{  patientName }}</p>\n  \n    <!-- Affichage du nom du patient -->\n    <p>nom du patient : {{ patientnom }}</p>\n    <p>date de rdv  : {{ dates }}</p>\n  \n    <!-- Affichage de l'UID du patient -->\n   <!-- <p>UID du patient : {{ uidPatient }}</p> -->\n  </ion-content>\n\n  <div class=\"modal-buttons\">\n    <ion-button expand=\"block\" color=\"primary\" (click)=\"saveRendezVous()\">Enregistrer</ion-button>\n  </div>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}