{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { CalendarView } from 'angular-calendar';\nimport { deleteRendezVous, getRdvByMedUid } from 'src/firebaseConfig';\nimport { medecinUid } from 'src/firebaseConfig';\nimport { ExcuseModalComponent, selectedExcuse } from './excusemodal/excusemodal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"angular-calendar\";\nfunction CalenderMedecinPage_mwl_calendar_week_view_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mwl-calendar-week-view\", 28);\n    i0.ɵɵlistener(\"dayHeaderClicked\", function CalenderMedecinPage_mwl_calendar_week_view_40_Template_mwl_calendar_week_view_dayHeaderClicked_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.changeDay($event.day.date));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"viewDate\", ctx_r0.viewDate)(\"events\", ctx_r0.events);\n  }\n}\nfunction CalenderMedecinPage_mwl_calendar_day_view_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mwl-calendar-day-view\", 29);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"viewDate\", ctx_r1.viewDate)(\"events\", ctx_r1.events);\n  }\n}\nfunction CalenderMedecinPage_ion_item_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-button\", 30);\n    i0.ɵɵlistener(\"click\", function CalenderMedecinPage_ion_item_43_Template_ion_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const rendezVousItem_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deleteRendezVouscalendar(rendezVousItem_r5));\n    });\n    i0.ɵɵtext(4, \"Supprimer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const rendezVousItem_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\"\", rendezVousItem_r5.date, \" - \", rendezVousItem_r5.heure, \" - \", rendezVousItem_r5.nom, \" \", rendezVousItem_r5.prenom, \" \");\n  }\n}\nexport let CalenderMedecinPage = /*#__PURE__*/(() => {\n  var _CalenderMedecinPage;\n  class CalenderMedecinPage {\n    constructor(firestore, modalController) {\n      this.firestore = firestore;\n      this.modalController = modalController;\n      this.viewDate = new Date();\n      this.view = CalendarView.Month;\n      this.CalendarView = CalendarView;\n      this.uid = medecinUid.uid;\n      this.events = [{\n        start: new Date(),\n        title: 'An event'\n      }];\n      this.activeDayIsOpen = false;\n      this.rdvs = [];\n      this.medecinuid = this.uid;\n      this.loadEvents();\n      console.log('meduid', medecinUid.uid);\n    }\n    ngOnInit() {}\n    loadEvents() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const rdvs = yield getRdvByMedUid(_this.firestore, _this.uid);\n          if (rdvs && rdvs.length > 0) {\n            _this.rdvs = rdvs;\n            _this.events = rdvs.map(rdv => ({\n              start: _this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[0]),\n              end: _this.convertDateTimeToDate(rdv.date, rdv.heure.split(' - ')[1]),\n              title: `Rendez-vous de ${rdv.prenom} ${rdv.nom} à ${rdv.heure} chez ${rdv.medecinPrenom} ${rdv.medecinNom}`\n            }));\n          }\n        } catch (error) {\n          console.error('Erreur lors du chargement des rendez-vous:', error);\n        }\n      })();\n    }\n    dayClicked({\n      date,\n      events\n    }) {\n      if (isSameMonth(date, this.viewDate)) {\n        if (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true || events.length === 0) {\n          this.activeDayIsOpen = false;\n        } else {\n          this.activeDayIsOpen = true;\n          this.viewDate = date;\n        }\n      }\n    }\n    deleteRendezVouscalendar(rendezVous) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        try {\n          // Demander une excuse via la modal\n          const excuse = yield _this2.presentExcuseModal();\n          // Vérifier si une excuse a été fournie\n          if (selectedExcuse !== undefined) {\n            // Appeler deleteRendezVous avec l'excuse\n            yield deleteRendezVous(_this2.firestore, medecinUid.uid, rendezVous, selectedExcuse);\n            console.log('Rendez-vous supprimé avec succès.');\n            yield _this2.loadEvents();\n          } else {\n            console.log('Excuse non fournie. Annulation de la suppression du rendez-vous.');\n          }\n        } catch (error) {\n          console.error('Erreur lors de la suppression du rendez-vous:', error);\n        }\n      })();\n    }\n    presentExcuseModal() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this3.modalController.create({\n          component: ExcuseModalComponent\n        });\n        yield modal.present();\n        return new Promise(resolve => {\n          modal.onDidDismiss().then(({\n            data\n          }) => {\n            resolve(data === null || data === void 0 ? void 0 : data.excuse);\n          });\n        });\n      })();\n    }\n    changeDay(date) {\n      this.viewDate = date;\n      this.view = CalendarView.Day;\n    }\n    closeOpenMonthViewDay() {\n      this.activeDayIsOpen = false;\n    }\n    setView(view) {\n      this.view = view;\n    }\n    convertDateTimeToDate(dateString, timeString) {\n      const dateParts = dateString.split('-').map(part => parseInt(part, 10));\n      const timeParts = timeString.split('H').map(part => parseInt(part, 10));\n      return new Date(dateParts[0], dateParts[1] - 1, dateParts[2], timeParts[0], timeParts[1]);\n    }\n  }\n  _CalenderMedecinPage = CalenderMedecinPage;\n  _CalenderMedecinPage.ɵfac = function CalenderMedecinPage_Factory(t) {\n    return new (t || _CalenderMedecinPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.ModalController));\n  };\n  _CalenderMedecinPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _CalenderMedecinPage,\n    selectors: [[\"app-calender-medecin\"]],\n    decls: 57,\n    vars: 27,\n    consts: [[3, \"translucent\"], [\"href\", \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [\"href\", \"https://unpkg.com/@fortawesome/fontawesome-free@6.2.1/css/all.css\", \"rel\", \"stylesheet\"], [\"href\", \"https://unpkg.com/angular-calendar@0.31.0/css/angular-calendar.css\", \"rel\", \"stylesheet\"], [\"href\", \"https://unpkg.com/flatpickr@4.6.13/dist/flatpickr.css\", \"rel\", \"stylesheet\"], [3, \"fullscreen\"], [\"collapse\", \"condense\"], [\"size\", \"large\"], [1, \"row\", \"text-center\"], [1, \"col-md-4\"], [1, \"btn-group\"], [\"mwlCalendarPreviousView\", \"\", 1, \"btn\", \"btn-primary\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [\"mwlCalendarToday\", \"\", 1, \"btn\", \"btn-outline-secondary\", 3, \"viewDate\", \"viewDateChange\"], [\"mwlCalendarNextView\", \"\", 1, \"btn\", \"btn-primary\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"ngSwitch\"], [3, \"viewDate\", \"events\", \"activeDayIsOpen\", \"dayClicked\"], [3, \"viewDate\", \"events\", \"dayHeaderClicked\", 4, \"ngSwitchCase\"], [3, \"viewDate\", \"events\", 4, \"ngSwitchCase\"], [4, \"ngFor\", \"ngForOf\"], [\"collapse\", \"fade\"], [\"slot\", \"bottom\"], [\"routerLink\", \"/app-medecin\"], [\"name\", \"home-outline\"], [\"routerLink\", \"/calender-medecin\", 3, \"routerDirection\"], [\"name\", \"calendar-outline\"], [\"routerLink\", \"/parametre-med\", 3, \"routerDirection\"], [\"name\", \"settings-outline\"], [3, \"viewDate\", \"events\", \"dayHeaderClicked\"], [3, \"viewDate\", \"events\"], [\"color\", \"danger\", 3, \"click\"]],\n    template: function CalenderMedecinPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelement(1, \"link\", 1)(2, \"link\", 2)(3, \"link\", 3)(4, \"link\", 4);\n        i0.ɵɵelementStart(5, \"ion-toolbar\")(6, \"ion-title\");\n        i0.ɵɵtext(7, \"Calendrier m\\u00E9dical\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"ion-content\", 5)(9, \"ion-header\", 6)(10, \"ion-toolbar\")(11, \"ion-title\", 7);\n        i0.ɵɵtext(12, \"Calendrier m\\u00E9dical\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(13, \"br\")(14, \"br\")(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"div\", 9)(18, \"div\", 10)(19, \"div\", 11);\n        i0.ɵɵlistener(\"viewDateChange\", function CalenderMedecinPage_Template_div_viewDateChange_19_listener($event) {\n          return ctx.viewDate = $event;\n        })(\"viewDateChange\", function CalenderMedecinPage_Template_div_viewDateChange_19_listener() {\n          return ctx.closeOpenMonthViewDay();\n        });\n        i0.ɵɵtext(20, \" Pr\\u00E9c\\u00E9dent \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 12);\n        i0.ɵɵlistener(\"viewDateChange\", function CalenderMedecinPage_Template_div_viewDateChange_21_listener($event) {\n          return ctx.viewDate = $event;\n        });\n        i0.ɵɵtext(22, \" Aujourd'hui \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 13);\n        i0.ɵɵlistener(\"viewDateChange\", function CalenderMedecinPage_Template_div_viewDateChange_23_listener($event) {\n          return ctx.viewDate = $event;\n        })(\"viewDateChange\", function CalenderMedecinPage_Template_div_viewDateChange_23_listener() {\n          return ctx.closeOpenMonthViewDay();\n        });\n        i0.ɵɵtext(24, \" Suivant \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"h3\");\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"calendarDate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"div\", 14);\n        i0.ɵɵlistener(\"click\", function CalenderMedecinPage_Template_div_click_31_listener() {\n          return ctx.setView(ctx.CalendarView.Month);\n        });\n        i0.ɵɵtext(32, \" Mois \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 14);\n        i0.ɵɵlistener(\"click\", function CalenderMedecinPage_Template_div_click_33_listener() {\n          return ctx.setView(ctx.CalendarView.Week);\n        });\n        i0.ɵɵtext(34, \" Semaine \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 14);\n        i0.ɵɵlistener(\"click\", function CalenderMedecinPage_Template_div_click_35_listener() {\n          return ctx.setView(ctx.CalendarView.Day);\n        });\n        i0.ɵɵtext(36, \" Jour \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementStart(38, \"div\", 15)(39, \"mwl-calendar-month-view\", 16);\n        i0.ɵɵlistener(\"dayClicked\", function CalenderMedecinPage_Template_mwl_calendar_month_view_dayClicked_39_listener($event) {\n          return ctx.dayClicked($event.day);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, CalenderMedecinPage_mwl_calendar_week_view_40_Template, 1, 2, \"mwl-calendar-week-view\", 17)(41, CalenderMedecinPage_mwl_calendar_day_view_41_Template, 1, 2, \"mwl-calendar-day-view\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"ion-list\");\n        i0.ɵɵtemplate(43, CalenderMedecinPage_ion_item_43_Template, 5, 4, \"ion-item\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"ion-footer\", 20)(45, \"ion-toolbar\")(46, \"ion-tabs\")(47, \"ion-tab-bar\", 21)(48, \"ion-tab-button\", 22);\n        i0.ɵɵelement(49, \"ion-icon\", 23);\n        i0.ɵɵtext(50, \" Accueil \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"ion-tab-button\", 24);\n        i0.ɵɵelement(52, \"ion-icon\", 25);\n        i0.ɵɵtext(53, \" Calendrier \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"ion-tab-button\", 26);\n        i0.ɵɵelement(55, \"ion-icon\", 27);\n        i0.ɵɵtext(56, \" R\\u00E9glages \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"viewDate\", ctx.viewDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(28, 23, ctx.viewDate, ctx.view + \"ViewTitle\", \"en\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Month);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Week);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"active\", ctx.view === ctx.CalendarView.Day);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.view);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"viewDate\", ctx.viewDate)(\"events\", ctx.events)(\"activeDayIsOpen\", ctx.activeDayIsOpen);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngSwitchCase\", \"week\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngSwitchCase\", \"day\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rdvs);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"routerDirection\", \"root\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerDirection\", \"root\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgSwitch, i3.NgSwitchCase, i2.IonButton, i2.IonContent, i2.IonFooter, i2.IonHeader, i2.IonIcon, i2.IonItem, i2.IonLabel, i2.IonList, i2.IonTabBar, i2.IonTabButton, i2.IonTitle, i2.IonToolbar, i2.IonTabs, i2.RouterLinkDelegate, i4.RouterLink, i5.ɵCalendarPreviousViewDirective, i5.ɵCalendarNextViewDirective, i5.ɵCalendarTodayDirective, i5.CalendarMonthViewComponent, i5.CalendarWeekViewComponent, i5.CalendarDayViewComponent, i5.ɵCalendarDatePipe]\n  });\n  return CalenderMedecinPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}