{"ast":null,"code":"var _ModifComponent;\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./modif.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./modif.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component, Input, NgModule } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormsModule } from '@angular/forms';\nimport { ModalController, IonicModule } from '@ionic/angular';\nlet ModifComponent = (_ModifComponent = class ModifComponent {\n  /*\n  us=this.patient?.uid\n    newConsultation: { date: Date, details: string } = { date: new Date(), details: '' };\n    consultations: { date: Date, details: string }[] = [];*/\n  constructor(firestore, modalController) {\n    this.firestore = firestore;\n    this.modalController = modalController;\n  }\n  ngOnInit() {\n    // Chargez les consultations existantes du patient ici\n    // this.loadConsultations();\n  }\n  /*async loadConsultations() {\n    try {\n      const consultationsSnapshot = await this.firestore\n        .collection('medecin')\n        .doc(this.medecinUid)\n        .collection('patients')\n        .doc(this.patient.uid)\n        .collection('consultations')\n        .get()\n        .toPromise();\n  \n      if (consultationsSnapshot) {\n        this.consultations = consultationsSnapshot.docs.map((doc) => doc.data() as { date: Date, details: string });\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }*/\n  /* async addConsultation() {\n     try {\n       // Ajoutez la nouvelle consultation à Firestore\n       await this.firestore\n             .collection('medecin')\n         .doc(this.patientData.medecinuid)\n         .collection('patients')\n         .doc(this.patientData.useruid)\n         .collection('consultations')\n         .add(this.newConsultation);\n           // Ajoutez également la nouvelle consultation à la liste locale des consultations\n       this.consultations.push({ ...this.newConsultation });\n           // Réinitialisez les champs de la nouvelle consultation\n       this.newConsultation = { date: new Date(), details: '' };\n           console.log('Nouvelle consultation ajoutée avec succès.');\n     } catch (error) {\n       console.error('Erreur lors de l\\'ajout de la nouvelle consultation :', error);\n     }\n   }*/\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n}, _ModifComponent.ctorParameters = () => [{\n  type: AngularFirestore\n}, {\n  type: ModalController\n}], _ModifComponent.propDecorators = {\n  patient: [{\n    type: Input\n  }],\n  medecinUid: [{\n    type: Input\n  }]\n}, _ModifComponent);\nModifComponent = __decorate([Component({\n  selector: 'app-modif',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ModifComponent);\nexport { ModifComponent };\nlet ModifModule = class ModifModule {};\nModifModule = __decorate([NgModule({\n  declarations: [ModifComponent],\n  imports: [CommonModule, FormsModule, IonicModule],\n  providers: [AngularFirestore]\n})], ModifModule);\nexport { ModifModule };","map":{"version":3,"names":["CommonModule","Component","Input","NgModule","AngularFirestore","FormsModule","ModalController","IonicModule","ModifComponent","_ModifComponent","constructor","firestore","modalController","ngOnInit","closeModal","dismiss","__decorate","selector","template","__NG_CLI_RESOURCE__0","ModifModule","declarations","imports","providers"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\patientpage\\modif\\modif.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, NgModule, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { FormsModule } from '@angular/forms';\nimport { ModalController, IonicModule } from '@ionic/angular';\nimport { PatientData } from 'src/firebaseConfig';\n\n@Component({\n  selector: 'app-modif',\n  templateUrl: './modif.component.html',\n  styleUrls: ['./modif.component.scss'],\n})\nexport class ModifComponent  implements OnInit {\n\n  @Input() patient: PatientData | undefined; // Input pour recevoir les données du patient\n  @Input() medecinUid: string | undefined // Passer l'UID du médecin ici\n/*\nus=this.patient?.uid\n  newConsultation: { date: Date, details: string } = { date: new Date(), details: '' };\n  consultations: { date: Date, details: string }[] = [];*/\n\n  constructor(private firestore: AngularFirestore, private modalController: ModalController) {}\n\n  ngOnInit() {\n    // Chargez les consultations existantes du patient ici\n   // this.loadConsultations();\n  }\n\n  /*async loadConsultations() {\n    try {\n      const consultationsSnapshot = await this.firestore\n        .collection('medecin')\n        .doc(this.medecinUid)\n        .collection('patients')\n        .doc(this.patient.uid)\n        .collection('consultations')\n        .get()\n        .toPromise();\n  \n      if (consultationsSnapshot) {\n        this.consultations = consultationsSnapshot.docs.map((doc) => doc.data() as { date: Date, details: string });\n      } else {\n        console.log('Aucune consultation trouvée pour ce patient.');\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement des consultations du patient :', error);\n    }\n  }*/\n  \n /* async addConsultation() {\n    try {\n      // Ajoutez la nouvelle consultation à Firestore\n      await this.firestore\n\n        .collection('medecin')\n        .doc(this.patientData.medecinuid)\n        .collection('patients')\n        .doc(this.patientData.useruid)\n        .collection('consultations')\n        .add(this.newConsultation);\n\n      // Ajoutez également la nouvelle consultation à la liste locale des consultations\n      this.consultations.push({ ...this.newConsultation });\n\n      // Réinitialisez les champs de la nouvelle consultation\n      this.newConsultation = { date: new Date(), details: '' };\n\n      console.log('Nouvelle consultation ajoutée avec succès.');\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout de la nouvelle consultation :', error);\n    }\n  }*/\n\n  closeModal() {\n    this.modalController.dismiss(); // Fermer le modal\n  }\n  \n}\n@NgModule({\n  declarations: [ModifComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [AngularFirestore],\n})\nexport class ModifModule {}\n\n"],"mappings":";;;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAgB,eAAe;AAClE,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,eAAe,EAAEC,WAAW,QAAQ,gBAAgB;AAQtD,IAAMC,cAAc,IAAAC,eAAA,GAApB,MAAMD,cAAc;EAI3B;;;;EAKEE,YAAoBC,SAA2B,EAAUC,eAAgC;IAArE,KAAAD,SAAS,GAATA,SAAS;IAA4B,KAAAC,eAAe,GAAfA,eAAe;EAAoB;EAE5FC,QAAQA,CAAA;IACN;IACD;EAAA;EAGD;;;;;;;;;;;;;;;;;;;;EAqBD;;;;;;;;;;;;;;;;;;;EAwBCC,UAAUA,CAAA;IACR,IAAI,CAACF,eAAe,CAACG,OAAO,EAAE,CAAC,CAAC;EAClC;;;;;;;UA7DCb;EAAK;;UACLA;EAAK;;AAHKM,cAAc,GAAAQ,UAAA,EAL1Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,WAAW;EACrBC,QAAA,EAAAC,oBAAqC;;CAEtC,CAAC,C,EACWX,cAAc,CAiE1B;;AAUM,IAAMY,WAAW,GAAjB,MAAMA,WAAW,GAAG;AAAdA,WAAW,GAAAJ,UAAA,EATvBb,QAAQ,CAAC;EACRkB,YAAY,EAAE,CAACb,cAAc,CAAC;EAC9Bc,OAAO,EAAE,CACPtB,YAAY,EACZK,WAAW,EACXE,WAAW,CACZ;EACDgB,SAAS,EAAE,CAACnB,gBAAgB;CAC7B,CAAC,C,EACWgB,WAAW,CAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}