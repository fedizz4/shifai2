{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _DocumentPage;\nimport { finalize } from 'rxjs/operators';\nimport { inscritUid } from '../login/login.page';\nimport { getDocumentsforpatient, getInscritByUid, medecinUid } from 'src/firebaseConfig';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/fire/compat/storage\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nfunction DocumentPage_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function DocumentPage_div_25_Template_ion_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"ion-button\", 12);\n    i0.ɵɵlistener(\"click\", function DocumentPage_div_25_Template_ion_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.envoyer());\n    });\n    i0.ɵɵelement(3, \"ion-icon\", 13);\n    i0.ɵɵtext(4, \" \\u00A0\\u00A0Envoyer \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"img\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.description);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r0.selectedFile, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction DocumentPage_ion_item_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelement(1, \"img\", 15);\n    i0.ɵɵelementStart(2, \"ion-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 16);\n    i0.ɵɵtext(5, \" Voir d\\u00E9tail..\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const document_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", document_r5.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(document_r5.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", document_r5.url, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class DocumentPage {\n  constructor(firestore, storage, toastController, loadingController) {\n    this.firestore = firestore;\n    this.storage = storage;\n    this.toastController = toastController;\n    this.loadingController = loadingController;\n    this.documents = [];\n    this.documentDescription = '';\n    this.selectedFile = null;\n    this.searchDescription = '';\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.getDocuments();\n      const patient = yield getInscritByUid(_this.firestore, inscritUid);\n      if (patient) {\n        _this.patient = patient;\n      }\n    })();\n  }\n  getDocuments() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const documents = yield getDocumentsforpatient(_this2.firestore, inscritUid);\n      if (documents) {\n        _this2.documents = documents;\n      }\n    })();\n  }\n  searchDocumentsByDescription(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (!event || !event.target || !event.target.value) {\n        console.log('Veuillez entrer une description.');\n        return;\n      }\n      const description = event.target.value;\n      try {\n        // Filtrer les documents pour la description spécifiée\n        const filteredDocuments = _this3.documents.filter(document => document.description === description);\n        if (filteredDocuments.length > 0) {\n          console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n          _this3.documents = filteredDocuments;\n        } else {\n          console.log('Aucun document trouvé avec la description', description);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la recherche des documents pour la description :', error);\n      }\n    })();\n  }\n  search(event) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const searchTerm = event.target.value.toLowerCase().trim();\n      if (!searchTerm) {\n        // Si la barre de recherche est vide, réinitialiser la liste des documents\n        _this4.getDocuments();\n        return;\n      }\n      // Filtrer les documents dont la description commence par le terme de recherche\n      _this4.documents = _this4.documents.filter(documents => documents.description.toLowerCase().startsWith(searchTerm));\n    })();\n  }\n  onFileSelected(event) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const file = event.target.files[0];\n      _this5.selectedFile = file;\n      if (file instanceof File) {\n        try {\n          // Générer un ID unique pour le fichier\n          const fileId = Math.random().toString(36).substring(2);\n          const filePath = `documents/${fileId}_${file.name}`;\n          // Uploader le fichier dans Firebase Storage\n          const fileRef = _this5.storage.ref(filePath);\n          const uploadTask = _this5.storage.upload(filePath, file);\n          // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n          uploadTask.snapshotChanges().pipe(finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n            const fileUrl = yield fileRef.getDownloadURL().toPromise();\n            // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n            console.log('Lien permanent du fichier :', fileUrl);\n            // Enregistrer la description dans une variable\n            const description = _this5.description;\n            // Vérifier si la description est fournie\n            if (description) {\n              // Ajouter le document avec le lien permanent dans Firestore\n              const docRef = _this5.firestore.collection('documents').doc(fileId);\n              yield docRef.set({\n                medecinUid: medecinUid.uid,\n                patientUid: inscritUid,\n                url: fileUrl,\n                description: description\n              });\n              _this5.getDocuments();\n              console.log('Document ajouté avec succès.');\n            } else {\n              console.error('La description est obligatoire pour télécharger le fichier.');\n            }\n          }))).subscribe();\n        } catch (error) {\n          console.error('Erreur lors de l\\'ajout du document :', error);\n        }\n      }\n    })();\n  }\n  envoyer() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.selectedFile) {\n        console.error('Aucun fichier sélectionné.');\n        return;\n      }\n      // Vérifier si la description est vide\n      if (!_this6.description) {\n        const toast = yield _this6.toastController.create({\n          message: 'La description est obligatoire.',\n          duration: 1500,\n          position: 'top',\n          color: 'danger'\n        });\n        yield toast.present();\n        return;\n      }\n      // Vérifier si le patient est défini et a un useruid valide\n      if (!_this6.patient || !_this6.patient.uid) {\n        console.error('Patient non défini ou useruid non valide.');\n        return;\n      }\n      if (!_this6.documentDescription) {\n        console.error('description non fournie');\n        return;\n      }\n      // Générer un ID unique pour le fichier\n      const fileId = _this6.firestore.createId();\n      // Chemin de stockage dans Firebase Storage\n      const filePath = `documents/${fileId}`;\n      try {\n        // Télécharger le fichier vers Firebase Storage\n        const fileRef = _this6.storage.ref(filePath);\n        const uploadTask = _this6.storage.upload(filePath, _this6.selectedFile);\n        // Attendre la fin du téléchargement\n        yield uploadTask.then();\n        // Récupérer l'URL du fichier téléchargé\n        const fileUrl = yield fileRef.getDownloadURL().toPromise();\n        // Vérifier que fileUrl est défini\n        if (!fileUrl) {\n          console.error('Lien permanent du fichier non disponible.');\n          return;\n        }\n        // Enregistrer les métadonnées dans Firestore\n        yield _this6.firestore.collection('documents').doc(fileId).set({\n          useruid: _this6.patient.uid,\n          url: fileUrl,\n          description: _this6.description\n          // Ajoutez d'autres champs si nécessaire\n        });\n        console.log('Fichier téléchargé et enregistré avec succès.');\n        const docu = {\n          url: fileUrl,\n          description: _this6.description,\n          med: medecinUid.uid\n        };\n        const medref = yield _this6.firestore.collection('documents').add(docu);\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du fichier :', error);\n      }\n    })();\n  }\n}\n_DocumentPage = DocumentPage;\n_DocumentPage.ɵfac = function DocumentPage_Factory(t) {\n  return new (t || _DocumentPage)(i0.ɵɵdirectiveInject(i1.AngularFirestore), i0.ɵɵdirectiveInject(i2.AngularFireStorage), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i3.LoadingController));\n};\n_DocumentPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _DocumentPage,\n  selectors: [[\"app-document\"]],\n  decls: 35,\n  vars: 5,\n  consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"routerLink\", \"/tabs/tab1\", \"fill\", \"clear\"], [3, \"fullscreen\"], [\"placeholder\", \"Rechercher\"], [1, \"upload-document\"], [\"type\", \"file\", \"id\", \"fileInput\", \"name\", \"fileInput\", \"accept\", \"*/*\", 3, \"change\"], [4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"entrer une description a rechercher\", \"color\", \"primary\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Enter document description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"ion-text-end\", 3, \"click\"], [\"name\", \"send-outline\"], [\"alt\", \"Selected Image\", 3, \"src\"], [\"width\", \"60\", \"height\", \"60\", 3, \"src\"], [\"float\", \"right\", \"target\", \"_blank\", 3, \"href\"]],\n  template: function DocumentPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n      i0.ɵɵtext(4, \"Retour\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-title\");\n      i0.ɵɵtext(6, \"Documents\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"ion-content\", 3)(8, \"ion-card\")(9, \"ion-card-content\")(10, \"ion-card-header\");\n      i0.ɵɵelement(11, \"br\")(12, \"ion-searchbar\", 4)(13, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-card\", 5)(15, \"ion-card-content\");\n      i0.ɵɵelement(16, \"br\")(17, \"br\")(18, \"br\")(19, \"br\")(20, \"br\")(21, \"br\")(22, \"br\")(23, \"br\");\n      i0.ɵɵelementStart(24, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function DocumentPage_Template_input_change_24_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(25, DocumentPage_div_25_Template, 6, 2, \"div\", 7);\n      i0.ɵɵelementStart(26, \"ion-card\")(27, \"div\")(28, \"ion-list\")(29, \"ion-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function DocumentPage_Template_ion_input_ngModelChange_29_listener($event) {\n        return ctx.searchDescription = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"ion-button\", 9);\n      i0.ɵɵlistener(\"click\", function DocumentPage_Template_ion_button_click_30_listener() {\n        return ctx.searchDocumentsByDescription(ctx.searchDescription);\n      });\n      i0.ɵɵtext(31, \"Rechercher\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, DocumentPage_ion_item_32_Template, 6, 3, \"ion-item\", 10);\n      i0.ɵɵelement(33, \"br\")(34, \"br\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.searchDescription);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.documents);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel, i3.IonButton, i3.IonButtons, i3.IonCard, i3.IonCardContent, i3.IonCardHeader, i3.IonContent, i3.IonHeader, i3.IonIcon, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonSearchbar, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.RouterLinkDelegate, i6.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["finalize","inscritUid","getDocumentsforpatient","getInscritByUid","medecinUid","i0","ɵɵelementStart","ɵɵlistener","DocumentPage_div_25_Template_ion_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","description","ɵɵelementEnd","DocumentPage_div_25_Template_ion_button_click_2_listener","ctx_r4","envoyer","ɵɵelement","ɵɵtext","ɵɵadvance","ɵɵproperty","ctx_r0","selectedFile","ɵɵsanitizeUrl","document_r5","url","ɵɵtextInterpolate","DocumentPage","constructor","firestore","storage","toastController","loadingController","documents","documentDescription","searchDescription","ngOnInit","_this","_asyncToGenerator","getDocuments","patient","_this2","searchDocumentsByDescription","event","_this3","target","value","console","log","filteredDocuments","filter","document","length","error","search","_this4","searchTerm","toLowerCase","trim","startsWith","onFileSelected","_this5","file","files","File","fileId","Math","random","toString","substring","filePath","name","fileRef","ref","uploadTask","upload","snapshotChanges","pipe","fileUrl","getDownloadURL","toPromise","docRef","collection","doc","set","uid","patientUid","subscribe","_this6","toast","create","message","duration","position","color","present","createId","then","useruid","docu","med","medref","add","ɵɵdirectiveInject","i1","AngularFirestore","i2","AngularFireStorage","i3","ToastController","LoadingController","selectors","decls","vars","consts","template","DocumentPage_Template","rf","ctx","DocumentPage_Template_input_change_24_listener","ɵɵtemplate","DocumentPage_div_25_Template","DocumentPage_Template_ion_input_ngModelChange_29_listener","DocumentPage_Template_ion_button_click_30_listener","DocumentPage_ion_item_32_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\document\\document.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\document\\document.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { inscritUid } from '../login/login.page';\nimport { patientUidA } from '../patient/patient.page';\nimport { getDocuments, getDocumentsforpatient, getInscritByUid, getPatientByUid, medecinUid } from 'src/firebaseConfig';\n\ninterface DocumentData {\n  url: string;\n  description: string;\n  useruid: string;\n}\n interface PatientData {\n  uid:string;\n  nom: string;\n  prenom: string;\n  age: number;\n  sexe: string;\n  groupeSanguin: string;\n  situationFamiliale: string;\n  profession: string;\n  email: string;\n  telephone: string;\n  telephone2: string;\n  numeroAssurance: string;\n  adresse: string;\n  note: string;\n  antecedentsMedicaux: string;\n  antecedentsChirurgicaux: string;\n  antecedentsFamiliaux: string;\n  autresAntecedents: string;\n  medicaments: string;\n  useruid:string;\n}\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.page.html',\n  styleUrls: ['./document.page.scss'],\n})\nexport class DocumentPage implements OnInit {\n  documents: DocumentData[] = [];\n  documentDescription: string = '';\n  selectedFile: File | null = null;\n  description: any;\n  patient!: PatientData |null ;\n  searchDescription:string='';\n\n  constructor(\n    private firestore: AngularFirestore,\n    private storage: AngularFireStorage,\n    private toastController: ToastController,\n    private loadingController: LoadingController\n  ) {}\n\n  async ngOnInit() {\n    this.getDocuments();\n    const patient=await getInscritByUid(this.firestore,inscritUid) ;\n    if(patient){\nthis.patient=patient\n    }\n  }\n\n  async getDocuments() {\n    const documents = await getDocumentsforpatient(this.firestore, inscritUid);\n    if (documents) {\n      this.documents = documents;\n    }\n  }\n\n\n  \n  async searchDocumentsByDescription(event: any) {\n  if (!event || !event.target || !event.target.value) {\n    console.log('Veuillez entrer une description.');\n    return;\n  }\n\n  const description = event.target.value;\n\n  try {\n    // Filtrer les documents pour la description spécifiée\n    const filteredDocuments = this.documents.filter(document => document.description === description);\n\n    if (filteredDocuments.length > 0) {\n      console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n      this.documents = filteredDocuments;\n    } else {\n      console.log('Aucun document trouvé avec la description', description);\n    }\n  } catch (error) {\n    console.error('Erreur lors de la recherche des documents pour la description :', error);\n  }\n}\n\nasync search(event: CustomEvent) {\n  const searchTerm = (event.target as HTMLInputElement).value.toLowerCase().trim();\n  if (!searchTerm) {\n    // Si la barre de recherche est vide, réinitialiser la liste des documents\n    this.getDocuments();\n    return;\n  }\n\n  // Filtrer les documents dont la description commence par le terme de recherche\n  this.documents = this.documents.filter(documents =>\n    documents.description.toLowerCase().startsWith(searchTerm)\n  );\n}\nasync onFileSelected(event: any) {\n  const file: File | null = event.target.files[0];\n  this.selectedFile = file;\n\n  if (file instanceof File) {\n    try {\n      // Générer un ID unique pour le fichier\n      const fileId = Math.random().toString(36).substring(2);\n      const filePath = `documents/${fileId}_${file.name}`;\n\n      // Uploader le fichier dans Firebase Storage\n      const fileRef = this.storage.ref(filePath);\n      const uploadTask = this.storage.upload(filePath, file);\n\n      // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n      uploadTask.snapshotChanges().pipe(\n        finalize(async () => {\n          const fileUrl = await fileRef.getDownloadURL().toPromise();\n\n          // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n          console.log('Lien permanent du fichier :', fileUrl);\n\n          // Enregistrer la description dans une variable\n          const description = this.description;\n\n          // Vérifier si la description est fournie\n          if (description) {\n            // Ajouter le document avec le lien permanent dans Firestore\n            const docRef = this.firestore.collection('documents').doc(fileId);\n            await docRef.set({\n              medecinUid: medecinUid.uid,\n              patientUid: inscritUid,\n              url: fileUrl,\n              description: description\n            });\n            this.getDocuments();\n            console.log('Document ajouté avec succès.');\n          } else {\n            console.error('La description est obligatoire pour télécharger le fichier.');\n          }\n        })\n      ).subscribe();\n\n    } catch (error) {\n      console.error('Erreur lors de l\\'ajout du document :', error);\n    }\n  }\n}\n\nasync envoyer() {\n  if (!this.selectedFile) {\n    console.error('Aucun fichier sélectionné.');\n    return;\n  }\n\n  // Vérifier si la description est vide\n  if (!this.description) {\n    const toast = await this.toastController.create({\n      message: 'La description est obligatoire.',\n      duration: 1500,\n      position: 'top',\n      color: 'danger',\n    });\n    await toast.present();\n    return;\n  }\n\n  // Vérifier si le patient est défini et a un useruid valide\n  if (!this.patient || !this.patient.uid) {\n    console.error('Patient non défini ou useruid non valide.');\n    return;\n  }\n\n  if (!this.documentDescription) {\n    console.error('description non fournie');\n    return;\n  }\n\n  // Générer un ID unique pour le fichier\n  const fileId = this.firestore.createId();\n\n  // Chemin de stockage dans Firebase Storage\n  const filePath = `documents/${fileId}`;\n\n  try {\n    // Télécharger le fichier vers Firebase Storage\n    const fileRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, this.selectedFile);\n\n    // Attendre la fin du téléchargement\n    await uploadTask.then();\n\n    // Récupérer l'URL du fichier téléchargé\n    const fileUrl = await fileRef.getDownloadURL().toPromise();\n\n    // Vérifier que fileUrl est défini\n    if (!fileUrl) {\n      console.error('Lien permanent du fichier non disponible.');\n      return;\n    }\n\n    // Enregistrer les métadonnées dans Firestore\n    await this.firestore.collection('documents').doc(fileId).set({\n      useruid: this.patient.uid,\n      url: fileUrl,\n      description: this.description,\n      // Ajoutez d'autres champs si nécessaire\n    });\n\n    console.log('Fichier téléchargé et enregistré avec succès.');\n\n    const docu = {\n      url: fileUrl,\n      description: this.description,\n      med: medecinUid.uid,\n    };\n    const medref = await this.firestore.collection('documents').add(docu);\n  } catch (error) {\n    console.error('Erreur lors de l\\'envoi du fichier :', error);\n  }\n}\n\n\n\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-button routerLink=\"/tabs/tab1\" fill=\"clear\">Retour</ion-button>\n    </ion-buttons>\n    <ion-title>Documents</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-card>\n  <ion-card-content>\n    <ion-card-header>\n      <br>\n      <ion-searchbar placeholder=\"Rechercher\" ></ion-searchbar>\n      <br>\n    </ion-card-header>\n        <ion-card class=\"upload-document\">\n          <ion-card-content>\n            \n\n            <br><br> \n            <br><br> <br><br> <br><br> \n              <input type=\"file\" id=\"fileInput\" name=\"fileInput\" accept=\"*/*\" (change)=\"onFileSelected($event)\">\n\n        </ion-card-content>\n        </ion-card>\n\n        <div *ngIf=\"selectedFile\">\n          <ion-input type=\"text\" [(ngModel)]=\"description\" placeholder=\"Enter document description\" required></ion-input>\n          <ion-button class=\"ion-text-end\" (click)=\"envoyer()\">\n            <ion-icon name=\"send-outline\"></ion-icon>\n            &nbsp;&nbsp;Envoyer\n          </ion-button>\n          \n          <img [src]=\"selectedFile\" alt=\"Selected Image\">\n        </div>\n       <ion-card>\n        <div>\n          <ion-list>\n            <ion-input type=\"text\" [(ngModel)]=\"searchDescription\"placeholder=\"entrer une description a rechercher\" color=\"primary\" ></ion-input>\n<ion-button (click)=\"searchDocumentsByDescription(searchDescription)\">Rechercher</ion-button>\n            <ion-item *ngFor=\"let document of documents\">\n              <img [src]=\"document.url\" width=\"60\" height=\"60\">\n              <ion-label>{{ document.description }}</ion-label>\n              <a float=\"right\" [href]=\"document.url\"  target=\"_blank\" > Voir détail..</a>\n            </ion-item>\n            <br><br>\n          </ion-list>\n        </div>\n       </ion-card>\n      </ion-card-content>\n    </ion-card>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}