{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/MacBook Air/Desktop/shifai1VV/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _DocumentPage;\nimport { getDocumentsforpatient, medecinUid } from 'src/firebaseConfig';\nimport { inscritUid } from '../login/login.page';\nimport { finalize } from 'rxjs';\nimport { patientUidA } from '../patient/patient.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/fire/compat/storage\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction DocumentPage_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 9);\n    i0.ɵɵelementStart(2, \"ion-item\")(3, \"ion-label\", 10);\n    i0.ɵɵtext(4, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function DocumentPage_div_12_Template_ion_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.documentDescription = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"ion-button\", 12);\n    i0.ɵɵlistener(\"click\", function DocumentPage_div_12_Template_ion_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.envoyer());\n    });\n    i0.ɵɵtext(7, \"Enregistrer\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r0.selectedFileUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.documentDescription);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.selectedFile || !ctx_r0.documentDescription);\n  }\n}\nfunction DocumentPage_ion_item_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelement(1, \"img\", 13);\n    i0.ɵɵelementStart(2, \"ion-label\")(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"a\", 14);\n    i0.ɵɵtext(6, \" Voir d\\u00E9tail..\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const document_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", document_r5.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(document_r5.description);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"href\", document_r5.url, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class DocumentPage {\n  constructor(route, firestore, router, toastController, storage, loadingController) {\n    this.route = route;\n    this.firestore = firestore;\n    this.router = router;\n    this.toastController = toastController;\n    this.storage = storage;\n    this.loadingController = loadingController;\n    this.documents = [];\n    this.searchDescription = '';\n    this.documentDescription = '';\n    this.selectedFile = null;\n    this.selectedFileUrl = null;\n    this.document = {\n      url: '',\n      description: '',\n      useruid: inscritUid\n    };\n    this.description = '';\n  }\n  ngOnInit() {\n    this.getdocument();\n  }\n  getdocument() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const documents = yield getDocumentsforpatient(_this.firestore, inscritUid);\n      if (documents) {\n        _this.documents = documents;\n      }\n    })();\n  }\n  onFileSelected(event) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const file = event.target.files[0];\n      _this2.selectedFile = file;\n      if (file instanceof File) {\n        try {\n          // Générer un ID unique pour le fichier\n          const fileId = Math.random().toString(36).substring(2);\n          const filePath = `documents/${fileId}_${file.name}`;\n          // Uploader le fichier dans Firebase Storage\n          const fileRef = _this2.storage.ref(filePath);\n          const uploadTask = _this2.storage.upload(filePath, file);\n          // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n          uploadTask.snapshotChanges().pipe(finalize( /*#__PURE__*/_asyncToGenerator(function* () {\n            const fileUrl = yield fileRef.getDownloadURL().toPromise();\n            // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n            console.log('Lien permanent du fichier :', fileUrl);\n            // Enregistrer la description dans une variable\n            const description = _this2.description;\n            // Vérifier si la description est fournie\n            if (description) {\n              // Ajouter le document avec le lien permanent dans Firestore\n              const docRef = _this2.firestore.collection('medecin').doc(medecinUid.uid).collection('documents').doc();\n              yield docRef.set({\n                medecinUid: medecinUid.uid,\n                patientUid: patientUidA,\n                url: fileUrl,\n                description: description\n              });\n              _this2.getdocument();\n              console.log('Document ajouté avec succès.');\n            } else {\n              console.error('La description est obligatoire pour télécharger le fichier.');\n            }\n          }))).subscribe();\n        } catch (error) {\n          console.error('Erreur lors de l\\'ajout du document :', error);\n        }\n      }\n    })();\n  }\n  searchDocumentsByDescription(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Type guard to ensure that the event object is not null or undefined\n      if (!event || !event.target || !event.target.value) {\n        console.log('Veuillez entrer une description.');\n        return;\n      }\n      const description = event.target.value;\n      try {\n        // Filtrer les documents pour la description spécifiée\n        const filteredDocuments = _this3.documents.filter(document => document.description === description);\n        if (filteredDocuments.length > 0) {\n          console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n          _this3.documents = filteredDocuments;\n        } else {\n          console.log('Aucun document trouvé avec la description', description);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la recherche des documents pour la description :', error);\n      }\n    })();\n  }\n  search(event) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const searchTerm = event.target.value.toLowerCase().trim();\n      if (!searchTerm) {\n        // Si la barre de recherche est vide, réinitialiser la liste des patients\n        _this4.getdocument();\n        return;\n      }\n      // Filtrer les patients dont le nom commence par le terme de recherche\n      _this4.documents = _this4.documents.filter(documents => documents.description.toLowerCase().startsWith(searchTerm));\n    })();\n  }\n  envoyer() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.selectedFile) {\n        console.error('Aucun fichier sélectionné.');\n        return;\n      }\n      // Vérifier si la description est vide\n      if (!_this5.documentDescription) {\n        const toast = yield _this5.toastController.create({\n          message: 'La description est obligatoire.',\n          duration: 1500,\n          // Durée du toast en millisecondes\n          position: 'top',\n          // Position du toast (peut être 'top', 'bottom', 'middle')\n          color: 'danger' // Couleur du toast\n        });\n        yield toast.present();\n        return;\n      }\n      // Générer un ID unique pour le fichier\n      const fileId = _this5.firestore.createId();\n      // Chemin de stockage dans Firebase Storage\n      const filePath = `documents/${fileId}`;\n      try {\n        // Télécharger le fichier vers Firebase Storage\n        const fileRef = _this5.storage.ref(filePath);\n        const uploadTask = _this5.storage.upload(filePath, _this5.selectedFile);\n        // Attendre la fin du téléchargement\n        yield uploadTask.then();\n        // Récupérer l'URL du fichier téléchargé\n        const fileUrl = yield fileRef.getDownloadURL().toPromise();\n        // Enregistrer les métadonnées dans Firestore\n        yield _this5.firestore.collection('documents').doc(fileId).set({\n          uid: fileId,\n          useruid: patientUidA,\n          url: fileUrl,\n          description: _this5.documentDescription\n          // Ajoutez d'autres champs si nécessaire\n        });\n        // Réinitialiser les valeurs\n        _this5.selectedFile = null;\n        _this5.selectedFileUrl = null;\n        _this5.documentDescription = '';\n        // Afficher un message de succès\n        const toast = yield _this5.toastController.create({\n          message: 'Le document a été enregistré avec succès.',\n          duration: 1500,\n          // Durée du toast en millisecondes\n          position: 'top',\n          // Position du toast (peut être 'top', 'bottom', 'middle')\n          color: 'success' // Couleur du toast\n        });\n        yield toast.present();\n        // Actualiser la liste des documents\n        _this5.getdocument();\n      } catch (error) {\n        console.error('Erreur lors de l\\'envoi du fichier :', error);\n        // Afficher un message d'erreur\n        const toast = yield _this5.toastController.create({\n          message: 'Une erreur est survenue lors de l\\'envoi du fichier.',\n          duration: 1500,\n          // Durée du toast en millisecondes\n          position: 'top',\n          // Position du toast (peut être 'top', 'bottom', 'middle')\n          color: 'danger' // Couleur du toast\n        });\n        yield toast.present();\n      }\n    })();\n  }\n}\n_DocumentPage = DocumentPage;\n_DocumentPage.ɵfac = function DocumentPage_Factory(t) {\n  return new (t || _DocumentPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i4.AngularFireStorage), i0.ɵɵdirectiveInject(i3.LoadingController));\n};\n_DocumentPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _DocumentPage,\n  selectors: [[\"app-document\"]],\n  decls: 21,\n  vars: 4,\n  consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"text\", \"Retour\"], [3, \"fullscreen\"], [1, \"upload-document\"], [\"type\", \"file\", \"id\", \"fileInput\", \"name\", \"fileInput\", \"accept\", \"*/*\", 3, \"change\"], [4, \"ngIf\"], [\"placeholder\", \"Rechercher\", 3, \"ionInput\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"Selected Image\", 3, \"src\"], [\"position\", \"floating\"], [\"type\", \"text\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"expand\", \"full\", 3, \"disabled\", \"click\"], [\"width\", \"60\", \"height\", \"60\", 3, \"src\"], [\"float\", \"right\", \"target\", \"_blank\", 3, \"href\"]],\n  template: function DocumentPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Mes Documents\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 1);\n      i0.ɵɵelement(5, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"ion-grid\")(8, \"ion-row\")(9, \"ion-col\")(10, \"ion-card\", 4)(11, \"input\", 5);\n      i0.ɵɵlistener(\"change\", function DocumentPage_Template_input_change_11_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, DocumentPage_div_12_Template, 8, 3, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"ion-row\")(14, \"ion-col\")(15, \"ion-col\");\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"ion-searchbar\", 7);\n      i0.ɵɵlistener(\"ionInput\", function DocumentPage_Template_ion_searchbar_ionInput_17_listener($event) {\n        return ctx.searchDocumentsByDescription($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"ion-list\");\n      i0.ɵɵtemplate(20, DocumentPage_ion_item_20_Template, 7, 3, \"ion-item\", 8);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.selectedFile);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.documents);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.NgControlStatus, i6.RequiredValidator, i6.NgModel, i3.IonButton, i3.IonCard, i3.IonCol, i3.IonContent, i3.IonGrid, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonRow, i3.IonSearchbar, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.IonBackButton],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["getDocumentsforpatient","medecinUid","inscritUid","finalize","patientUidA","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DocumentPage_div_12_Template_ion_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","documentDescription","DocumentPage_div_12_Template_ion_button_click_6_listener","ctx_r4","envoyer","ɵɵadvance","ɵɵproperty","ctx_r0","selectedFileUrl","ɵɵsanitizeUrl","selectedFile","document_r5","url","ɵɵtextInterpolate","description","DocumentPage","constructor","route","firestore","router","toastController","storage","loadingController","documents","searchDescription","document","useruid","ngOnInit","getdocument","_this","_asyncToGenerator","onFileSelected","event","_this2","file","target","files","File","fileId","Math","random","toString","substring","filePath","name","fileRef","ref","uploadTask","upload","snapshotChanges","pipe","fileUrl","getDownloadURL","toPromise","console","log","docRef","collection","doc","uid","set","patientUid","error","subscribe","searchDocumentsByDescription","_this3","value","filteredDocuments","filter","length","search","_this4","searchTerm","toLowerCase","trim","startsWith","_this5","toast","create","message","duration","position","color","present","createId","then","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AngularFirestore","Router","i3","ToastController","i4","AngularFireStorage","LoadingController","selectors","decls","vars","consts","template","DocumentPage_Template","rf","ctx","DocumentPage_Template_input_change_11_listener","ɵɵtemplate","DocumentPage_div_12_Template","DocumentPage_Template_ion_searchbar_ionInput_17_listener","DocumentPage_ion_item_20_Template"],"sources":["C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\document\\document.page.ts","C:\\Users\\MacBook Air\\Desktop\\shifai1VV\\src\\app\\document\\document.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { getDocumentsforpatient, firestore, medecinUid } from 'src/firebaseConfig';\nimport { inscritUid } from '../login/login.page';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { AngularFireStorage } from '@angular/fire/compat/storage';\nimport { finalize } from 'rxjs';\nimport { patientUidA } from '../patient/patient.page';\n\ninterface Documentdata {\n  url: string;\n  description: string;\n  useruid: string;\n}\n\n@Component({\n  selector: 'app-document',\n  templateUrl: './document.page.html',\n  styleUrls: ['./document.page.scss'],\n})\nexport class DocumentPage implements OnInit {\n  documents: Documentdata[] = [];\n  searchDescription: string = '';\n  documentDescription: string = '';\n  selectedFile: File | null = null;\n  selectedFileUrl: string | null = null;\n  document: Documentdata = { url: '', description: '', useruid: inscritUid };\n  description: string='';\n\n  constructor(\n    private route: ActivatedRoute,\n    private firestore: AngularFirestore,\n    private router: Router,\n    private toastController: ToastController,\n    private storage: AngularFireStorage,\n    private loadingController :LoadingController\n  ) {}\n\n  ngOnInit() {\n    this.getdocument();\n  }\n\n  async getdocument() {\n    const documents = await getDocumentsforpatient(this.firestore, inscritUid);\n    if (documents) {\n      this.documents = documents;\n    }\n  }\n  async onFileSelected(event: any) {\n    const file: File | null = event.target.files[0];\n    this.selectedFile = file;\n  \n    if (file instanceof File) {\n      try {\n        // Générer un ID unique pour le fichier\n        const fileId = Math.random().toString(36).substring(2);\n        const filePath = `documents/${fileId}_${file.name}`;\n  \n        // Uploader le fichier dans Firebase Storage\n        const fileRef = this.storage.ref(filePath);\n        const uploadTask = this.storage.upload(filePath, file);\n  \n        // Récupérer l'URL permanente du fichier une fois qu'il est téléchargé\n        uploadTask.snapshotChanges().pipe(\n          finalize(async () => {\n            const fileUrl = await fileRef.getDownloadURL().toPromise();\n  \n            // Maintenant, vous pouvez utiliser fileUrl comme lien permanent pour le fichier\n            console.log('Lien permanent du fichier :', fileUrl);\n  \n            // Enregistrer la description dans une variable\n            const description = this.description;\n  \n            // Vérifier si la description est fournie\n            if (description) {\n              // Ajouter le document avec le lien permanent dans Firestore\n              const docRef = this.firestore.collection('medecin').doc(medecinUid.uid).collection('documents').doc();\n              await docRef.set({\n                medecinUid: medecinUid.uid,\n                patientUid: patientUidA,\n                url: fileUrl,\n                description: description\n              });\n              this.getdocument();\n              console.log('Document ajouté avec succès.');\n            } else {\n              console.error('La description est obligatoire pour télécharger le fichier.');\n            }\n          })\n        ).subscribe();\n  \n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du document :', error);\n      }\n    }\n  }\n\n  async searchDocumentsByDescription(event: any) {\n    // Type guard to ensure that the event object is not null or undefined\n    if (!event || !event.target || !event.target.value) {\n      console.log('Veuillez entrer une description.');\n      return;\n    }\n  \n    const description = event.target.value;\n  \n    try {\n      // Filtrer les documents pour la description spécifiée\n      const filteredDocuments = this.documents.filter(document => document.description === description);\n  \n      if (filteredDocuments.length > 0) {\n        console.log('Documents trouvés avec la description', description, ':', filteredDocuments);\n        this.documents = filteredDocuments;\n      } else {\n        console.log('Aucun document trouvé avec la description', description);\n      }\n    } catch (error) {\n      console.error('Erreur lors de la recherche des documents pour la description :', error);\n    }\n  }\n\n  async search(event: CustomEvent) {\n    const searchTerm = (event.target as HTMLInputElement).value.toLowerCase().trim();\n    if (!searchTerm) {\n      // Si la barre de recherche est vide, réinitialiser la liste des patients\n      this.getdocument();\n      return;\n    }\n\n    // Filtrer les patients dont le nom commence par le terme de recherche\n    this.documents = this.documents.filter(documents =>\n      documents.description.toLowerCase().startsWith(searchTerm)\n    );\n  }\n\n  async envoyer() {\n    if (!this.selectedFile) {\n      console.error('Aucun fichier sélectionné.');\n      return;\n    }\n\n    // Vérifier si la description est vide\n    if (!this.documentDescription) {\n      const toast = await this.toastController.create({\n        message: 'La description est obligatoire.',\n        duration: 1500, // Durée du toast en millisecondes\n        position: 'top', // Position du toast (peut être 'top', 'bottom', 'middle')\n        color: 'danger', // Couleur du toast\n      });\n      await toast.present();\n      return;\n    }\n\n    // Générer un ID unique pour le fichier\n    const fileId = this.firestore.createId();\n\n    // Chemin de stockage dans Firebase Storage\n    const filePath = `documents/${fileId}`;\n\n    try {\n      // Télécharger le fichier vers Firebase Storage\nconst fileRef = this.storage.ref(filePath);\n      const uploadTask = this.storage.upload(filePath, this.selectedFile);\n\n      // Attendre la fin du téléchargement\n      await uploadTask.then();\n\n      // Récupérer l'URL du fichier téléchargé\n      const fileUrl = await fileRef.getDownloadURL().toPromise();\n\n      // Enregistrer les métadonnées dans Firestore\n      await this.firestore.collection('documents').doc(fileId).set({\n        uid:fileId,\n        useruid:patientUidA,\n        url: fileUrl,\n        description: this.documentDescription,\n        // Ajoutez d'autres champs si nécessaire\n      });\n\n      // Réinitialiser les valeurs\n      this.selectedFile = null;\n      this.selectedFileUrl = null;\n      this.documentDescription = '';\n\n      // Afficher un message de succès\n      const toast = await this.toastController.create({\n        message: 'Le document a été enregistré avec succès.',\n        duration: 1500, // Durée du toast en millisecondes\n        position: 'top', // Position du toast (peut être 'top', 'bottom', 'middle')\n        color: 'success', // Couleur du toast\n      });\n      await toast.present();\n\n      // Actualiser la liste des documents\n      this.getdocument();\n\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du fichier :', error);\n\n      // Afficher un message d'erreur\n      const toast = await this.toastController.create({\n        message: 'Une erreur est survenue lors de l\\'envoi du fichier.',\n        duration: 1500, // Durée du toast en millisecondes\n        position: 'top', // Position du toast (peut être 'top', 'bottom', 'middle')\n        color: 'danger', // Couleur du toast\n      });\n      await toast.present();\n    }\n  }\n}","<ion-header [translucent]=\"true\">\n  <ion-toolbar>\n    <ion-title>Mes Documents</ion-title>\n    <ion-button slot=\"start\">\n      <ion-back-button text=\"Retour\"></ion-back-button>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-grid>\n    <ion-row>\n      <ion-col>\n        <ion-card class=\"upload-document\">\n          <input type=\"file\" id=\"fileInput\" name=\"fileInput\" accept=\"*/*\" (change)=\"onFileSelected($event)\">\n          <div *ngIf=\"selectedFile\">\n            <img [src]=\"selectedFileUrl\" alt=\"Selected Image\">\n            <ion-item>\n              <ion-label position=\"floating\">Description</ion-label>\n              <ion-input type=\"text\" [(ngModel)]=\"documentDescription\" required></ion-input>\n            </ion-item>\n            <ion-button expand=\"full\" (click)=\"envoyer()\" [disabled]=\"!selectedFile || !documentDescription\">Enregistrer</ion-button>\n          </div>\n        </ion-card>\n      \n\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-col>\n          <br>\n          <ion-searchbar placeholder=\"Rechercher\" (ionInput)=\"searchDocumentsByDescription($event)\"></ion-searchbar>          \n          <br>\n        </ion-col>\n        <ion-list>\n          <ion-item *ngFor=\"let document of documents\">\n            <img [src]=\"document.url\" width=\"60\" height=\"60\">\n            <ion-label><h2>{{ document.description }}</h2></ion-label>\n            <a float=\"right\" [href]=\"document.url\" target=\"_blank\"> Voir détail..</a>\n          </ion-item>\n        </ion-list>\n\n\n      </ion-col>\n    </ion-row>\n    </ion-grid>\n</ion-content>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}